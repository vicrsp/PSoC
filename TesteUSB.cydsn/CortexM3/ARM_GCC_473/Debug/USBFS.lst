ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"USBFS.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	USBFS_initVar
  19              		.bss
  20              		.type	USBFS_initVar, %object
  21              		.size	USBFS_initVar, 1
  22              	USBFS_initVar:
  23 0000 00       		.space	1
  24              		.section	.text.USBFS_Start,"ax",%progbits
  25              		.align	2
  26              		.global	USBFS_Start
  27              		.thumb
  28              		.thumb_func
  29              		.type	USBFS_Start, %function
  30              	USBFS_Start:
  31              	.LFB0:
  32              		.file 1 ".\\Generated_Source\\PSoC5\\USBFS.c"
   1:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/USBFS.c **** * File Name: USBFS.c
   3:.\Generated_Source\PSoC5/USBFS.c **** * Version 2.70
   4:.\Generated_Source\PSoC5/USBFS.c **** *
   5:.\Generated_Source\PSoC5/USBFS.c **** * Description:
   6:.\Generated_Source\PSoC5/USBFS.c **** *  API for USBFS Component.
   7:.\Generated_Source\PSoC5/USBFS.c **** *
   8:.\Generated_Source\PSoC5/USBFS.c **** * Note:
   9:.\Generated_Source\PSoC5/USBFS.c **** *  Many of the functions use endpoint number.  RAM arrays are sized with 9
  10:.\Generated_Source\PSoC5/USBFS.c **** *  elements so they are indexed directly by epNumber.  The SIE and ARB
  11:.\Generated_Source\PSoC5/USBFS.c **** *  registers are indexed by variations of epNumber - 1.
  12:.\Generated_Source\PSoC5/USBFS.c **** *
  13:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
  14:.\Generated_Source\PSoC5/USBFS.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  15:.\Generated_Source\PSoC5/USBFS.c **** * You may use this file only in accordance with the license, terms, conditions,
  16:.\Generated_Source\PSoC5/USBFS.c **** * disclaimers, and limitations in the end user license agreement accompanying
  17:.\Generated_Source\PSoC5/USBFS.c **** * the software package with which this file was provided.
  18:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
  19:.\Generated_Source\PSoC5/USBFS.c **** 
  20:.\Generated_Source\PSoC5/USBFS.c **** #include <CyDmac.h>
  21:.\Generated_Source\PSoC5/USBFS.c **** #include "USBFS.h"
  22:.\Generated_Source\PSoC5/USBFS.c **** #include "USBFS_pvt.h"
  23:.\Generated_Source\PSoC5/USBFS.c **** #include "USBFS_hid.h"
  24:.\Generated_Source\PSoC5/USBFS.c **** #if(USBFS_DMA1_REMOVE == 0u)
  25:.\Generated_Source\PSoC5/USBFS.c ****     #include "USBFS_ep1_dma.h"
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 2


  26:.\Generated_Source\PSoC5/USBFS.c **** #endif   /*  USBFS_DMA1_REMOVE */
  27:.\Generated_Source\PSoC5/USBFS.c **** #if(USBFS_DMA2_REMOVE == 0u)
  28:.\Generated_Source\PSoC5/USBFS.c ****     #include "USBFS_ep2_dma.h"
  29:.\Generated_Source\PSoC5/USBFS.c **** #endif   /*  USBFS_DMA2_REMOVE */
  30:.\Generated_Source\PSoC5/USBFS.c **** #if(USBFS_DMA3_REMOVE == 0u)
  31:.\Generated_Source\PSoC5/USBFS.c ****     #include "USBFS_ep3_dma.h"
  32:.\Generated_Source\PSoC5/USBFS.c **** #endif   /*  USBFS_DMA3_REMOVE */
  33:.\Generated_Source\PSoC5/USBFS.c **** #if(USBFS_DMA4_REMOVE == 0u)
  34:.\Generated_Source\PSoC5/USBFS.c ****     #include "USBFS_ep4_dma.h"
  35:.\Generated_Source\PSoC5/USBFS.c **** #endif   /*  USBFS_DMA4_REMOVE */
  36:.\Generated_Source\PSoC5/USBFS.c **** #if(USBFS_DMA5_REMOVE == 0u)
  37:.\Generated_Source\PSoC5/USBFS.c ****     #include "USBFS_ep5_dma.h"
  38:.\Generated_Source\PSoC5/USBFS.c **** #endif   /*  USBFS_DMA5_REMOVE */
  39:.\Generated_Source\PSoC5/USBFS.c **** #if(USBFS_DMA6_REMOVE == 0u)
  40:.\Generated_Source\PSoC5/USBFS.c ****     #include "USBFS_ep6_dma.h"
  41:.\Generated_Source\PSoC5/USBFS.c **** #endif   /*  USBFS_DMA6_REMOVE */
  42:.\Generated_Source\PSoC5/USBFS.c **** #if(USBFS_DMA7_REMOVE == 0u)
  43:.\Generated_Source\PSoC5/USBFS.c ****     #include "USBFS_ep7_dma.h"
  44:.\Generated_Source\PSoC5/USBFS.c **** #endif   /*  USBFS_DMA7_REMOVE */
  45:.\Generated_Source\PSoC5/USBFS.c **** #if(USBFS_DMA8_REMOVE == 0u)
  46:.\Generated_Source\PSoC5/USBFS.c ****     #include "USBFS_ep8_dma.h"
  47:.\Generated_Source\PSoC5/USBFS.c **** #endif   /*  USBFS_DMA8_REMOVE */
  48:.\Generated_Source\PSoC5/USBFS.c **** #if((USBFS_EP_MM == USBFS__EP_DMAAUTO) && (USBFS_EP_DMA_AUTO_OPT == 0u))
  49:.\Generated_Source\PSoC5/USBFS.c ****     #include "USBFS_EP_DMA_Done_isr.h"
  50:.\Generated_Source\PSoC5/USBFS.c ****     #include "USBFS_EP8_DMA_Done_SR.h"
  51:.\Generated_Source\PSoC5/USBFS.c ****     #include "USBFS_EP17_DMA_Done_SR.h"
  52:.\Generated_Source\PSoC5/USBFS.c **** #endif /* ((USBFS_EP_MM == USBFS__EP_DMAAUTO) && (USBFS_EP_DMA_AUTO_OPT == 0u)) */
  53:.\Generated_Source\PSoC5/USBFS.c **** 
  54:.\Generated_Source\PSoC5/USBFS.c **** 
  55:.\Generated_Source\PSoC5/USBFS.c **** /***************************************
  56:.\Generated_Source\PSoC5/USBFS.c **** * Global data allocation
  57:.\Generated_Source\PSoC5/USBFS.c **** ***************************************/
  58:.\Generated_Source\PSoC5/USBFS.c **** 
  59:.\Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_initVar = 0u;
  60:.\Generated_Source\PSoC5/USBFS.c **** #if(USBFS_EP_MM != USBFS__EP_MANUAL)
  61:.\Generated_Source\PSoC5/USBFS.c ****     uint8 USBFS_DmaChan[USBFS_MAX_EP];
  62:.\Generated_Source\PSoC5/USBFS.c ****     uint8 USBFS_DmaTd[USBFS_MAX_EP];
  63:.\Generated_Source\PSoC5/USBFS.c **** #endif /*  USBFS_EP_MM */
  64:.\Generated_Source\PSoC5/USBFS.c **** #if((USBFS_EP_MM == USBFS__EP_DMAAUTO) && (USBFS_EP_DMA_AUTO_OPT == 0u))
  65:.\Generated_Source\PSoC5/USBFS.c ****     static uint8 clearInDataRdyStatus = USBFS_ARB_EPX_CFG_DEFAULT;
  66:.\Generated_Source\PSoC5/USBFS.c ****     uint8 USBFS_DmaNextTd[USBFS_MAX_EP];
  67:.\Generated_Source\PSoC5/USBFS.c ****     const uint8 USBFS_epX_TD_TERMOUT_EN[USBFS_MAX_EP] =
  68:.\Generated_Source\PSoC5/USBFS.c ****     {   0u,
  69:.\Generated_Source\PSoC5/USBFS.c ****         USBFS_ep1_TD_TERMOUT_EN,
  70:.\Generated_Source\PSoC5/USBFS.c ****         USBFS_ep2_TD_TERMOUT_EN,
  71:.\Generated_Source\PSoC5/USBFS.c ****         USBFS_ep3_TD_TERMOUT_EN,
  72:.\Generated_Source\PSoC5/USBFS.c ****         USBFS_ep4_TD_TERMOUT_EN,
  73:.\Generated_Source\PSoC5/USBFS.c ****         USBFS_ep5_TD_TERMOUT_EN,
  74:.\Generated_Source\PSoC5/USBFS.c ****         USBFS_ep6_TD_TERMOUT_EN,
  75:.\Generated_Source\PSoC5/USBFS.c ****         USBFS_ep7_TD_TERMOUT_EN,
  76:.\Generated_Source\PSoC5/USBFS.c ****         USBFS_ep8_TD_TERMOUT_EN
  77:.\Generated_Source\PSoC5/USBFS.c ****     };
  78:.\Generated_Source\PSoC5/USBFS.c ****     volatile uint16 USBFS_inLength[USBFS_MAX_EP];
  79:.\Generated_Source\PSoC5/USBFS.c ****     const uint8 *USBFS_inDataPointer[USBFS_MAX_EP];
  80:.\Generated_Source\PSoC5/USBFS.c ****     volatile uint8 USBFS_inBufFull[USBFS_MAX_EP];
  81:.\Generated_Source\PSoC5/USBFS.c **** #endif /* ((USBFS_EP_MM == USBFS__EP_DMAAUTO) && (USBFS_EP_DMA_AUTO_OPT == 0u)) */
  82:.\Generated_Source\PSoC5/USBFS.c **** 
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 3


  83:.\Generated_Source\PSoC5/USBFS.c **** 
  84:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
  85:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_Start
  86:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
  87:.\Generated_Source\PSoC5/USBFS.c **** *
  88:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
  89:.\Generated_Source\PSoC5/USBFS.c **** *  This function initialize the USB SIE, arbiter and the
  90:.\Generated_Source\PSoC5/USBFS.c **** *  endpoint APIs, including setting the D+ Pullup
  91:.\Generated_Source\PSoC5/USBFS.c **** *
  92:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
  93:.\Generated_Source\PSoC5/USBFS.c **** *  device: Contains the device number of the desired device descriptor.
  94:.\Generated_Source\PSoC5/USBFS.c **** *          The device number can be found in the Device Descriptor Tab of
  95:.\Generated_Source\PSoC5/USBFS.c **** *          "Configure" dialog, under the settings of desired Device Descriptor,
  96:.\Generated_Source\PSoC5/USBFS.c **** *          in the "Device Number" field.
  97:.\Generated_Source\PSoC5/USBFS.c **** *  mode: The operating voltage. This determines whether the voltage regulator
  98:.\Generated_Source\PSoC5/USBFS.c **** *        is enabled for 5V operation or if pass through mode is used for 3.3V
  99:.\Generated_Source\PSoC5/USBFS.c **** *        operation. Symbolic names and their associated values are given in the
 100:.\Generated_Source\PSoC5/USBFS.c **** *        following table.
 101:.\Generated_Source\PSoC5/USBFS.c **** *       USBFS_3V_OPERATION - Disable voltage regulator and pass-thru
 102:.\Generated_Source\PSoC5/USBFS.c **** *                                       Vcc for pull-up
 103:.\Generated_Source\PSoC5/USBFS.c **** *       USBFS_5V_OPERATION - Enable voltage regulator and use
 104:.\Generated_Source\PSoC5/USBFS.c **** *                                       regulator for pull-up
 105:.\Generated_Source\PSoC5/USBFS.c **** *       USBFS_DWR_VDDD_OPERATION - Enable or Disable voltage
 106:.\Generated_Source\PSoC5/USBFS.c **** *                         regulator depend on Vddd Voltage configuration in DWR.
 107:.\Generated_Source\PSoC5/USBFS.c **** *
 108:.\Generated_Source\PSoC5/USBFS.c **** * Return:
 109:.\Generated_Source\PSoC5/USBFS.c **** *   None.
 110:.\Generated_Source\PSoC5/USBFS.c **** *
 111:.\Generated_Source\PSoC5/USBFS.c **** * Global variables:
 112:.\Generated_Source\PSoC5/USBFS.c **** *  The USBFS_intiVar variable is used to indicate initial
 113:.\Generated_Source\PSoC5/USBFS.c **** *  configuration of this component. The variable is initialized to zero (0u)
 114:.\Generated_Source\PSoC5/USBFS.c **** *  and set to one (1u) the first time USBFS_Start() is called.
 115:.\Generated_Source\PSoC5/USBFS.c **** *  This allows for component Re-Start without unnecessary re-initialization
 116:.\Generated_Source\PSoC5/USBFS.c **** *  in all subsequent calls to the USBFS_Start() routine.
 117:.\Generated_Source\PSoC5/USBFS.c **** *  If re-initialization of the component is required the variable should be set
 118:.\Generated_Source\PSoC5/USBFS.c **** *  to zero before call of UART_Start() routine, or the user may call
 119:.\Generated_Source\PSoC5/USBFS.c **** *  USBFS_Init() and USBFS_InitComponent() as done
 120:.\Generated_Source\PSoC5/USBFS.c **** *  in the USBFS_Start() routine.
 121:.\Generated_Source\PSoC5/USBFS.c **** *
 122:.\Generated_Source\PSoC5/USBFS.c **** * Side Effects:
 123:.\Generated_Source\PSoC5/USBFS.c **** *   This function will reset all communication states to default.
 124:.\Generated_Source\PSoC5/USBFS.c **** *
 125:.\Generated_Source\PSoC5/USBFS.c **** * Reentrant:
 126:.\Generated_Source\PSoC5/USBFS.c **** *  No.
 127:.\Generated_Source\PSoC5/USBFS.c **** *
 128:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 129:.\Generated_Source\PSoC5/USBFS.c **** void USBFS_Start(uint8 device, uint8 mode) 
 130:.\Generated_Source\PSoC5/USBFS.c **** {
  33              		.loc 1 130 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 8
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 4


  42 0002 82B0     		sub	sp, sp, #8
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 16
  45 0004 00AF     		add	r7, sp, #0
  46              	.LCFI2:
  47              		.cfi_def_cfa_register 7
  48 0006 0246     		mov	r2, r0
  49 0008 0B46     		mov	r3, r1
  50 000a FA71     		strb	r2, [r7, #7]
  51 000c BB71     		strb	r3, [r7, #6]
 131:.\Generated_Source\PSoC5/USBFS.c ****     /* If not Initialized then initialize all required hardware and software */
 132:.\Generated_Source\PSoC5/USBFS.c ****     if(USBFS_initVar == 0u)
  52              		.loc 1 132 0
  53 000e 40F20003 		movw	r3, #:lower16:USBFS_initVar
  54 0012 C0F20003 		movt	r3, #:upper16:USBFS_initVar
  55 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  56 0018 002B     		cmp	r3, #0
  57 001a 08D1     		bne	.L2
 133:.\Generated_Source\PSoC5/USBFS.c ****     {
 134:.\Generated_Source\PSoC5/USBFS.c ****         USBFS_Init();
  58              		.loc 1 134 0
  59 001c FFF7FEFF 		bl	USBFS_Init
 135:.\Generated_Source\PSoC5/USBFS.c ****         USBFS_initVar = 1u;
  60              		.loc 1 135 0
  61 0020 40F20003 		movw	r3, #:lower16:USBFS_initVar
  62 0024 C0F20003 		movt	r3, #:upper16:USBFS_initVar
  63 0028 4FF00102 		mov	r2, #1
  64 002c 1A70     		strb	r2, [r3, #0]
  65              	.L2:
 136:.\Generated_Source\PSoC5/USBFS.c ****     }
 137:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_InitComponent(device, mode);
  66              		.loc 1 137 0
  67 002e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
  68 0030 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
  69 0032 1046     		mov	r0, r2
  70 0034 1946     		mov	r1, r3
  71 0036 FFF7FEFF 		bl	USBFS_InitComponent
 138:.\Generated_Source\PSoC5/USBFS.c **** }
  72              		.loc 1 138 0
  73 003a 07F10807 		add	r7, r7, #8
  74 003e BD46     		mov	sp, r7
  75 0040 80BD     		pop	{r7, pc}
  76              		.cfi_endproc
  77              	.LFE0:
  78              		.size	USBFS_Start, .-USBFS_Start
  79 0042 00BF     		.section	.text.USBFS_Init,"ax",%progbits
  80              		.align	2
  81              		.global	USBFS_Init
  82              		.thumb
  83              		.thumb_func
  84              		.type	USBFS_Init, %function
  85              	USBFS_Init:
  86              	.LFB1:
 139:.\Generated_Source\PSoC5/USBFS.c **** 
 140:.\Generated_Source\PSoC5/USBFS.c **** 
 141:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 142:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_Init
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 5


 143:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
 144:.\Generated_Source\PSoC5/USBFS.c **** *
 145:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
 146:.\Generated_Source\PSoC5/USBFS.c **** *  Initialize component's hardware. Usually called in USBFS_Start().
 147:.\Generated_Source\PSoC5/USBFS.c **** *
 148:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
 149:.\Generated_Source\PSoC5/USBFS.c **** *  None.
 150:.\Generated_Source\PSoC5/USBFS.c **** *
 151:.\Generated_Source\PSoC5/USBFS.c **** * Return:
 152:.\Generated_Source\PSoC5/USBFS.c **** *  None.
 153:.\Generated_Source\PSoC5/USBFS.c **** *
 154:.\Generated_Source\PSoC5/USBFS.c **** * Reentrant:
 155:.\Generated_Source\PSoC5/USBFS.c **** *  No.
 156:.\Generated_Source\PSoC5/USBFS.c **** *
 157:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 158:.\Generated_Source\PSoC5/USBFS.c **** void USBFS_Init(void) 
 159:.\Generated_Source\PSoC5/USBFS.c **** {
  87              		.loc 1 159 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 8
  90              		@ frame_needed = 1, uses_anonymous_args = 0
  91 0000 80B5     		push	{r7, lr}
  92              	.LCFI3:
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 7, -8
  95              		.cfi_offset 14, -4
  96 0002 82B0     		sub	sp, sp, #8
  97              	.LCFI4:
  98              		.cfi_def_cfa_offset 16
  99 0004 00AF     		add	r7, sp, #0
 100              	.LCFI5:
 101              		.cfi_def_cfa_register 7
 160:.\Generated_Source\PSoC5/USBFS.c ****     uint8 enableInterrupts;
 161:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP_MM != USBFS__EP_MANUAL)
 162:.\Generated_Source\PSoC5/USBFS.c ****         uint16 i;
 163:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /*  USBFS_EP_MM != USBFS__EP_MANUAL */
 164:.\Generated_Source\PSoC5/USBFS.c **** 
 165:.\Generated_Source\PSoC5/USBFS.c ****     enableInterrupts = CyEnterCriticalSection();
 102              		.loc 1 165 0
 103 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 104 000a 0346     		mov	r3, r0
 105 000c FB71     		strb	r3, [r7, #7]
 166:.\Generated_Source\PSoC5/USBFS.c **** 
 167:.\Generated_Source\PSoC5/USBFS.c ****     /* Enable USB block  */
 168:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_ACT_CFG_REG |= USBFS_PM_ACT_EN_FSUSB;
 106              		.loc 1 168 0
 107 000e 44F2A533 		movw	r3, #17317
 108 0012 C4F20003 		movt	r3, 16384
 109 0016 44F2A532 		movw	r2, #17317
 110 001a C4F20002 		movt	r2, 16384
 111 001e 1278     		ldrb	r2, [r2, #0]
 112 0020 D2B2     		uxtb	r2, r2
 113 0022 42F00102 		orr	r2, r2, #1
 114 0026 D2B2     		uxtb	r2, r2
 115 0028 1A70     		strb	r2, [r3, #0]
 169:.\Generated_Source\PSoC5/USBFS.c ****     /* Enable USB block for Standby Power Mode */
 170:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_STBY_CFG_REG |= USBFS_PM_STBY_EN_FSUSB;
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 6


 116              		.loc 1 170 0
 117 002a 44F2B533 		movw	r3, #17333
 118 002e C4F20003 		movt	r3, 16384
 119 0032 44F2B532 		movw	r2, #17333
 120 0036 C4F20002 		movt	r2, 16384
 121 003a 1278     		ldrb	r2, [r2, #0]
 122 003c D2B2     		uxtb	r2, r2
 123 003e 42F00102 		orr	r2, r2, #1
 124 0042 D2B2     		uxtb	r2, r2
 125 0044 1A70     		strb	r2, [r3, #0]
 171:.\Generated_Source\PSoC5/USBFS.c **** 
 172:.\Generated_Source\PSoC5/USBFS.c ****     /* Enable core clock */
 173:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_USB_CLK_EN_REG = USBFS_USB_CLK_ENABLE;
 126              		.loc 1 173 0
 127 0046 46F29D03 		movw	r3, #24733
 128 004a C4F20003 		movt	r3, 16384
 129 004e 4FF00102 		mov	r2, #1
 130 0052 1A70     		strb	r2, [r3, #0]
 174:.\Generated_Source\PSoC5/USBFS.c **** 
 175:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_CR1_REG = USBFS_CR1_ENABLE_LOCK;
 131              		.loc 1 175 0
 132 0054 46F20903 		movw	r3, #24585
 133 0058 C4F20003 		movt	r3, 16384
 134 005c 4FF00202 		mov	r2, #2
 135 0060 1A70     		strb	r2, [r3, #0]
 176:.\Generated_Source\PSoC5/USBFS.c **** 
 177:.\Generated_Source\PSoC5/USBFS.c ****     /* ENABLING USBIO PADS IN USB MODE FROM I/O MODE */
 178:.\Generated_Source\PSoC5/USBFS.c ****     /* Ensure USB transmit enable is low (USB_USBIO_CR0.ten). - Manual Transmission - Disabled */
 179:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_USBIO_CR0_REG &= ((uint8)(~USBFS_USBIO_CR0_TEN));
 136              		.loc 1 179 0
 137 0062 46F21003 		movw	r3, #24592
 138 0066 C4F20003 		movt	r3, 16384
 139 006a 46F21002 		movw	r2, #24592
 140 006e C4F20002 		movt	r2, 16384
 141 0072 1278     		ldrb	r2, [r2, #0]
 142 0074 D2B2     		uxtb	r2, r2
 143 0076 02F07F02 		and	r2, r2, #127
 144 007a D2B2     		uxtb	r2, r2
 145 007c 1A70     		strb	r2, [r3, #0]
 180:.\Generated_Source\PSoC5/USBFS.c ****     CyDelayUs(0u);  /*~50ns delay */
 146              		.loc 1 180 0
 147 007e 4FF00000 		mov	r0, #0
 148 0082 FFF7FEFF 		bl	CyDelayUs
 181:.\Generated_Source\PSoC5/USBFS.c ****     /* Disable the USBIO by asserting PM.USB_CR0.fsusbio_pd_n(Inverted)
 182:.\Generated_Source\PSoC5/USBFS.c ****     *  high. This will have been set low by the power manger out of reset.
 183:.\Generated_Source\PSoC5/USBFS.c ****     *  Also confirm USBIO pull-up disabled
 184:.\Generated_Source\PSoC5/USBFS.c ****     */
 185:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_USB_CR0_REG &= ((uint8)(~(USBFS_PM_USB_CR0_PD_N |
 149              		.loc 1 185 0
 150 0086 44F29433 		movw	r3, #17300
 151 008a C4F20003 		movt	r3, 16384
 152 008e 44F29432 		movw	r2, #17300
 153 0092 C4F20002 		movt	r2, 16384
 154 0096 1278     		ldrb	r2, [r2, #0]
 155 0098 D2B2     		uxtb	r2, r2
 156 009a 22F00602 		bic	r2, r2, #6
 157 009e D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 7


 158 00a0 1A70     		strb	r2, [r3, #0]
 186:.\Generated_Source\PSoC5/USBFS.c ****                                                   USBFS_PM_USB_CR0_PD_PULLUP_N)));
 187:.\Generated_Source\PSoC5/USBFS.c **** 
 188:.\Generated_Source\PSoC5/USBFS.c ****     /* Select iomode to USB mode*/
 189:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_USBIO_CR1_REG &= ((uint8)(~USBFS_USBIO_CR1_IOMODE));
 159              		.loc 1 189 0
 160 00a2 46F21203 		movw	r3, #24594
 161 00a6 C4F20003 		movt	r3, 16384
 162 00aa 46F21202 		movw	r2, #24594
 163 00ae C4F20002 		movt	r2, 16384
 164 00b2 1278     		ldrb	r2, [r2, #0]
 165 00b4 D2B2     		uxtb	r2, r2
 166 00b6 22F02002 		bic	r2, r2, #32
 167 00ba D2B2     		uxtb	r2, r2
 168 00bc 1A70     		strb	r2, [r3, #0]
 190:.\Generated_Source\PSoC5/USBFS.c **** 
 191:.\Generated_Source\PSoC5/USBFS.c ****     /* Enable the USBIO reference by setting PM.USB_CR0.fsusbio_ref_en.*/
 192:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_USB_CR0_REG |= USBFS_PM_USB_CR0_REF_EN;
 169              		.loc 1 192 0
 170 00be 44F29433 		movw	r3, #17300
 171 00c2 C4F20003 		movt	r3, 16384
 172 00c6 44F29432 		movw	r2, #17300
 173 00ca C4F20002 		movt	r2, 16384
 174 00ce 1278     		ldrb	r2, [r2, #0]
 175 00d0 D2B2     		uxtb	r2, r2
 176 00d2 42F00102 		orr	r2, r2, #1
 177 00d6 D2B2     		uxtb	r2, r2
 178 00d8 1A70     		strb	r2, [r3, #0]
 193:.\Generated_Source\PSoC5/USBFS.c ****     /* The reference will be available 1 us after the regulator is enabled */
 194:.\Generated_Source\PSoC5/USBFS.c ****     CyDelayUs(1u);
 179              		.loc 1 194 0
 180 00da 4FF00100 		mov	r0, #1
 181 00de FFF7FEFF 		bl	CyDelayUs
 195:.\Generated_Source\PSoC5/USBFS.c ****     /* OR 40us after power restored */
 196:.\Generated_Source\PSoC5/USBFS.c ****     CyDelayUs(40u);
 182              		.loc 1 196 0
 183 00e2 4FF02800 		mov	r0, #40
 184 00e6 FFF7FEFF 		bl	CyDelayUs
 197:.\Generated_Source\PSoC5/USBFS.c ****     /* Ensure the single ended disable bits are low (PRT15.INP_DIS[7:6])(input receiver enabled). *
 198:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_DM_INP_DIS_REG &= ((uint8)(~USBFS_DM_MASK));
 185              		.loc 1 198 0
 186 00ea 45F2F813 		movw	r3, #20984
 187 00ee C4F20003 		movt	r3, 16384
 188 00f2 45F2F812 		movw	r2, #20984
 189 00f6 C4F20002 		movt	r2, 16384
 190 00fa 1278     		ldrb	r2, [r2, #0]
 191 00fc D2B2     		uxtb	r2, r2
 192 00fe 02F07F02 		and	r2, r2, #127
 193 0102 D2B2     		uxtb	r2, r2
 194 0104 1A70     		strb	r2, [r3, #0]
 199:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_DP_INP_DIS_REG &= ((uint8)(~USBFS_DP_MASK));
 195              		.loc 1 199 0
 196 0106 45F2F813 		movw	r3, #20984
 197 010a C4F20003 		movt	r3, 16384
 198 010e 45F2F812 		movw	r2, #20984
 199 0112 C4F20002 		movt	r2, 16384
 200 0116 1278     		ldrb	r2, [r2, #0]
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 8


 201 0118 D2B2     		uxtb	r2, r2
 202 011a 22F04002 		bic	r2, r2, #64
 203 011e D2B2     		uxtb	r2, r2
 204 0120 1A70     		strb	r2, [r3, #0]
 200:.\Generated_Source\PSoC5/USBFS.c **** 
 201:.\Generated_Source\PSoC5/USBFS.c ****     /* Enable USBIO */
 202:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_USB_CR0_REG |= USBFS_PM_USB_CR0_PD_N;
 205              		.loc 1 202 0
 206 0122 44F29433 		movw	r3, #17300
 207 0126 C4F20003 		movt	r3, 16384
 208 012a 44F29432 		movw	r2, #17300
 209 012e C4F20002 		movt	r2, 16384
 210 0132 1278     		ldrb	r2, [r2, #0]
 211 0134 D2B2     		uxtb	r2, r2
 212 0136 42F00202 		orr	r2, r2, #2
 213 013a D2B2     		uxtb	r2, r2
 214 013c 1A70     		strb	r2, [r3, #0]
 203:.\Generated_Source\PSoC5/USBFS.c ****     CyDelayUs(2u);
 215              		.loc 1 203 0
 216 013e 4FF00200 		mov	r0, #2
 217 0142 FFF7FEFF 		bl	CyDelayUs
 204:.\Generated_Source\PSoC5/USBFS.c ****     /* Set the USBIO pull-up enable */
 205:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_USB_CR0_REG |= USBFS_PM_USB_CR0_PD_PULLUP_N;
 218              		.loc 1 205 0
 219 0146 44F29433 		movw	r3, #17300
 220 014a C4F20003 		movt	r3, 16384
 221 014e 44F29432 		movw	r2, #17300
 222 0152 C4F20002 		movt	r2, 16384
 223 0156 1278     		ldrb	r2, [r2, #0]
 224 0158 D2B2     		uxtb	r2, r2
 225 015a 42F00402 		orr	r2, r2, #4
 226 015e D2B2     		uxtb	r2, r2
 227 0160 1A70     		strb	r2, [r3, #0]
 206:.\Generated_Source\PSoC5/USBFS.c **** 
 207:.\Generated_Source\PSoC5/USBFS.c ****     /* Write WAx */
 208:.\Generated_Source\PSoC5/USBFS.c ****     CY_SET_REG8(USBFS_ARB_RW1_WA_PTR,     0u);
 228              		.loc 1 208 0
 229 0162 46F28403 		movw	r3, #24708
 230 0166 C4F20003 		movt	r3, 16384
 231 016a 4FF00002 		mov	r2, #0
 232 016e 1A70     		strb	r2, [r3, #0]
 209:.\Generated_Source\PSoC5/USBFS.c ****     CY_SET_REG8(USBFS_ARB_RW1_WA_MSB_PTR, 0u);
 233              		.loc 1 209 0
 234 0170 46F28503 		movw	r3, #24709
 235 0174 C4F20003 		movt	r3, 16384
 236 0178 4FF00002 		mov	r2, #0
 237 017c 1A70     		strb	r2, [r3, #0]
 210:.\Generated_Source\PSoC5/USBFS.c **** 
 211:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP_MM != USBFS__EP_MANUAL)
 212:.\Generated_Source\PSoC5/USBFS.c ****         /* Init transfer descriptor. This will be used to detect the DMA state - initialized or not
 213:.\Generated_Source\PSoC5/USBFS.c ****         for (i = 0u; i < USBFS_MAX_EP; i++)
 214:.\Generated_Source\PSoC5/USBFS.c ****         {
 215:.\Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaTd[i] = DMA_INVALID_TD;
 216:.\Generated_Source\PSoC5/USBFS.c ****             #if ((USBFS_EP_MM == USBFS__EP_DMAAUTO) && (USBFS_EP_DMA_AUTO_OPT == 0u))
 217:.\Generated_Source\PSoC5/USBFS.c ****                 USBFS_DmaNextTd[i] = DMA_INVALID_TD;
 218:.\Generated_Source\PSoC5/USBFS.c ****             #endif /* ((USBFS_EP_MM == USBFS__EP_DMAAUTO) && (USBFS_EP_DMA_AUTO_OPT == 0u)) */
 219:.\Generated_Source\PSoC5/USBFS.c ****         }
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 9


 220:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /*  USBFS_EP_MM != USBFS__EP_MANUAL */
 221:.\Generated_Source\PSoC5/USBFS.c **** 
 222:.\Generated_Source\PSoC5/USBFS.c ****     CyExitCriticalSection(enableInterrupts);
 238              		.loc 1 222 0
 239 017e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 240 0180 1846     		mov	r0, r3
 241 0182 FFF7FEFF 		bl	CyExitCriticalSection
 223:.\Generated_Source\PSoC5/USBFS.c **** 
 224:.\Generated_Source\PSoC5/USBFS.c **** 
 225:.\Generated_Source\PSoC5/USBFS.c ****     /* Set the bus reset Interrupt. */
 226:.\Generated_Source\PSoC5/USBFS.c ****     (void) CyIntSetVector(USBFS_BUS_RESET_VECT_NUM,   &USBFS_BUS_RESET_ISR);
 242              		.loc 1 226 0
 243 0186 4FF01700 		mov	r0, #23
 244 018a 40F20001 		movw	r1, #:lower16:USBFS_BUS_RESET_ISR
 245 018e C0F20001 		movt	r1, #:upper16:USBFS_BUS_RESET_ISR
 246 0192 FFF7FEFF 		bl	CyIntSetVector
 227:.\Generated_Source\PSoC5/USBFS.c ****     CyIntSetPriority(USBFS_BUS_RESET_VECT_NUM, USBFS_BUS_RESET_PRIOR);
 247              		.loc 1 227 0
 248 0196 4FF01700 		mov	r0, #23
 249 019a 4FF00701 		mov	r1, #7
 250 019e FFF7FEFF 		bl	CyIntSetPriority
 228:.\Generated_Source\PSoC5/USBFS.c **** 
 229:.\Generated_Source\PSoC5/USBFS.c ****     /* Set the SOF Interrupt. */
 230:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_SOF_ISR_REMOVE == 0u)
 231:.\Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_SOF_VECT_NUM,   &USBFS_SOF_ISR);
 251              		.loc 1 231 0
 252 01a2 4FF01500 		mov	r0, #21
 253 01a6 40F20001 		movw	r1, #:lower16:USBFS_SOF_ISR
 254 01aa C0F20001 		movt	r1, #:upper16:USBFS_SOF_ISR
 255 01ae FFF7FEFF 		bl	CyIntSetVector
 232:.\Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority(USBFS_SOF_VECT_NUM, USBFS_SOF_PRIOR);
 256              		.loc 1 232 0
 257 01b2 4FF01500 		mov	r0, #21
 258 01b6 4FF00701 		mov	r1, #7
 259 01ba FFF7FEFF 		bl	CyIntSetPriority
 233:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /*  USBFS_SOF_ISR_REMOVE */
 234:.\Generated_Source\PSoC5/USBFS.c **** 
 235:.\Generated_Source\PSoC5/USBFS.c ****     /* Set the Control Endpoint Interrupt. */
 236:.\Generated_Source\PSoC5/USBFS.c ****     (void) CyIntSetVector(USBFS_EP_0_VECT_NUM,   &USBFS_EP_0_ISR);
 260              		.loc 1 236 0
 261 01be 4FF01800 		mov	r0, #24
 262 01c2 40F20001 		movw	r1, #:lower16:USBFS_EP_0_ISR
 263 01c6 C0F20001 		movt	r1, #:upper16:USBFS_EP_0_ISR
 264 01ca FFF7FEFF 		bl	CyIntSetVector
 237:.\Generated_Source\PSoC5/USBFS.c ****     CyIntSetPriority(USBFS_EP_0_VECT_NUM, USBFS_EP_0_PRIOR);
 265              		.loc 1 237 0
 266 01ce 4FF01800 		mov	r0, #24
 267 01d2 4FF00701 		mov	r1, #7
 268 01d6 FFF7FEFF 		bl	CyIntSetPriority
 238:.\Generated_Source\PSoC5/USBFS.c **** 
 239:.\Generated_Source\PSoC5/USBFS.c ****     /* Set the Data Endpoint 1 Interrupt. */
 240:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP1_ISR_REMOVE == 0u)
 241:.\Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_1_VECT_NUM,   &USBFS_EP_1_ISR);
 269              		.loc 1 241 0
 270 01da 4FF00000 		mov	r0, #0
 271 01de 40F20001 		movw	r1, #:lower16:USBFS_EP_1_ISR
 272 01e2 C0F20001 		movt	r1, #:upper16:USBFS_EP_1_ISR
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 10


 273 01e6 FFF7FEFF 		bl	CyIntSetVector
 242:.\Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority(USBFS_EP_1_VECT_NUM, USBFS_EP_1_PRIOR);
 274              		.loc 1 242 0
 275 01ea 4FF00000 		mov	r0, #0
 276 01ee 4FF00701 		mov	r1, #7
 277 01f2 FFF7FEFF 		bl	CyIntSetPriority
 243:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /*  USBFS_EP1_ISR_REMOVE */
 244:.\Generated_Source\PSoC5/USBFS.c **** 
 245:.\Generated_Source\PSoC5/USBFS.c ****     /* Set the Data Endpoint 2 Interrupt. */
 246:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP2_ISR_REMOVE == 0u)
 247:.\Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_2_VECT_NUM,   &USBFS_EP_2_ISR);
 278              		.loc 1 247 0
 279 01f6 4FF00100 		mov	r0, #1
 280 01fa 40F20001 		movw	r1, #:lower16:USBFS_EP_2_ISR
 281 01fe C0F20001 		movt	r1, #:upper16:USBFS_EP_2_ISR
 282 0202 FFF7FEFF 		bl	CyIntSetVector
 248:.\Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority(USBFS_EP_2_VECT_NUM, USBFS_EP_2_PRIOR);
 283              		.loc 1 248 0
 284 0206 4FF00100 		mov	r0, #1
 285 020a 4FF00701 		mov	r1, #7
 286 020e FFF7FEFF 		bl	CyIntSetPriority
 249:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /*  USBFS_EP2_ISR_REMOVE */
 250:.\Generated_Source\PSoC5/USBFS.c **** 
 251:.\Generated_Source\PSoC5/USBFS.c ****     /* Set the Data Endpoint 3 Interrupt. */
 252:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP3_ISR_REMOVE == 0u)
 253:.\Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_3_VECT_NUM,   &USBFS_EP_3_ISR);
 287              		.loc 1 253 0
 288 0212 4FF00200 		mov	r0, #2
 289 0216 40F20001 		movw	r1, #:lower16:USBFS_EP_3_ISR
 290 021a C0F20001 		movt	r1, #:upper16:USBFS_EP_3_ISR
 291 021e FFF7FEFF 		bl	CyIntSetVector
 254:.\Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority(USBFS_EP_3_VECT_NUM, USBFS_EP_3_PRIOR);
 292              		.loc 1 254 0
 293 0222 4FF00200 		mov	r0, #2
 294 0226 4FF00701 		mov	r1, #7
 295 022a FFF7FEFF 		bl	CyIntSetPriority
 255:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /*  USBFS_EP3_ISR_REMOVE */
 256:.\Generated_Source\PSoC5/USBFS.c **** 
 257:.\Generated_Source\PSoC5/USBFS.c ****     /* Set the Data Endpoint 4 Interrupt. */
 258:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP4_ISR_REMOVE == 0u)
 259:.\Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_4_VECT_NUM,   &USBFS_EP_4_ISR);
 296              		.loc 1 259 0
 297 022e 4FF00300 		mov	r0, #3
 298 0232 40F20001 		movw	r1, #:lower16:USBFS_EP_4_ISR
 299 0236 C0F20001 		movt	r1, #:upper16:USBFS_EP_4_ISR
 300 023a FFF7FEFF 		bl	CyIntSetVector
 260:.\Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority(USBFS_EP_4_VECT_NUM, USBFS_EP_4_PRIOR);
 301              		.loc 1 260 0
 302 023e 4FF00300 		mov	r0, #3
 303 0242 4FF00701 		mov	r1, #7
 304 0246 FFF7FEFF 		bl	CyIntSetPriority
 261:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /*  USBFS_EP4_ISR_REMOVE */
 262:.\Generated_Source\PSoC5/USBFS.c **** 
 263:.\Generated_Source\PSoC5/USBFS.c ****     /* Set the Data Endpoint 5 Interrupt. */
 264:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP5_ISR_REMOVE == 0u)
 265:.\Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_5_VECT_NUM,   &USBFS_EP_5_ISR);
 305              		.loc 1 265 0
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 11


 306 024a 4FF00400 		mov	r0, #4
 307 024e 40F20001 		movw	r1, #:lower16:USBFS_EP_5_ISR
 308 0252 C0F20001 		movt	r1, #:upper16:USBFS_EP_5_ISR
 309 0256 FFF7FEFF 		bl	CyIntSetVector
 266:.\Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority(USBFS_EP_5_VECT_NUM, USBFS_EP_5_PRIOR);
 310              		.loc 1 266 0
 311 025a 4FF00400 		mov	r0, #4
 312 025e 4FF00701 		mov	r1, #7
 313 0262 FFF7FEFF 		bl	CyIntSetPriority
 267:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /*  USBFS_EP5_ISR_REMOVE */
 268:.\Generated_Source\PSoC5/USBFS.c **** 
 269:.\Generated_Source\PSoC5/USBFS.c ****     /* Set the Data Endpoint 6 Interrupt. */
 270:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP6_ISR_REMOVE == 0u)
 271:.\Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_6_VECT_NUM,   &USBFS_EP_6_ISR);
 314              		.loc 1 271 0
 315 0266 4FF00500 		mov	r0, #5
 316 026a 40F20001 		movw	r1, #:lower16:USBFS_EP_6_ISR
 317 026e C0F20001 		movt	r1, #:upper16:USBFS_EP_6_ISR
 318 0272 FFF7FEFF 		bl	CyIntSetVector
 272:.\Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority(USBFS_EP_6_VECT_NUM, USBFS_EP_6_PRIOR);
 319              		.loc 1 272 0
 320 0276 4FF00500 		mov	r0, #5
 321 027a 4FF00701 		mov	r1, #7
 322 027e FFF7FEFF 		bl	CyIntSetPriority
 273:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /*  USBFS_EP6_ISR_REMOVE */
 274:.\Generated_Source\PSoC5/USBFS.c **** 
 275:.\Generated_Source\PSoC5/USBFS.c ****      /* Set the Data Endpoint 7 Interrupt. */
 276:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP7_ISR_REMOVE == 0u)
 277:.\Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_7_VECT_NUM,   &USBFS_EP_7_ISR);
 278:.\Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority(USBFS_EP_7_VECT_NUM, USBFS_EP_7_PRIOR);
 279:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /*  USBFS_EP7_ISR_REMOVE */
 280:.\Generated_Source\PSoC5/USBFS.c **** 
 281:.\Generated_Source\PSoC5/USBFS.c ****     /* Set the Data Endpoint 8 Interrupt. */
 282:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP8_ISR_REMOVE == 0u)
 283:.\Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_8_VECT_NUM,   &USBFS_EP_8_ISR);
 284:.\Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority(USBFS_EP_8_VECT_NUM, USBFS_EP_8_PRIOR);
 285:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /*  USBFS_EP8_ISR_REMOVE */
 286:.\Generated_Source\PSoC5/USBFS.c **** 
 287:.\Generated_Source\PSoC5/USBFS.c ****     #if((USBFS_EP_MM != USBFS__EP_MANUAL) && (USBFS_ARB_ISR_REMOVE == 0u))
 288:.\Generated_Source\PSoC5/USBFS.c ****         /* Set the ARB Interrupt. */
 289:.\Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_ARB_VECT_NUM,   &USBFS_ARB_ISR);
 290:.\Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority(USBFS_ARB_VECT_NUM, USBFS_ARB_PRIOR);
 291:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /*  USBFS_EP_MM != USBFS__EP_MANUAL */
 292:.\Generated_Source\PSoC5/USBFS.c **** 
 293:.\Generated_Source\PSoC5/USBFS.c **** }
 323              		.loc 1 293 0
 324 0282 07F10807 		add	r7, r7, #8
 325 0286 BD46     		mov	sp, r7
 326 0288 80BD     		pop	{r7, pc}
 327              		.cfi_endproc
 328              	.LFE1:
 329              		.size	USBFS_Init, .-USBFS_Init
 330 028a 00BF     		.section	.text.USBFS_InitComponent,"ax",%progbits
 331              		.align	2
 332              		.global	USBFS_InitComponent
 333              		.thumb
 334              		.thumb_func
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 12


 335              		.type	USBFS_InitComponent, %function
 336              	USBFS_InitComponent:
 337              	.LFB2:
 294:.\Generated_Source\PSoC5/USBFS.c **** 
 295:.\Generated_Source\PSoC5/USBFS.c **** 
 296:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 297:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_InitComponent
 298:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
 299:.\Generated_Source\PSoC5/USBFS.c **** *
 300:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
 301:.\Generated_Source\PSoC5/USBFS.c **** *  Initialize the component, except for the HW which is done one time in
 302:.\Generated_Source\PSoC5/USBFS.c **** *  the Start function.  This function pulls up D+.
 303:.\Generated_Source\PSoC5/USBFS.c **** *
 304:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
 305:.\Generated_Source\PSoC5/USBFS.c **** *  device: Contains the device number of the desired device descriptor.
 306:.\Generated_Source\PSoC5/USBFS.c **** *          The device number can be found in the Device Descriptor Tab of
 307:.\Generated_Source\PSoC5/USBFS.c **** *          "Configure" dialog, under the settings of desired Device Descriptor,
 308:.\Generated_Source\PSoC5/USBFS.c **** *          in the "Device Number" field.
 309:.\Generated_Source\PSoC5/USBFS.c **** *  mode: The operating voltage. This determines whether the voltage regulator
 310:.\Generated_Source\PSoC5/USBFS.c **** *        is enabled for 5V operation or if pass through mode is used for 3.3V
 311:.\Generated_Source\PSoC5/USBFS.c **** *        operation. Symbolic names and their associated values are given in the
 312:.\Generated_Source\PSoC5/USBFS.c **** *        following table.
 313:.\Generated_Source\PSoC5/USBFS.c **** *       USBFS_3V_OPERATION - Disable voltage regulator and pass-thru
 314:.\Generated_Source\PSoC5/USBFS.c **** *                                       Vcc for pull-up
 315:.\Generated_Source\PSoC5/USBFS.c **** *       USBFS_5V_OPERATION - Enable voltage regulator and use
 316:.\Generated_Source\PSoC5/USBFS.c **** *                                       regulator for pull-up
 317:.\Generated_Source\PSoC5/USBFS.c **** *       USBFS_DWR_VDDD_OPERATION - Enable or Disable voltage
 318:.\Generated_Source\PSoC5/USBFS.c **** *                         regulator depend on Vddd Voltage configuration in DWR.
 319:.\Generated_Source\PSoC5/USBFS.c **** *
 320:.\Generated_Source\PSoC5/USBFS.c **** * Return:
 321:.\Generated_Source\PSoC5/USBFS.c **** *   None.
 322:.\Generated_Source\PSoC5/USBFS.c **** *
 323:.\Generated_Source\PSoC5/USBFS.c **** * Global variables:
 324:.\Generated_Source\PSoC5/USBFS.c **** *   USBFS_device: Contains the device number of the desired device
 325:.\Generated_Source\PSoC5/USBFS.c **** *       descriptor. The device number can be found in the Device Descriptor Tab
 326:.\Generated_Source\PSoC5/USBFS.c **** *       of "Configure" dialog, under the settings of desired Device Descriptor,
 327:.\Generated_Source\PSoC5/USBFS.c **** *       in the "Device Number" field.
 328:.\Generated_Source\PSoC5/USBFS.c **** *   USBFS_transferState: This variable used by the communication
 329:.\Generated_Source\PSoC5/USBFS.c **** *       functions to handle current transfer state. Initialized to
 330:.\Generated_Source\PSoC5/USBFS.c **** *       TRANS_STATE_IDLE in this API.
 331:.\Generated_Source\PSoC5/USBFS.c **** *   USBFS_configuration: Contains current configuration number
 332:.\Generated_Source\PSoC5/USBFS.c **** *       which is set by the Host using SET_CONFIGURATION request.
 333:.\Generated_Source\PSoC5/USBFS.c **** *       Initialized to zero in this API.
 334:.\Generated_Source\PSoC5/USBFS.c **** *   USBFS_deviceAddress: Contains current device address. This
 335:.\Generated_Source\PSoC5/USBFS.c **** *       variable is initialized to zero in this API. Host starts to communicate
 336:.\Generated_Source\PSoC5/USBFS.c **** *      to device with address 0 and then set it to whatever value using
 337:.\Generated_Source\PSoC5/USBFS.c **** *      SET_ADDRESS request.
 338:.\Generated_Source\PSoC5/USBFS.c **** *   USBFS_deviceStatus: initialized to 0.
 339:.\Generated_Source\PSoC5/USBFS.c **** *       This is two bit variable which contain power status in first bit
 340:.\Generated_Source\PSoC5/USBFS.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and remote
 341:.\Generated_Source\PSoC5/USBFS.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in second bit.
 342:.\Generated_Source\PSoC5/USBFS.c **** *   USBFS_lastPacketSize initialized to 0;
 343:.\Generated_Source\PSoC5/USBFS.c **** *
 344:.\Generated_Source\PSoC5/USBFS.c **** * Reentrant:
 345:.\Generated_Source\PSoC5/USBFS.c **** *  No.
 346:.\Generated_Source\PSoC5/USBFS.c **** *
 347:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 13


 348:.\Generated_Source\PSoC5/USBFS.c **** void USBFS_InitComponent(uint8 device, uint8 mode) 
 349:.\Generated_Source\PSoC5/USBFS.c **** {
 338              		.loc 1 349 0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 8
 341              		@ frame_needed = 1, uses_anonymous_args = 0
 342 0000 80B5     		push	{r7, lr}
 343              	.LCFI6:
 344              		.cfi_def_cfa_offset 8
 345              		.cfi_offset 7, -8
 346              		.cfi_offset 14, -4
 347 0002 82B0     		sub	sp, sp, #8
 348              	.LCFI7:
 349              		.cfi_def_cfa_offset 16
 350 0004 00AF     		add	r7, sp, #0
 351              	.LCFI8:
 352              		.cfi_def_cfa_register 7
 353 0006 0246     		mov	r2, r0
 354 0008 0B46     		mov	r3, r1
 355 000a FA71     		strb	r2, [r7, #7]
 356 000c BB71     		strb	r3, [r7, #6]
 350:.\Generated_Source\PSoC5/USBFS.c ****     /* Initialize _hidProtocol variable to comply with
 351:.\Generated_Source\PSoC5/USBFS.c ****     *  HID 7.2.6 Set_Protocol Request:
 352:.\Generated_Source\PSoC5/USBFS.c ****     *  "When initialized, all devices default to report protocol."
 353:.\Generated_Source\PSoC5/USBFS.c ****     */
 354:.\Generated_Source\PSoC5/USBFS.c ****     #if defined(USBFS_ENABLE_HID_CLASS)
 355:.\Generated_Source\PSoC5/USBFS.c ****         uint8 i;
 356:.\Generated_Source\PSoC5/USBFS.c **** 
 357:.\Generated_Source\PSoC5/USBFS.c ****         for (i = 0u; i < USBFS_MAX_INTERFACES_NUMBER; i++)
 358:.\Generated_Source\PSoC5/USBFS.c ****         {
 359:.\Generated_Source\PSoC5/USBFS.c ****             USBFS_hidProtocol[i] = USBFS_PROTOCOL_REPORT;
 360:.\Generated_Source\PSoC5/USBFS.c ****         }
 361:.\Generated_Source\PSoC5/USBFS.c ****     #endif /* USBFS_ENABLE_HID_CLASS */
 362:.\Generated_Source\PSoC5/USBFS.c **** 
 363:.\Generated_Source\PSoC5/USBFS.c ****     /* Enable Interrupts. */
 364:.\Generated_Source\PSoC5/USBFS.c ****     CyIntEnable(USBFS_BUS_RESET_VECT_NUM);
 357              		.loc 1 364 0
 358 000e 4FF46143 		mov	r3, #57600
 359 0012 CEF20003 		movt	r3, 57344
 360 0016 4FF40002 		mov	r2, #8388608
 361 001a 1A60     		str	r2, [r3, #0]
 365:.\Generated_Source\PSoC5/USBFS.c ****     CyIntEnable(USBFS_EP_0_VECT_NUM);
 362              		.loc 1 365 0
 363 001c 4FF46143 		mov	r3, #57600
 364 0020 CEF20003 		movt	r3, 57344
 365 0024 4FF08072 		mov	r2, #16777216
 366 0028 1A60     		str	r2, [r3, #0]
 366:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP1_ISR_REMOVE == 0u)
 367:.\Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_1_VECT_NUM);
 367              		.loc 1 367 0
 368 002a 4FF46143 		mov	r3, #57600
 369 002e CEF20003 		movt	r3, 57344
 370 0032 4FF00102 		mov	r2, #1
 371 0036 1A60     		str	r2, [r3, #0]
 368:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /*  USBFS_EP1_ISR_REMOVE */
 369:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP2_ISR_REMOVE == 0u)
 370:.\Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_2_VECT_NUM);
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 14


 372              		.loc 1 370 0
 373 0038 4FF46143 		mov	r3, #57600
 374 003c CEF20003 		movt	r3, 57344
 375 0040 4FF00202 		mov	r2, #2
 376 0044 1A60     		str	r2, [r3, #0]
 371:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /*  USBFS_EP2_ISR_REMOVE */
 372:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP3_ISR_REMOVE == 0u)
 373:.\Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_3_VECT_NUM);
 377              		.loc 1 373 0
 378 0046 4FF46143 		mov	r3, #57600
 379 004a CEF20003 		movt	r3, 57344
 380 004e 4FF00402 		mov	r2, #4
 381 0052 1A60     		str	r2, [r3, #0]
 374:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /*  USBFS_EP3_ISR_REMOVE */
 375:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP4_ISR_REMOVE == 0u)
 376:.\Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_4_VECT_NUM);
 382              		.loc 1 376 0
 383 0054 4FF46143 		mov	r3, #57600
 384 0058 CEF20003 		movt	r3, 57344
 385 005c 4FF00802 		mov	r2, #8
 386 0060 1A60     		str	r2, [r3, #0]
 377:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /*  USBFS_EP4_ISR_REMOVE */
 378:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP5_ISR_REMOVE == 0u)
 379:.\Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_5_VECT_NUM);
 387              		.loc 1 379 0
 388 0062 4FF46143 		mov	r3, #57600
 389 0066 CEF20003 		movt	r3, 57344
 390 006a 4FF01002 		mov	r2, #16
 391 006e 1A60     		str	r2, [r3, #0]
 380:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /*  USBFS_EP5_ISR_REMOVE */
 381:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP6_ISR_REMOVE == 0u)
 382:.\Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_6_VECT_NUM);
 392              		.loc 1 382 0
 393 0070 4FF46143 		mov	r3, #57600
 394 0074 CEF20003 		movt	r3, 57344
 395 0078 4FF02002 		mov	r2, #32
 396 007c 1A60     		str	r2, [r3, #0]
 383:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /*  USBFS_EP6_ISR_REMOVE */
 384:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP7_ISR_REMOVE == 0u)
 385:.\Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_7_VECT_NUM);
 386:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /*  USBFS_EP7_ISR_REMOVE */
 387:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP8_ISR_REMOVE == 0u)
 388:.\Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_8_VECT_NUM);
 389:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /*  USBFS_EP8_ISR_REMOVE */
 390:.\Generated_Source\PSoC5/USBFS.c ****     #if((USBFS_EP_MM != USBFS__EP_MANUAL) && (USBFS_ARB_ISR_REMOVE == 0u))
 391:.\Generated_Source\PSoC5/USBFS.c ****         /* usb arb interrupt enable */
 392:.\Generated_Source\PSoC5/USBFS.c ****         USBFS_ARB_INT_EN_REG = USBFS_ARB_INT_MASK;
 393:.\Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_ARB_VECT_NUM);
 394:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /*  USBFS_EP_MM != USBFS__EP_MANUAL */
 395:.\Generated_Source\PSoC5/USBFS.c **** 
 396:.\Generated_Source\PSoC5/USBFS.c ****     /* Arbiter configuration for DMA transfers */
 397:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP_MM != USBFS__EP_MANUAL)
 398:.\Generated_Source\PSoC5/USBFS.c ****         #if(USBFS_EP_MM == USBFS__EP_DMAMANUAL)
 399:.\Generated_Source\PSoC5/USBFS.c ****             USBFS_ARB_CFG_REG = USBFS_ARB_CFG_MANUAL_DMA;
 400:.\Generated_Source\PSoC5/USBFS.c ****         #endif   /*  USBFS_EP_MM == USBFS__EP_DMAMANUAL */
 401:.\Generated_Source\PSoC5/USBFS.c ****         #if(USBFS_EP_MM == USBFS__EP_DMAAUTO)
 402:.\Generated_Source\PSoC5/USBFS.c ****             /*Set cfg cmplt this rises DMA request when the full configuration is done */
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 15


 403:.\Generated_Source\PSoC5/USBFS.c ****             USBFS_ARB_CFG_REG = USBFS_ARB_CFG_AUTO_DMA | USBFS_ARB_CFG_AUTO_MEM;
 404:.\Generated_Source\PSoC5/USBFS.c ****             #if(USBFS_EP_DMA_AUTO_OPT == 0u)
 405:.\Generated_Source\PSoC5/USBFS.c ****                 /* Init interrupt which handles verification of the successful DMA transaction */
 406:.\Generated_Source\PSoC5/USBFS.c ****                 USBFS_EP_DMA_Done_isr_StartEx(USBFS_EP_DMA_DONE_ISR);
 407:.\Generated_Source\PSoC5/USBFS.c ****                 USBFS_EP17_DMA_Done_SR_InterruptEnable();
 408:.\Generated_Source\PSoC5/USBFS.c ****                 USBFS_EP8_DMA_Done_SR_InterruptEnable();
 409:.\Generated_Source\PSoC5/USBFS.c ****             #endif /* USBFS_EP_DMA_AUTO_OPT == 0u */
 410:.\Generated_Source\PSoC5/USBFS.c ****         #endif   /*  USBFS_EP_MM == USBFS__EP_DMAAUTO */
 411:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /*  USBFS_EP_MM != USBFS__EP_MANUAL */
 412:.\Generated_Source\PSoC5/USBFS.c **** 
 413:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_transferState = USBFS_TRANS_STATE_IDLE;
 397              		.loc 1 413 0
 398 007e 40F20003 		movw	r3, #:lower16:USBFS_transferState
 399 0082 C0F20003 		movt	r3, #:upper16:USBFS_transferState
 400 0086 4FF00002 		mov	r2, #0
 401 008a 1A70     		strb	r2, [r3, #0]
 414:.\Generated_Source\PSoC5/USBFS.c **** 
 415:.\Generated_Source\PSoC5/USBFS.c ****     /* USB Locking: Enabled, VRegulator: depend on mode or DWR Voltage configuration*/
 416:.\Generated_Source\PSoC5/USBFS.c ****     switch(mode)
 402              		.loc 1 416 0
 403 008c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 404 008e 002B     		cmp	r3, #0
 405 0090 02D0     		beq	.L6
 406 0092 012B     		cmp	r3, #1
 407 0094 08D0     		beq	.L7
 408 0096 0FE0     		b	.L9
 409              	.L6:
 417:.\Generated_Source\PSoC5/USBFS.c ****     {
 418:.\Generated_Source\PSoC5/USBFS.c ****         case USBFS_3V_OPERATION:
 419:.\Generated_Source\PSoC5/USBFS.c ****             USBFS_CR1_REG = USBFS_CR1_ENABLE_LOCK;
 410              		.loc 1 419 0
 411 0098 46F20903 		movw	r3, #24585
 412 009c C4F20003 		movt	r3, 16384
 413 00a0 4FF00202 		mov	r2, #2
 414 00a4 1A70     		strb	r2, [r3, #0]
 420:.\Generated_Source\PSoC5/USBFS.c ****             break;
 415              		.loc 1 420 0
 416 00a6 0FE0     		b	.L8
 417              	.L7:
 421:.\Generated_Source\PSoC5/USBFS.c ****         case USBFS_5V_OPERATION:
 422:.\Generated_Source\PSoC5/USBFS.c ****             USBFS_CR1_REG = USBFS_CR1_ENABLE_LOCK | USBFS_CR1_REG_ENABLE;
 418              		.loc 1 422 0
 419 00a8 46F20903 		movw	r3, #24585
 420 00ac C4F20003 		movt	r3, 16384
 421 00b0 4FF00302 		mov	r2, #3
 422 00b4 1A70     		strb	r2, [r3, #0]
 423:.\Generated_Source\PSoC5/USBFS.c ****             break;
 423              		.loc 1 423 0
 424 00b6 07E0     		b	.L8
 425              	.L9:
 424:.\Generated_Source\PSoC5/USBFS.c ****         default:   /*USBFS_DWR_VDDD_OPERATION */
 425:.\Generated_Source\PSoC5/USBFS.c ****             #if(USBFS_VDDD_MV < USBFS_3500MV)
 426:.\Generated_Source\PSoC5/USBFS.c ****                 USBFS_CR1_REG = USBFS_CR1_ENABLE_LOCK;
 427:.\Generated_Source\PSoC5/USBFS.c ****             #else
 428:.\Generated_Source\PSoC5/USBFS.c ****                 USBFS_CR1_REG = USBFS_CR1_ENABLE_LOCK | USBFS_CR1_REG_ENABLE;
 426              		.loc 1 428 0
 427 00b8 46F20903 		movw	r3, #24585
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 16


 428 00bc C4F20003 		movt	r3, 16384
 429 00c0 4FF00302 		mov	r2, #3
 430 00c4 1A70     		strb	r2, [r3, #0]
 429:.\Generated_Source\PSoC5/USBFS.c ****             #endif /*  USBFS_VDDD_MV < USBFS_3500MV */
 430:.\Generated_Source\PSoC5/USBFS.c ****             break;
 431              		.loc 1 430 0
 432 00c6 00BF     		nop
 433              	.L8:
 431:.\Generated_Source\PSoC5/USBFS.c ****     }
 432:.\Generated_Source\PSoC5/USBFS.c **** 
 433:.\Generated_Source\PSoC5/USBFS.c ****     /* Record the descriptor selection */
 434:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_device = device;
 434              		.loc 1 434 0
 435 00c8 40F20003 		movw	r3, #:lower16:USBFS_device
 436 00cc C0F20003 		movt	r3, #:upper16:USBFS_device
 437 00d0 FA79     		ldrb	r2, [r7, #7]
 438 00d2 1A70     		strb	r2, [r3, #0]
 435:.\Generated_Source\PSoC5/USBFS.c **** 
 436:.\Generated_Source\PSoC5/USBFS.c ****     /* Clear all of the component data */
 437:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_configuration = 0u;
 439              		.loc 1 437 0
 440 00d4 40F20003 		movw	r3, #:lower16:USBFS_configuration
 441 00d8 C0F20003 		movt	r3, #:upper16:USBFS_configuration
 442 00dc 4FF00002 		mov	r2, #0
 443 00e0 1A70     		strb	r2, [r3, #0]
 438:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_interfaceNumber = 0u;
 444              		.loc 1 438 0
 445 00e2 40F20003 		movw	r3, #:lower16:USBFS_interfaceNumber
 446 00e6 C0F20003 		movt	r3, #:upper16:USBFS_interfaceNumber
 447 00ea 4FF00002 		mov	r2, #0
 448 00ee 1A70     		strb	r2, [r3, #0]
 439:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_configurationChanged = 0u;
 449              		.loc 1 439 0
 450 00f0 40F20003 		movw	r3, #:lower16:USBFS_configurationChanged
 451 00f4 C0F20003 		movt	r3, #:upper16:USBFS_configurationChanged
 452 00f8 4FF00002 		mov	r2, #0
 453 00fc 1A70     		strb	r2, [r3, #0]
 440:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_deviceAddress  = 0u;
 454              		.loc 1 440 0
 455 00fe 40F20003 		movw	r3, #:lower16:USBFS_deviceAddress
 456 0102 C0F20003 		movt	r3, #:upper16:USBFS_deviceAddress
 457 0106 4FF00002 		mov	r2, #0
 458 010a 1A70     		strb	r2, [r3, #0]
 441:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_deviceStatus = 0u;
 459              		.loc 1 441 0
 460 010c 40F20003 		movw	r3, #:lower16:USBFS_deviceStatus
 461 0110 C0F20003 		movt	r3, #:upper16:USBFS_deviceStatus
 462 0114 4FF00002 		mov	r2, #0
 463 0118 1A70     		strb	r2, [r3, #0]
 442:.\Generated_Source\PSoC5/USBFS.c **** 
 443:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_lastPacketSize = 0u;
 464              		.loc 1 443 0
 465 011a 40F20003 		movw	r3, #:lower16:USBFS_lastPacketSize
 466 011e C0F20003 		movt	r3, #:upper16:USBFS_lastPacketSize
 467 0122 4FF00002 		mov	r2, #0
 468 0126 1A70     		strb	r2, [r3, #0]
 444:.\Generated_Source\PSoC5/USBFS.c **** 
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 17


 445:.\Generated_Source\PSoC5/USBFS.c ****     /*  ACK Setup, Stall IN/OUT */
 446:.\Generated_Source\PSoC5/USBFS.c ****     CY_SET_REG8(USBFS_EP0_CR_PTR, USBFS_MODE_STALL_IN_OUT);
 469              		.loc 1 446 0
 470 0128 46F22803 		movw	r3, #24616
 471 012c C4F20003 		movt	r3, 16384
 472 0130 4FF00302 		mov	r2, #3
 473 0134 1A70     		strb	r2, [r3, #0]
 447:.\Generated_Source\PSoC5/USBFS.c **** 
 448:.\Generated_Source\PSoC5/USBFS.c ****     /* Enable the SIE with an address 0 */
 449:.\Generated_Source\PSoC5/USBFS.c ****     CY_SET_REG8(USBFS_CR0_PTR, USBFS_CR0_ENABLE);
 474              		.loc 1 449 0
 475 0136 46F20803 		movw	r3, #24584
 476 013a C4F20003 		movt	r3, 16384
 477 013e 4FF08002 		mov	r2, #128
 478 0142 1A70     		strb	r2, [r3, #0]
 450:.\Generated_Source\PSoC5/USBFS.c **** 
 451:.\Generated_Source\PSoC5/USBFS.c ****     /* Workaround for PSOC5LP */
 452:.\Generated_Source\PSoC5/USBFS.c ****     CyDelayCycles(1u);
 479              		.loc 1 452 0
 480 0144 4FF00100 		mov	r0, #1
 481 0148 FFF7FEFF 		bl	CyDelayCycles
 453:.\Generated_Source\PSoC5/USBFS.c **** 
 454:.\Generated_Source\PSoC5/USBFS.c ****     /* Finally, Enable d+ pullup and select iomode to USB mode*/
 455:.\Generated_Source\PSoC5/USBFS.c ****     CY_SET_REG8(USBFS_USBIO_CR1_PTR, USBFS_USBIO_CR1_USBPUEN);
 482              		.loc 1 455 0
 483 014c 46F21203 		movw	r3, #24594
 484 0150 C4F20003 		movt	r3, 16384
 485 0154 4FF00402 		mov	r2, #4
 486 0158 1A70     		strb	r2, [r3, #0]
 456:.\Generated_Source\PSoC5/USBFS.c **** }
 487              		.loc 1 456 0
 488 015a 07F10807 		add	r7, r7, #8
 489 015e BD46     		mov	sp, r7
 490 0160 80BD     		pop	{r7, pc}
 491              		.cfi_endproc
 492              	.LFE2:
 493              		.size	USBFS_InitComponent, .-USBFS_InitComponent
 494 0162 00BF     		.section	.text.USBFS_ReInitComponent,"ax",%progbits
 495              		.align	2
 496              		.global	USBFS_ReInitComponent
 497              		.thumb
 498              		.thumb_func
 499              		.type	USBFS_ReInitComponent, %function
 500              	USBFS_ReInitComponent:
 501              	.LFB3:
 457:.\Generated_Source\PSoC5/USBFS.c **** 
 458:.\Generated_Source\PSoC5/USBFS.c **** 
 459:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 460:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_ReInitComponent
 461:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
 462:.\Generated_Source\PSoC5/USBFS.c **** *
 463:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
 464:.\Generated_Source\PSoC5/USBFS.c **** *  This function reinitialize the component configuration and is
 465:.\Generated_Source\PSoC5/USBFS.c **** *  intend to be called from the Reset interrupt.
 466:.\Generated_Source\PSoC5/USBFS.c **** *
 467:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
 468:.\Generated_Source\PSoC5/USBFS.c **** *  None.
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 18


 469:.\Generated_Source\PSoC5/USBFS.c **** *
 470:.\Generated_Source\PSoC5/USBFS.c **** * Return:
 471:.\Generated_Source\PSoC5/USBFS.c **** *   None.
 472:.\Generated_Source\PSoC5/USBFS.c **** *
 473:.\Generated_Source\PSoC5/USBFS.c **** * Global variables:
 474:.\Generated_Source\PSoC5/USBFS.c **** *   USBFS_device: Contains the device number of the desired device
 475:.\Generated_Source\PSoC5/USBFS.c **** *        descriptor. The device number can be found in the Device Descriptor Tab
 476:.\Generated_Source\PSoC5/USBFS.c **** *       of "Configure" dialog, under the settings of desired Device Descriptor,
 477:.\Generated_Source\PSoC5/USBFS.c **** *       in the "Device Number" field.
 478:.\Generated_Source\PSoC5/USBFS.c **** *   USBFS_transferState: This variable used by the communication
 479:.\Generated_Source\PSoC5/USBFS.c **** *       functions to handle current transfer state. Initialized to
 480:.\Generated_Source\PSoC5/USBFS.c **** *       TRANS_STATE_IDLE in this API.
 481:.\Generated_Source\PSoC5/USBFS.c **** *   USBFS_configuration: Contains current configuration number
 482:.\Generated_Source\PSoC5/USBFS.c **** *       which is set by the Host using SET_CONFIGURATION request.
 483:.\Generated_Source\PSoC5/USBFS.c **** *       Initialized to zero in this API.
 484:.\Generated_Source\PSoC5/USBFS.c **** *   USBFS_deviceAddress: Contains current device address. This
 485:.\Generated_Source\PSoC5/USBFS.c **** *       variable is initialized to zero in this API. Host starts to communicate
 486:.\Generated_Source\PSoC5/USBFS.c **** *      to device with address 0 and then set it to whatever value using
 487:.\Generated_Source\PSoC5/USBFS.c **** *      SET_ADDRESS request.
 488:.\Generated_Source\PSoC5/USBFS.c **** *   USBFS_deviceStatus: initialized to 0.
 489:.\Generated_Source\PSoC5/USBFS.c **** *       This is two bit variable which contain power status in first bit
 490:.\Generated_Source\PSoC5/USBFS.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and remote
 491:.\Generated_Source\PSoC5/USBFS.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in second bit.
 492:.\Generated_Source\PSoC5/USBFS.c **** *   USBFS_lastPacketSize initialized to 0;
 493:.\Generated_Source\PSoC5/USBFS.c **** *
 494:.\Generated_Source\PSoC5/USBFS.c **** * Reentrant:
 495:.\Generated_Source\PSoC5/USBFS.c **** *  No.
 496:.\Generated_Source\PSoC5/USBFS.c **** *
 497:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 498:.\Generated_Source\PSoC5/USBFS.c **** void USBFS_ReInitComponent(void) 
 499:.\Generated_Source\PSoC5/USBFS.c **** {
 502              		.loc 1 499 0
 503              		.cfi_startproc
 504              		@ args = 0, pretend = 0, frame = 0
 505              		@ frame_needed = 1, uses_anonymous_args = 0
 506              		@ link register save eliminated.
 507 0000 80B4     		push	{r7}
 508              	.LCFI9:
 509              		.cfi_def_cfa_offset 4
 510              		.cfi_offset 7, -4
 511 0002 00AF     		add	r7, sp, #0
 512              	.LCFI10:
 513              		.cfi_def_cfa_register 7
 500:.\Generated_Source\PSoC5/USBFS.c ****     /* Initialize _hidProtocol variable to comply with HID 7.2.6 Set_Protocol
 501:.\Generated_Source\PSoC5/USBFS.c ****     *  Request: "When initialized, all devices default to report protocol."
 502:.\Generated_Source\PSoC5/USBFS.c ****     */
 503:.\Generated_Source\PSoC5/USBFS.c ****     #if defined(USBFS_ENABLE_HID_CLASS)
 504:.\Generated_Source\PSoC5/USBFS.c ****         uint8 i;
 505:.\Generated_Source\PSoC5/USBFS.c **** 
 506:.\Generated_Source\PSoC5/USBFS.c ****         for (i = 0u; i < USBFS_MAX_INTERFACES_NUMBER; i++)
 507:.\Generated_Source\PSoC5/USBFS.c ****         {
 508:.\Generated_Source\PSoC5/USBFS.c ****             USBFS_hidProtocol[i] = USBFS_PROTOCOL_REPORT;
 509:.\Generated_Source\PSoC5/USBFS.c ****         }
 510:.\Generated_Source\PSoC5/USBFS.c ****     #endif /* USBFS_ENABLE_HID_CLASS */
 511:.\Generated_Source\PSoC5/USBFS.c **** 
 512:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_transferState = USBFS_TRANS_STATE_IDLE;
 514              		.loc 1 512 0
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 19


 515 0004 40F20003 		movw	r3, #:lower16:USBFS_transferState
 516 0008 C0F20003 		movt	r3, #:upper16:USBFS_transferState
 517 000c 4FF00002 		mov	r2, #0
 518 0010 1A70     		strb	r2, [r3, #0]
 513:.\Generated_Source\PSoC5/USBFS.c **** 
 514:.\Generated_Source\PSoC5/USBFS.c ****     /* Clear all of the component data */
 515:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_configuration = 0u;
 519              		.loc 1 515 0
 520 0012 40F20003 		movw	r3, #:lower16:USBFS_configuration
 521 0016 C0F20003 		movt	r3, #:upper16:USBFS_configuration
 522 001a 4FF00002 		mov	r2, #0
 523 001e 1A70     		strb	r2, [r3, #0]
 516:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_interfaceNumber = 0u;
 524              		.loc 1 516 0
 525 0020 40F20003 		movw	r3, #:lower16:USBFS_interfaceNumber
 526 0024 C0F20003 		movt	r3, #:upper16:USBFS_interfaceNumber
 527 0028 4FF00002 		mov	r2, #0
 528 002c 1A70     		strb	r2, [r3, #0]
 517:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_configurationChanged = 0u;
 529              		.loc 1 517 0
 530 002e 40F20003 		movw	r3, #:lower16:USBFS_configurationChanged
 531 0032 C0F20003 		movt	r3, #:upper16:USBFS_configurationChanged
 532 0036 4FF00002 		mov	r2, #0
 533 003a 1A70     		strb	r2, [r3, #0]
 518:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_deviceAddress  = 0u;
 534              		.loc 1 518 0
 535 003c 40F20003 		movw	r3, #:lower16:USBFS_deviceAddress
 536 0040 C0F20003 		movt	r3, #:upper16:USBFS_deviceAddress
 537 0044 4FF00002 		mov	r2, #0
 538 0048 1A70     		strb	r2, [r3, #0]
 519:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_deviceStatus = 0u;
 539              		.loc 1 519 0
 540 004a 40F20003 		movw	r3, #:lower16:USBFS_deviceStatus
 541 004e C0F20003 		movt	r3, #:upper16:USBFS_deviceStatus
 542 0052 4FF00002 		mov	r2, #0
 543 0056 1A70     		strb	r2, [r3, #0]
 520:.\Generated_Source\PSoC5/USBFS.c **** 
 521:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_lastPacketSize = 0u;
 544              		.loc 1 521 0
 545 0058 40F20003 		movw	r3, #:lower16:USBFS_lastPacketSize
 546 005c C0F20003 		movt	r3, #:upper16:USBFS_lastPacketSize
 547 0060 4FF00002 		mov	r2, #0
 548 0064 1A70     		strb	r2, [r3, #0]
 522:.\Generated_Source\PSoC5/USBFS.c **** 
 523:.\Generated_Source\PSoC5/USBFS.c **** 
 524:.\Generated_Source\PSoC5/USBFS.c ****     /*  ACK Setup, Stall IN/OUT */
 525:.\Generated_Source\PSoC5/USBFS.c ****     CY_SET_REG8(USBFS_EP0_CR_PTR, USBFS_MODE_STALL_IN_OUT);
 549              		.loc 1 525 0
 550 0066 46F22803 		movw	r3, #24616
 551 006a C4F20003 		movt	r3, 16384
 552 006e 4FF00302 		mov	r2, #3
 553 0072 1A70     		strb	r2, [r3, #0]
 526:.\Generated_Source\PSoC5/USBFS.c **** 
 527:.\Generated_Source\PSoC5/USBFS.c ****     /* Enable the SIE with an address 0 */
 528:.\Generated_Source\PSoC5/USBFS.c ****     CY_SET_REG8(USBFS_CR0_PTR, USBFS_CR0_ENABLE);
 554              		.loc 1 528 0
 555 0074 46F20803 		movw	r3, #24584
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 20


 556 0078 C4F20003 		movt	r3, 16384
 557 007c 4FF08002 		mov	r2, #128
 558 0080 1A70     		strb	r2, [r3, #0]
 529:.\Generated_Source\PSoC5/USBFS.c **** 
 530:.\Generated_Source\PSoC5/USBFS.c **** }
 559              		.loc 1 530 0
 560 0082 BD46     		mov	sp, r7
 561 0084 80BC     		pop	{r7}
 562 0086 7047     		bx	lr
 563              		.cfi_endproc
 564              	.LFE3:
 565              		.size	USBFS_ReInitComponent, .-USBFS_ReInitComponent
 566              		.section	.text.USBFS_Stop,"ax",%progbits
 567              		.align	2
 568              		.global	USBFS_Stop
 569              		.thumb
 570              		.thumb_func
 571              		.type	USBFS_Stop, %function
 572              	USBFS_Stop:
 573              	.LFB4:
 531:.\Generated_Source\PSoC5/USBFS.c **** 
 532:.\Generated_Source\PSoC5/USBFS.c **** 
 533:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 534:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_Stop
 535:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
 536:.\Generated_Source\PSoC5/USBFS.c **** *
 537:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
 538:.\Generated_Source\PSoC5/USBFS.c **** *  This function shuts down the USB function including to release
 539:.\Generated_Source\PSoC5/USBFS.c **** *  the D+ Pullup and disabling the SIE.
 540:.\Generated_Source\PSoC5/USBFS.c **** *
 541:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
 542:.\Generated_Source\PSoC5/USBFS.c **** *  None.
 543:.\Generated_Source\PSoC5/USBFS.c **** *
 544:.\Generated_Source\PSoC5/USBFS.c **** * Return:
 545:.\Generated_Source\PSoC5/USBFS.c **** *  None.
 546:.\Generated_Source\PSoC5/USBFS.c **** *
 547:.\Generated_Source\PSoC5/USBFS.c **** * Global variables:
 548:.\Generated_Source\PSoC5/USBFS.c **** *   USBFS_configuration: Contains current configuration number
 549:.\Generated_Source\PSoC5/USBFS.c **** *       which is set by the Host using SET_CONFIGURATION request.
 550:.\Generated_Source\PSoC5/USBFS.c **** *       Initialized to zero in this API.
 551:.\Generated_Source\PSoC5/USBFS.c **** *   USBFS_deviceAddress: Contains current device address. This
 552:.\Generated_Source\PSoC5/USBFS.c **** *       variable is initialized to zero in this API. Host starts to communicate
 553:.\Generated_Source\PSoC5/USBFS.c **** *      to device with address 0 and then set it to whatever value using
 554:.\Generated_Source\PSoC5/USBFS.c **** *      SET_ADDRESS request.
 555:.\Generated_Source\PSoC5/USBFS.c **** *   USBFS_deviceStatus: initialized to 0.
 556:.\Generated_Source\PSoC5/USBFS.c **** *       This is two bit variable which contain power status in first bit
 557:.\Generated_Source\PSoC5/USBFS.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and remote
 558:.\Generated_Source\PSoC5/USBFS.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in second bit.
 559:.\Generated_Source\PSoC5/USBFS.c **** *   USBFS_configurationChanged: This variable is set to one after
 560:.\Generated_Source\PSoC5/USBFS.c **** *       SET_CONFIGURATION request and cleared in this function.
 561:.\Generated_Source\PSoC5/USBFS.c **** *   USBFS_intiVar variable is set to zero
 562:.\Generated_Source\PSoC5/USBFS.c **** *
 563:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 564:.\Generated_Source\PSoC5/USBFS.c **** void USBFS_Stop(void) 
 565:.\Generated_Source\PSoC5/USBFS.c **** {
 574              		.loc 1 565 0
 575              		.cfi_startproc
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 21


 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 1, uses_anonymous_args = 0
 578              		@ link register save eliminated.
 579 0000 80B4     		push	{r7}
 580              	.LCFI11:
 581              		.cfi_def_cfa_offset 4
 582              		.cfi_offset 7, -4
 583 0002 00AF     		add	r7, sp, #0
 584              	.LCFI12:
 585              		.cfi_def_cfa_register 7
 566:.\Generated_Source\PSoC5/USBFS.c **** 
 567:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP_MM != USBFS__EP_MANUAL)
 568:.\Generated_Source\PSoC5/USBFS.c ****         USBFS_Stop_DMA(USBFS_MAX_EP);     /* Stop all DMAs */
 569:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /*  USBFS_EP_MM != USBFS__EP_MANUAL */
 570:.\Generated_Source\PSoC5/USBFS.c **** 
 571:.\Generated_Source\PSoC5/USBFS.c ****     /* Disable the SIE */
 572:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_CR0_REG &= (uint8)(~USBFS_CR0_ENABLE);
 586              		.loc 1 572 0
 587 0004 46F20803 		movw	r3, #24584
 588 0008 C4F20003 		movt	r3, 16384
 589 000c 46F20802 		movw	r2, #24584
 590 0010 C4F20002 		movt	r2, 16384
 591 0014 1278     		ldrb	r2, [r2, #0]
 592 0016 D2B2     		uxtb	r2, r2
 593 0018 02F07F02 		and	r2, r2, #127
 594 001c D2B2     		uxtb	r2, r2
 595 001e 1A70     		strb	r2, [r3, #0]
 573:.\Generated_Source\PSoC5/USBFS.c ****     /* Disable the d+ pullup */
 574:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_USBIO_CR1_REG &= (uint8)(~USBFS_USBIO_CR1_USBPUEN);
 596              		.loc 1 574 0
 597 0020 46F21203 		movw	r3, #24594
 598 0024 C4F20003 		movt	r3, 16384
 599 0028 46F21202 		movw	r2, #24594
 600 002c C4F20002 		movt	r2, 16384
 601 0030 1278     		ldrb	r2, [r2, #0]
 602 0032 D2B2     		uxtb	r2, r2
 603 0034 22F00402 		bic	r2, r2, #4
 604 0038 D2B2     		uxtb	r2, r2
 605 003a 1A70     		strb	r2, [r3, #0]
 575:.\Generated_Source\PSoC5/USBFS.c ****     /* Disable USB in ACT PM */
 576:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_ACT_CFG_REG &= (uint8)(~USBFS_PM_ACT_EN_FSUSB);
 606              		.loc 1 576 0
 607 003c 44F2A533 		movw	r3, #17317
 608 0040 C4F20003 		movt	r3, 16384
 609 0044 44F2A532 		movw	r2, #17317
 610 0048 C4F20002 		movt	r2, 16384
 611 004c 1278     		ldrb	r2, [r2, #0]
 612 004e D2B2     		uxtb	r2, r2
 613 0050 22F00102 		bic	r2, r2, #1
 614 0054 D2B2     		uxtb	r2, r2
 615 0056 1A70     		strb	r2, [r3, #0]
 577:.\Generated_Source\PSoC5/USBFS.c ****     /* Disable USB block for Standby Power Mode */
 578:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_STBY_CFG_REG &= (uint8)(~USBFS_PM_STBY_EN_FSUSB);
 616              		.loc 1 578 0
 617 0058 44F2B533 		movw	r3, #17333
 618 005c C4F20003 		movt	r3, 16384
 619 0060 44F2B532 		movw	r2, #17333
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 22


 620 0064 C4F20002 		movt	r2, 16384
 621 0068 1278     		ldrb	r2, [r2, #0]
 622 006a D2B2     		uxtb	r2, r2
 623 006c 22F00102 		bic	r2, r2, #1
 624 0070 D2B2     		uxtb	r2, r2
 625 0072 1A70     		strb	r2, [r3, #0]
 579:.\Generated_Source\PSoC5/USBFS.c **** 
 580:.\Generated_Source\PSoC5/USBFS.c ****     /* Disable the reset and EP interrupts */
 581:.\Generated_Source\PSoC5/USBFS.c ****     CyIntDisable(USBFS_BUS_RESET_VECT_NUM);
 626              		.loc 1 581 0
 627 0074 4EF28013 		movw	r3, #57728
 628 0078 CEF20003 		movt	r3, 57344
 629 007c 4FF40002 		mov	r2, #8388608
 630 0080 1A60     		str	r2, [r3, #0]
 582:.\Generated_Source\PSoC5/USBFS.c ****     CyIntDisable(USBFS_EP_0_VECT_NUM);
 631              		.loc 1 582 0
 632 0082 4EF28013 		movw	r3, #57728
 633 0086 CEF20003 		movt	r3, 57344
 634 008a 4FF08072 		mov	r2, #16777216
 635 008e 1A60     		str	r2, [r3, #0]
 583:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP1_ISR_REMOVE == 0u)
 584:.\Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_1_VECT_NUM);
 636              		.loc 1 584 0
 637 0090 4EF28013 		movw	r3, #57728
 638 0094 CEF20003 		movt	r3, 57344
 639 0098 4FF00102 		mov	r2, #1
 640 009c 1A60     		str	r2, [r3, #0]
 585:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /*  USBFS_EP1_ISR_REMOVE */
 586:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP2_ISR_REMOVE == 0u)
 587:.\Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_2_VECT_NUM);
 641              		.loc 1 587 0
 642 009e 4EF28013 		movw	r3, #57728
 643 00a2 CEF20003 		movt	r3, 57344
 644 00a6 4FF00202 		mov	r2, #2
 645 00aa 1A60     		str	r2, [r3, #0]
 588:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /*  USBFS_EP2_ISR_REMOVE */
 589:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP3_ISR_REMOVE == 0u)
 590:.\Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_3_VECT_NUM);
 646              		.loc 1 590 0
 647 00ac 4EF28013 		movw	r3, #57728
 648 00b0 CEF20003 		movt	r3, 57344
 649 00b4 4FF00402 		mov	r2, #4
 650 00b8 1A60     		str	r2, [r3, #0]
 591:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /*  USBFS_EP3_ISR_REMOVE */
 592:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP4_ISR_REMOVE == 0u)
 593:.\Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_4_VECT_NUM);
 651              		.loc 1 593 0
 652 00ba 4EF28013 		movw	r3, #57728
 653 00be CEF20003 		movt	r3, 57344
 654 00c2 4FF00802 		mov	r2, #8
 655 00c6 1A60     		str	r2, [r3, #0]
 594:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /*  USBFS_EP4_ISR_REMOVE */
 595:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP5_ISR_REMOVE == 0u)
 596:.\Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_5_VECT_NUM);
 656              		.loc 1 596 0
 657 00c8 4EF28013 		movw	r3, #57728
 658 00cc CEF20003 		movt	r3, 57344
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 23


 659 00d0 4FF01002 		mov	r2, #16
 660 00d4 1A60     		str	r2, [r3, #0]
 597:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /*  USBFS_EP5_ISR_REMOVE */
 598:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP6_ISR_REMOVE == 0u)
 599:.\Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_6_VECT_NUM);
 661              		.loc 1 599 0
 662 00d6 4EF28013 		movw	r3, #57728
 663 00da CEF20003 		movt	r3, 57344
 664 00de 4FF02002 		mov	r2, #32
 665 00e2 1A60     		str	r2, [r3, #0]
 600:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /*  USBFS_EP6_ISR_REMOVE */
 601:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP7_ISR_REMOVE == 0u)
 602:.\Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_7_VECT_NUM);
 603:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /*  USBFS_EP7_ISR_REMOVE */
 604:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP8_ISR_REMOVE == 0u)
 605:.\Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_8_VECT_NUM);
 606:.\Generated_Source\PSoC5/USBFS.c ****     #endif   /*  USBFS_EP8_ISR_REMOVE */
 607:.\Generated_Source\PSoC5/USBFS.c **** 
 608:.\Generated_Source\PSoC5/USBFS.c ****     /* Clear all of the component data */
 609:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_configuration = 0u;
 666              		.loc 1 609 0
 667 00e4 40F20003 		movw	r3, #:lower16:USBFS_configuration
 668 00e8 C0F20003 		movt	r3, #:upper16:USBFS_configuration
 669 00ec 4FF00002 		mov	r2, #0
 670 00f0 1A70     		strb	r2, [r3, #0]
 610:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_interfaceNumber = 0u;
 671              		.loc 1 610 0
 672 00f2 40F20003 		movw	r3, #:lower16:USBFS_interfaceNumber
 673 00f6 C0F20003 		movt	r3, #:upper16:USBFS_interfaceNumber
 674 00fa 4FF00002 		mov	r2, #0
 675 00fe 1A70     		strb	r2, [r3, #0]
 611:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_configurationChanged = 0u;
 676              		.loc 1 611 0
 677 0100 40F20003 		movw	r3, #:lower16:USBFS_configurationChanged
 678 0104 C0F20003 		movt	r3, #:upper16:USBFS_configurationChanged
 679 0108 4FF00002 		mov	r2, #0
 680 010c 1A70     		strb	r2, [r3, #0]
 612:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_deviceAddress  = 0u;
 681              		.loc 1 612 0
 682 010e 40F20003 		movw	r3, #:lower16:USBFS_deviceAddress
 683 0112 C0F20003 		movt	r3, #:upper16:USBFS_deviceAddress
 684 0116 4FF00002 		mov	r2, #0
 685 011a 1A70     		strb	r2, [r3, #0]
 613:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_deviceStatus = 0u;
 686              		.loc 1 613 0
 687 011c 40F20003 		movw	r3, #:lower16:USBFS_deviceStatus
 688 0120 C0F20003 		movt	r3, #:upper16:USBFS_deviceStatus
 689 0124 4FF00002 		mov	r2, #0
 690 0128 1A70     		strb	r2, [r3, #0]
 614:.\Generated_Source\PSoC5/USBFS.c ****     USBFS_initVar = 0u;
 691              		.loc 1 614 0
 692 012a 40F20003 		movw	r3, #:lower16:USBFS_initVar
 693 012e C0F20003 		movt	r3, #:upper16:USBFS_initVar
 694 0132 4FF00002 		mov	r2, #0
 695 0136 1A70     		strb	r2, [r3, #0]
 615:.\Generated_Source\PSoC5/USBFS.c **** 
 616:.\Generated_Source\PSoC5/USBFS.c **** }
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 24


 696              		.loc 1 616 0
 697 0138 BD46     		mov	sp, r7
 698 013a 80BC     		pop	{r7}
 699 013c 7047     		bx	lr
 700              		.cfi_endproc
 701              	.LFE4:
 702              		.size	USBFS_Stop, .-USBFS_Stop
 703 013e 00BF     		.section	.text.USBFS_CheckActivity,"ax",%progbits
 704              		.align	2
 705              		.global	USBFS_CheckActivity
 706              		.thumb
 707              		.thumb_func
 708              		.type	USBFS_CheckActivity, %function
 709              	USBFS_CheckActivity:
 710              	.LFB5:
 617:.\Generated_Source\PSoC5/USBFS.c **** 
 618:.\Generated_Source\PSoC5/USBFS.c **** 
 619:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 620:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_CheckActivity
 621:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
 622:.\Generated_Source\PSoC5/USBFS.c **** *
 623:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
 624:.\Generated_Source\PSoC5/USBFS.c **** *  Returns the activity status of the bus.  Clears the status hardware to
 625:.\Generated_Source\PSoC5/USBFS.c **** *  provide fresh activity status on the next call of this routine.
 626:.\Generated_Source\PSoC5/USBFS.c **** *
 627:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
 628:.\Generated_Source\PSoC5/USBFS.c **** *  None.
 629:.\Generated_Source\PSoC5/USBFS.c **** *
 630:.\Generated_Source\PSoC5/USBFS.c **** * Return:
 631:.\Generated_Source\PSoC5/USBFS.c **** *  1 - If bus activity was detected since the last call to this function
 632:.\Generated_Source\PSoC5/USBFS.c **** *  0 - If bus activity not was detected since the last call to this function
 633:.\Generated_Source\PSoC5/USBFS.c **** *
 634:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 635:.\Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_CheckActivity(void) 
 636:.\Generated_Source\PSoC5/USBFS.c **** {
 711              		.loc 1 636 0
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 8
 714              		@ frame_needed = 1, uses_anonymous_args = 0
 715              		@ link register save eliminated.
 716 0000 80B4     		push	{r7}
 717              	.LCFI13:
 718              		.cfi_def_cfa_offset 4
 719              		.cfi_offset 7, -4
 720 0002 83B0     		sub	sp, sp, #12
 721              	.LCFI14:
 722              		.cfi_def_cfa_offset 16
 723 0004 00AF     		add	r7, sp, #0
 724              	.LCFI15:
 725              		.cfi_def_cfa_register 7
 637:.\Generated_Source\PSoC5/USBFS.c ****     uint8 r;
 638:.\Generated_Source\PSoC5/USBFS.c **** 
 639:.\Generated_Source\PSoC5/USBFS.c ****     r = CY_GET_REG8(USBFS_CR1_PTR);
 726              		.loc 1 639 0
 727 0006 46F20903 		movw	r3, #24585
 728 000a C4F20003 		movt	r3, 16384
 729 000e 1B78     		ldrb	r3, [r3, #0]
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 25


 730 0010 FB71     		strb	r3, [r7, #7]
 640:.\Generated_Source\PSoC5/USBFS.c ****     CY_SET_REG8(USBFS_CR1_PTR, (r & ((uint8)(~USBFS_CR1_BUS_ACTIVITY))));
 731              		.loc 1 640 0
 732 0012 46F20903 		movw	r3, #24585
 733 0016 C4F20003 		movt	r3, 16384
 734 001a FA79     		ldrb	r2, [r7, #7]
 735 001c 22F00402 		bic	r2, r2, #4
 736 0020 D2B2     		uxtb	r2, r2
 737 0022 1A70     		strb	r2, [r3, #0]
 641:.\Generated_Source\PSoC5/USBFS.c **** 
 642:.\Generated_Source\PSoC5/USBFS.c ****     return((r & USBFS_CR1_BUS_ACTIVITY) >> USBFS_CR1_BUS_ACTIVITY_SHIFT);
 738              		.loc 1 642 0
 739 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 740 0026 03F00403 		and	r3, r3, #4
 741 002a 4FEAA303 		asr	r3, r3, #2
 742 002e DBB2     		uxtb	r3, r3
 643:.\Generated_Source\PSoC5/USBFS.c **** }
 743              		.loc 1 643 0
 744 0030 1846     		mov	r0, r3
 745 0032 07F10C07 		add	r7, r7, #12
 746 0036 BD46     		mov	sp, r7
 747 0038 80BC     		pop	{r7}
 748 003a 7047     		bx	lr
 749              		.cfi_endproc
 750              	.LFE5:
 751              		.size	USBFS_CheckActivity, .-USBFS_CheckActivity
 752              		.section	.text.USBFS_GetConfiguration,"ax",%progbits
 753              		.align	2
 754              		.global	USBFS_GetConfiguration
 755              		.thumb
 756              		.thumb_func
 757              		.type	USBFS_GetConfiguration, %function
 758              	USBFS_GetConfiguration:
 759              	.LFB6:
 644:.\Generated_Source\PSoC5/USBFS.c **** 
 645:.\Generated_Source\PSoC5/USBFS.c **** 
 646:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 647:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_GetConfiguration
 648:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
 649:.\Generated_Source\PSoC5/USBFS.c **** *
 650:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
 651:.\Generated_Source\PSoC5/USBFS.c **** *  Returns the current configuration setting
 652:.\Generated_Source\PSoC5/USBFS.c **** *
 653:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
 654:.\Generated_Source\PSoC5/USBFS.c **** *  None.
 655:.\Generated_Source\PSoC5/USBFS.c **** *
 656:.\Generated_Source\PSoC5/USBFS.c **** * Return:
 657:.\Generated_Source\PSoC5/USBFS.c **** *  configuration.
 658:.\Generated_Source\PSoC5/USBFS.c **** *
 659:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 660:.\Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_GetConfiguration(void) 
 661:.\Generated_Source\PSoC5/USBFS.c **** {
 760              		.loc 1 661 0
 761              		.cfi_startproc
 762              		@ args = 0, pretend = 0, frame = 0
 763              		@ frame_needed = 1, uses_anonymous_args = 0
 764              		@ link register save eliminated.
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 26


 765 0000 80B4     		push	{r7}
 766              	.LCFI16:
 767              		.cfi_def_cfa_offset 4
 768              		.cfi_offset 7, -4
 769 0002 00AF     		add	r7, sp, #0
 770              	.LCFI17:
 771              		.cfi_def_cfa_register 7
 662:.\Generated_Source\PSoC5/USBFS.c ****     return(USBFS_configuration);
 772              		.loc 1 662 0
 773 0004 40F20003 		movw	r3, #:lower16:USBFS_configuration
 774 0008 C0F20003 		movt	r3, #:upper16:USBFS_configuration
 775 000c 1B78     		ldrb	r3, [r3, #0]
 776 000e DBB2     		uxtb	r3, r3
 663:.\Generated_Source\PSoC5/USBFS.c **** }
 777              		.loc 1 663 0
 778 0010 1846     		mov	r0, r3
 779 0012 BD46     		mov	sp, r7
 780 0014 80BC     		pop	{r7}
 781 0016 7047     		bx	lr
 782              		.cfi_endproc
 783              	.LFE6:
 784              		.size	USBFS_GetConfiguration, .-USBFS_GetConfiguration
 785              		.section	.text.USBFS_IsConfigurationChanged,"ax",%progbits
 786              		.align	2
 787              		.global	USBFS_IsConfigurationChanged
 788              		.thumb
 789              		.thumb_func
 790              		.type	USBFS_IsConfigurationChanged, %function
 791              	USBFS_IsConfigurationChanged:
 792              	.LFB7:
 664:.\Generated_Source\PSoC5/USBFS.c **** 
 665:.\Generated_Source\PSoC5/USBFS.c **** 
 666:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 667:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_IsConfigurationChanged
 668:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
 669:.\Generated_Source\PSoC5/USBFS.c **** *
 670:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
 671:.\Generated_Source\PSoC5/USBFS.c **** *  Returns the clear on read configuration state. It is usefull when PC send
 672:.\Generated_Source\PSoC5/USBFS.c **** *  double SET_CONFIGURATION request with same configuration number.
 673:.\Generated_Source\PSoC5/USBFS.c **** *
 674:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
 675:.\Generated_Source\PSoC5/USBFS.c **** *  None.
 676:.\Generated_Source\PSoC5/USBFS.c **** *
 677:.\Generated_Source\PSoC5/USBFS.c **** * Return:
 678:.\Generated_Source\PSoC5/USBFS.c **** *  Not zero value when new configuration has been changed, otherwise zero is
 679:.\Generated_Source\PSoC5/USBFS.c **** *  returned.
 680:.\Generated_Source\PSoC5/USBFS.c **** *
 681:.\Generated_Source\PSoC5/USBFS.c **** * Global variables:
 682:.\Generated_Source\PSoC5/USBFS.c **** *   USBFS_configurationChanged: This variable is set to one after
 683:.\Generated_Source\PSoC5/USBFS.c **** *       SET_CONFIGURATION request and cleared in this function.
 684:.\Generated_Source\PSoC5/USBFS.c **** *
 685:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 686:.\Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_IsConfigurationChanged(void) 
 687:.\Generated_Source\PSoC5/USBFS.c **** {
 793              		.loc 1 687 0
 794              		.cfi_startproc
 795              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 27


 796              		@ frame_needed = 1, uses_anonymous_args = 0
 797              		@ link register save eliminated.
 798 0000 80B4     		push	{r7}
 799              	.LCFI18:
 800              		.cfi_def_cfa_offset 4
 801              		.cfi_offset 7, -4
 802 0002 83B0     		sub	sp, sp, #12
 803              	.LCFI19:
 804              		.cfi_def_cfa_offset 16
 805 0004 00AF     		add	r7, sp, #0
 806              	.LCFI20:
 807              		.cfi_def_cfa_register 7
 688:.\Generated_Source\PSoC5/USBFS.c ****     uint8 res = 0u;
 808              		.loc 1 688 0
 809 0006 4FF00003 		mov	r3, #0
 810 000a FB71     		strb	r3, [r7, #7]
 689:.\Generated_Source\PSoC5/USBFS.c **** 
 690:.\Generated_Source\PSoC5/USBFS.c ****     if(USBFS_configurationChanged != 0u)
 811              		.loc 1 690 0
 812 000c 40F20003 		movw	r3, #:lower16:USBFS_configurationChanged
 813 0010 C0F20003 		movt	r3, #:upper16:USBFS_configurationChanged
 814 0014 1B78     		ldrb	r3, [r3, #0]
 815 0016 DBB2     		uxtb	r3, r3
 816 0018 002B     		cmp	r3, #0
 817 001a 0CD0     		beq	.L17
 691:.\Generated_Source\PSoC5/USBFS.c ****     {
 692:.\Generated_Source\PSoC5/USBFS.c ****         res = USBFS_configurationChanged;
 818              		.loc 1 692 0
 819 001c 40F20003 		movw	r3, #:lower16:USBFS_configurationChanged
 820 0020 C0F20003 		movt	r3, #:upper16:USBFS_configurationChanged
 821 0024 1B78     		ldrb	r3, [r3, #0]
 822 0026 FB71     		strb	r3, [r7, #7]
 693:.\Generated_Source\PSoC5/USBFS.c ****         USBFS_configurationChanged = 0u;
 823              		.loc 1 693 0
 824 0028 40F20003 		movw	r3, #:lower16:USBFS_configurationChanged
 825 002c C0F20003 		movt	r3, #:upper16:USBFS_configurationChanged
 826 0030 4FF00002 		mov	r2, #0
 827 0034 1A70     		strb	r2, [r3, #0]
 828              	.L17:
 694:.\Generated_Source\PSoC5/USBFS.c ****     }
 695:.\Generated_Source\PSoC5/USBFS.c **** 
 696:.\Generated_Source\PSoC5/USBFS.c ****     return(res);
 829              		.loc 1 696 0
 830 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 697:.\Generated_Source\PSoC5/USBFS.c **** }
 831              		.loc 1 697 0
 832 0038 1846     		mov	r0, r3
 833 003a 07F10C07 		add	r7, r7, #12
 834 003e BD46     		mov	sp, r7
 835 0040 80BC     		pop	{r7}
 836 0042 7047     		bx	lr
 837              		.cfi_endproc
 838              	.LFE7:
 839              		.size	USBFS_IsConfigurationChanged, .-USBFS_IsConfigurationChanged
 840              		.section	.text.USBFS_GetInterfaceSetting,"ax",%progbits
 841              		.align	2
 842              		.global	USBFS_GetInterfaceSetting
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 28


 843              		.thumb
 844              		.thumb_func
 845              		.type	USBFS_GetInterfaceSetting, %function
 846              	USBFS_GetInterfaceSetting:
 847              	.LFB8:
 698:.\Generated_Source\PSoC5/USBFS.c **** 
 699:.\Generated_Source\PSoC5/USBFS.c **** 
 700:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 701:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_GetInterfaceSetting
 702:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
 703:.\Generated_Source\PSoC5/USBFS.c **** *
 704:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
 705:.\Generated_Source\PSoC5/USBFS.c **** *  Returns the alternate setting from current interface
 706:.\Generated_Source\PSoC5/USBFS.c **** *
 707:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
 708:.\Generated_Source\PSoC5/USBFS.c **** *  uint8 interfaceNumber, interface number
 709:.\Generated_Source\PSoC5/USBFS.c **** *
 710:.\Generated_Source\PSoC5/USBFS.c **** * Return:
 711:.\Generated_Source\PSoC5/USBFS.c **** *  Alternate setting.
 712:.\Generated_Source\PSoC5/USBFS.c **** *
 713:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 714:.\Generated_Source\PSoC5/USBFS.c **** uint8  USBFS_GetInterfaceSetting(uint8 interfaceNumber)
 715:.\Generated_Source\PSoC5/USBFS.c ****                                                     
 716:.\Generated_Source\PSoC5/USBFS.c **** {
 848              		.loc 1 716 0
 849              		.cfi_startproc
 850              		@ args = 0, pretend = 0, frame = 8
 851              		@ frame_needed = 1, uses_anonymous_args = 0
 852              		@ link register save eliminated.
 853 0000 80B4     		push	{r7}
 854              	.LCFI21:
 855              		.cfi_def_cfa_offset 4
 856              		.cfi_offset 7, -4
 857 0002 83B0     		sub	sp, sp, #12
 858              	.LCFI22:
 859              		.cfi_def_cfa_offset 16
 860 0004 00AF     		add	r7, sp, #0
 861              	.LCFI23:
 862              		.cfi_def_cfa_register 7
 863 0006 0346     		mov	r3, r0
 864 0008 FB71     		strb	r3, [r7, #7]
 717:.\Generated_Source\PSoC5/USBFS.c ****     return(USBFS_interfaceSetting[interfaceNumber]);
 865              		.loc 1 717 0
 866 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 867 000c 40F20003 		movw	r3, #:lower16:USBFS_interfaceSetting
 868 0010 C0F20003 		movt	r3, #:upper16:USBFS_interfaceSetting
 869 0014 9B5C     		ldrb	r3, [r3, r2]
 870 0016 DBB2     		uxtb	r3, r3
 718:.\Generated_Source\PSoC5/USBFS.c **** }
 871              		.loc 1 718 0
 872 0018 1846     		mov	r0, r3
 873 001a 07F10C07 		add	r7, r7, #12
 874 001e BD46     		mov	sp, r7
 875 0020 80BC     		pop	{r7}
 876 0022 7047     		bx	lr
 877              		.cfi_endproc
 878              	.LFE8:
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 29


 879              		.size	USBFS_GetInterfaceSetting, .-USBFS_GetInterfaceSetting
 880              		.section	.text.USBFS_GetEPState,"ax",%progbits
 881              		.align	2
 882              		.global	USBFS_GetEPState
 883              		.thumb
 884              		.thumb_func
 885              		.type	USBFS_GetEPState, %function
 886              	USBFS_GetEPState:
 887              	.LFB9:
 719:.\Generated_Source\PSoC5/USBFS.c **** 
 720:.\Generated_Source\PSoC5/USBFS.c **** 
 721:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 722:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_GetEPState
 723:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
 724:.\Generated_Source\PSoC5/USBFS.c **** *
 725:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
 726:.\Generated_Source\PSoC5/USBFS.c **** *  Returned the state of the requested endpoint.
 727:.\Generated_Source\PSoC5/USBFS.c **** *
 728:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
 729:.\Generated_Source\PSoC5/USBFS.c **** *  epNumber: Endpoint Number
 730:.\Generated_Source\PSoC5/USBFS.c **** *
 731:.\Generated_Source\PSoC5/USBFS.c **** * Return:
 732:.\Generated_Source\PSoC5/USBFS.c **** *  State of the requested endpoint.
 733:.\Generated_Source\PSoC5/USBFS.c **** *
 734:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 735:.\Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_GetEPState(uint8 epNumber) 
 736:.\Generated_Source\PSoC5/USBFS.c **** {
 888              		.loc 1 736 0
 889              		.cfi_startproc
 890              		@ args = 0, pretend = 0, frame = 8
 891              		@ frame_needed = 1, uses_anonymous_args = 0
 892              		@ link register save eliminated.
 893 0000 80B4     		push	{r7}
 894              	.LCFI24:
 895              		.cfi_def_cfa_offset 4
 896              		.cfi_offset 7, -4
 897 0002 83B0     		sub	sp, sp, #12
 898              	.LCFI25:
 899              		.cfi_def_cfa_offset 16
 900 0004 00AF     		add	r7, sp, #0
 901              	.LCFI26:
 902              		.cfi_def_cfa_register 7
 903 0006 0346     		mov	r3, r0
 904 0008 FB71     		strb	r3, [r7, #7]
 737:.\Generated_Source\PSoC5/USBFS.c ****     return(USBFS_EP[epNumber].apiEpState);
 905              		.loc 1 737 0
 906 000a F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 907 000c 40F20002 		movw	r2, #:lower16:USBFS_EP
 908 0010 C0F20002 		movt	r2, #:upper16:USBFS_EP
 909 0014 0B46     		mov	r3, r1
 910 0016 4FEA4303 		lsl	r3, r3, #1
 911 001a 5B18     		adds	r3, r3, r1
 912 001c 4FEA8303 		lsl	r3, r3, #2
 913 0020 D318     		adds	r3, r2, r3
 914 0022 5B78     		ldrb	r3, [r3, #1]
 915 0024 DBB2     		uxtb	r3, r3
 738:.\Generated_Source\PSoC5/USBFS.c **** }
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 30


 916              		.loc 1 738 0
 917 0026 1846     		mov	r0, r3
 918 0028 07F10C07 		add	r7, r7, #12
 919 002c BD46     		mov	sp, r7
 920 002e 80BC     		pop	{r7}
 921 0030 7047     		bx	lr
 922              		.cfi_endproc
 923              	.LFE9:
 924              		.size	USBFS_GetEPState, .-USBFS_GetEPState
 925 0032 00BF     		.section	.text.USBFS_GetEPCount,"ax",%progbits
 926              		.align	2
 927              		.global	USBFS_GetEPCount
 928              		.thumb
 929              		.thumb_func
 930              		.type	USBFS_GetEPCount, %function
 931              	USBFS_GetEPCount:
 932              	.LFB10:
 739:.\Generated_Source\PSoC5/USBFS.c **** 
 740:.\Generated_Source\PSoC5/USBFS.c **** 
 741:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 742:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_GetEPCount
 743:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
 744:.\Generated_Source\PSoC5/USBFS.c **** *
 745:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
 746:.\Generated_Source\PSoC5/USBFS.c **** *  This function supports Data Endpoints only(EP1-EP8).
 747:.\Generated_Source\PSoC5/USBFS.c **** *  Returns the transfer count for the requested endpoint.  The value from
 748:.\Generated_Source\PSoC5/USBFS.c **** *  the count registers includes 2 counts for the two byte checksum of the
 749:.\Generated_Source\PSoC5/USBFS.c **** *  packet.  This function subtracts the two counts.
 750:.\Generated_Source\PSoC5/USBFS.c **** *
 751:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
 752:.\Generated_Source\PSoC5/USBFS.c **** *  epNumber: Data Endpoint Number.
 753:.\Generated_Source\PSoC5/USBFS.c **** *            Valid values are between 1 and 8.
 754:.\Generated_Source\PSoC5/USBFS.c **** *
 755:.\Generated_Source\PSoC5/USBFS.c **** * Return:
 756:.\Generated_Source\PSoC5/USBFS.c **** *  Returns the current byte count from the specified endpoint or 0 for an
 757:.\Generated_Source\PSoC5/USBFS.c **** *  invalid endpoint.
 758:.\Generated_Source\PSoC5/USBFS.c **** *
 759:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 760:.\Generated_Source\PSoC5/USBFS.c **** uint16 USBFS_GetEPCount(uint8 epNumber) 
 761:.\Generated_Source\PSoC5/USBFS.c **** {
 933              		.loc 1 761 0
 934              		.cfi_startproc
 935              		@ args = 0, pretend = 0, frame = 16
 936              		@ frame_needed = 1, uses_anonymous_args = 0
 937              		@ link register save eliminated.
 938 0000 80B4     		push	{r7}
 939              	.LCFI27:
 940              		.cfi_def_cfa_offset 4
 941              		.cfi_offset 7, -4
 942 0002 85B0     		sub	sp, sp, #20
 943              	.LCFI28:
 944              		.cfi_def_cfa_offset 24
 945 0004 00AF     		add	r7, sp, #0
 946              	.LCFI29:
 947              		.cfi_def_cfa_register 7
 948 0006 0346     		mov	r3, r0
 949 0008 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 31


 762:.\Generated_Source\PSoC5/USBFS.c ****     uint8 ri;
 763:.\Generated_Source\PSoC5/USBFS.c ****     uint16 result = 0u;
 950              		.loc 1 763 0
 951 000a 4FF00003 		mov	r3, #0
 952 000e FB81     		strh	r3, [r7, #14]	@ movhi
 764:.\Generated_Source\PSoC5/USBFS.c **** 
 765:.\Generated_Source\PSoC5/USBFS.c ****     if((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 953              		.loc 1 765 0
 954 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 955 0012 002B     		cmp	r3, #0
 956 0014 27D0     		beq	.L24
 957              		.loc 1 765 0 is_stmt 0 discriminator 1
 958 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 959 0018 082B     		cmp	r3, #8
 960 001a 24D8     		bhi	.L24
 766:.\Generated_Source\PSoC5/USBFS.c ****     {
 767:.\Generated_Source\PSoC5/USBFS.c ****         ri = ((epNumber - USBFS_EP1) << USBFS_EPX_CNTX_ADDR_SHIFT);
 961              		.loc 1 767 0 is_stmt 1
 962 001c FB79     		ldrb	r3, [r7, #7]
 963 001e 03F1FF33 		add	r3, r3, #-1
 964 0022 DBB2     		uxtb	r3, r3
 965 0024 4FEA0313 		lsl	r3, r3, #4
 966 0028 7B73     		strb	r3, [r7, #13]
 768:.\Generated_Source\PSoC5/USBFS.c **** 
 769:.\Generated_Source\PSoC5/USBFS.c ****         result = (uint8)(CY_GET_REG8((reg8 *)(USBFS_SIE_EP1_CNT0_IND + ri)) &
 967              		.loc 1 769 0
 968 002a 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 969 002c 46F20C03 		movw	r3, #24588
 970 0030 C4F20003 		movt	r3, 16384
 971 0034 D318     		adds	r3, r2, r3
 972 0036 1B78     		ldrb	r3, [r3, #0]
 973 0038 DBB2     		uxtb	r3, r3
 974 003a 03F00F03 		and	r3, r3, #15
 975 003e FB81     		strh	r3, [r7, #14]	@ movhi
 770:.\Generated_Source\PSoC5/USBFS.c ****                           USBFS_EPX_CNT0_MASK);
 771:.\Generated_Source\PSoC5/USBFS.c ****         result = (result << 8u) | CY_GET_REG8((reg8 *)(USBFS_SIE_EP1_CNT1_IND + ri));
 976              		.loc 1 771 0
 977 0040 FB89     		ldrh	r3, [r7, #14]
 978 0042 4FEA0323 		lsl	r3, r3, #8
 979 0046 9AB2     		uxth	r2, r3
 980 0048 797B     		ldrb	r1, [r7, #13]	@ zero_extendqisi2
 981 004a 46F20D03 		movw	r3, #24589
 982 004e C4F20003 		movt	r3, 16384
 983 0052 CB18     		adds	r3, r1, r3
 984 0054 1B78     		ldrb	r3, [r3, #0]
 985 0056 DBB2     		uxtb	r3, r3
 986 0058 1343     		orrs	r3, r3, r2
 987 005a 9BB2     		uxth	r3, r3
 988 005c FB81     		strh	r3, [r7, #14]	@ movhi
 772:.\Generated_Source\PSoC5/USBFS.c ****         result -= USBFS_EPX_CNTX_CRC_COUNT;
 989              		.loc 1 772 0
 990 005e FB89     		ldrh	r3, [r7, #14]	@ movhi
 991 0060 A3F10203 		sub	r3, r3, #2
 992 0064 FB81     		strh	r3, [r7, #14]	@ movhi
 993              	.L24:
 773:.\Generated_Source\PSoC5/USBFS.c ****     }
 774:.\Generated_Source\PSoC5/USBFS.c ****     return(result);
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 32


 994              		.loc 1 774 0
 995 0066 FB89     		ldrh	r3, [r7, #14]
 775:.\Generated_Source\PSoC5/USBFS.c **** }
 996              		.loc 1 775 0
 997 0068 1846     		mov	r0, r3
 998 006a 07F11407 		add	r7, r7, #20
 999 006e BD46     		mov	sp, r7
 1000 0070 80BC     		pop	{r7}
 1001 0072 7047     		bx	lr
 1002              		.cfi_endproc
 1003              	.LFE10:
 1004              		.size	USBFS_GetEPCount, .-USBFS_GetEPCount
 1005              		.section	.text.USBFS_LoadInEP,"ax",%progbits
 1006              		.align	2
 1007              		.global	USBFS_LoadInEP
 1008              		.thumb
 1009              		.thumb_func
 1010              		.type	USBFS_LoadInEP, %function
 1011              	USBFS_LoadInEP:
 1012              	.LFB11:
 776:.\Generated_Source\PSoC5/USBFS.c **** 
 777:.\Generated_Source\PSoC5/USBFS.c **** 
 778:.\Generated_Source\PSoC5/USBFS.c **** #if(USBFS_EP_MM != USBFS__EP_MANUAL)
 779:.\Generated_Source\PSoC5/USBFS.c **** 
 780:.\Generated_Source\PSoC5/USBFS.c **** 
 781:.\Generated_Source\PSoC5/USBFS.c ****     /*******************************************************************************
 782:.\Generated_Source\PSoC5/USBFS.c ****     * Function Name: USBFS_InitEP_DMA
 783:.\Generated_Source\PSoC5/USBFS.c ****     ********************************************************************************
 784:.\Generated_Source\PSoC5/USBFS.c ****     *
 785:.\Generated_Source\PSoC5/USBFS.c ****     * Summary:
 786:.\Generated_Source\PSoC5/USBFS.c ****     *  This function allocates and initializes a DMA channel to be used by the
 787:.\Generated_Source\PSoC5/USBFS.c ****     *  USBFS_LoadInEP() or USBFS_ReadOutEP() APIs for data
 788:.\Generated_Source\PSoC5/USBFS.c ****     *  transfer.
 789:.\Generated_Source\PSoC5/USBFS.c ****     *
 790:.\Generated_Source\PSoC5/USBFS.c ****     * Parameters:
 791:.\Generated_Source\PSoC5/USBFS.c ****     *  epNumber: Contains the data endpoint number.
 792:.\Generated_Source\PSoC5/USBFS.c ****     *            Valid values are between 1 and 8.
 793:.\Generated_Source\PSoC5/USBFS.c ****     *  *pData: Pointer to a data array that is related to the EP transfers.
 794:.\Generated_Source\PSoC5/USBFS.c ****     *
 795:.\Generated_Source\PSoC5/USBFS.c ****     * Return:
 796:.\Generated_Source\PSoC5/USBFS.c ****     *  None.
 797:.\Generated_Source\PSoC5/USBFS.c ****     *
 798:.\Generated_Source\PSoC5/USBFS.c ****     * Reentrant:
 799:.\Generated_Source\PSoC5/USBFS.c ****     *  No.
 800:.\Generated_Source\PSoC5/USBFS.c ****     *
 801:.\Generated_Source\PSoC5/USBFS.c ****     *******************************************************************************/
 802:.\Generated_Source\PSoC5/USBFS.c ****     void USBFS_InitEP_DMA(uint8 epNumber, const uint8* pData)
 803:.\Generated_Source\PSoC5/USBFS.c ****                                                                     
 804:.\Generated_Source\PSoC5/USBFS.c ****     {
 805:.\Generated_Source\PSoC5/USBFS.c ****         uint16 src;
 806:.\Generated_Source\PSoC5/USBFS.c ****         uint16 dst;
 807:.\Generated_Source\PSoC5/USBFS.c ****         #if (CY_PSOC3)                  /* PSoC 3 */
 808:.\Generated_Source\PSoC5/USBFS.c ****             src = HI16(CYDEV_SRAM_BASE);
 809:.\Generated_Source\PSoC5/USBFS.c ****             dst = HI16(CYDEV_PERIPH_BASE);
 810:.\Generated_Source\PSoC5/USBFS.c ****             pData = pData;
 811:.\Generated_Source\PSoC5/USBFS.c ****         #else                           /* PSoC 5 */
 812:.\Generated_Source\PSoC5/USBFS.c ****             if((USBFS_EP[epNumber].addr & USBFS_DIR_IN) != 0u )
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 33


 813:.\Generated_Source\PSoC5/USBFS.c ****             {   /* for the IN EP source is the SRAM memory buffer */
 814:.\Generated_Source\PSoC5/USBFS.c ****                 src = HI16(pData);
 815:.\Generated_Source\PSoC5/USBFS.c ****                 dst = HI16(CYDEV_PERIPH_BASE);
 816:.\Generated_Source\PSoC5/USBFS.c ****             }
 817:.\Generated_Source\PSoC5/USBFS.c ****             else
 818:.\Generated_Source\PSoC5/USBFS.c ****             {   /* for the OUT EP source is the SIE register */
 819:.\Generated_Source\PSoC5/USBFS.c ****                 src = HI16(CYDEV_PERIPH_BASE);
 820:.\Generated_Source\PSoC5/USBFS.c ****                 dst = HI16(pData);
 821:.\Generated_Source\PSoC5/USBFS.c ****             }
 822:.\Generated_Source\PSoC5/USBFS.c ****         #endif  /*  C51 */
 823:.\Generated_Source\PSoC5/USBFS.c ****         switch(epNumber)
 824:.\Generated_Source\PSoC5/USBFS.c ****         {
 825:.\Generated_Source\PSoC5/USBFS.c ****             case USBFS_EP1:
 826:.\Generated_Source\PSoC5/USBFS.c ****                 #if(USBFS_DMA1_REMOVE == 0u)
 827:.\Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaChan[epNumber] = USBFS_ep1_DmaInitialize(
 828:.\Generated_Source\PSoC5/USBFS.c ****                         USBFS_DMA_BYTES_PER_BURST, USBFS_DMA_REQUEST_PER_BURST, src, dst);
 829:.\Generated_Source\PSoC5/USBFS.c ****                 #endif   /*  USBFS_DMA1_REMOVE */
 830:.\Generated_Source\PSoC5/USBFS.c ****                 break;
 831:.\Generated_Source\PSoC5/USBFS.c ****             case USBFS_EP2:
 832:.\Generated_Source\PSoC5/USBFS.c ****                 #if(USBFS_DMA2_REMOVE == 0u)
 833:.\Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaChan[epNumber] = USBFS_ep2_DmaInitialize(
 834:.\Generated_Source\PSoC5/USBFS.c ****                         USBFS_DMA_BYTES_PER_BURST, USBFS_DMA_REQUEST_PER_BURST, src, dst);
 835:.\Generated_Source\PSoC5/USBFS.c ****                 #endif   /*  USBFS_DMA2_REMOVE */
 836:.\Generated_Source\PSoC5/USBFS.c ****                 break;
 837:.\Generated_Source\PSoC5/USBFS.c ****             case USBFS_EP3:
 838:.\Generated_Source\PSoC5/USBFS.c ****                 #if(USBFS_DMA3_REMOVE == 0u)
 839:.\Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaChan[epNumber] = USBFS_ep3_DmaInitialize(
 840:.\Generated_Source\PSoC5/USBFS.c ****                         USBFS_DMA_BYTES_PER_BURST, USBFS_DMA_REQUEST_PER_BURST, src, dst);
 841:.\Generated_Source\PSoC5/USBFS.c ****                 #endif   /*  USBFS_DMA3_REMOVE */
 842:.\Generated_Source\PSoC5/USBFS.c ****                 break;
 843:.\Generated_Source\PSoC5/USBFS.c ****             case USBFS_EP4:
 844:.\Generated_Source\PSoC5/USBFS.c ****                 #if(USBFS_DMA4_REMOVE == 0u)
 845:.\Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaChan[epNumber] = USBFS_ep4_DmaInitialize(
 846:.\Generated_Source\PSoC5/USBFS.c ****                         USBFS_DMA_BYTES_PER_BURST, USBFS_DMA_REQUEST_PER_BURST, src, dst);
 847:.\Generated_Source\PSoC5/USBFS.c ****                 #endif   /*  USBFS_DMA4_REMOVE */
 848:.\Generated_Source\PSoC5/USBFS.c ****                 break;
 849:.\Generated_Source\PSoC5/USBFS.c ****             case USBFS_EP5:
 850:.\Generated_Source\PSoC5/USBFS.c ****                 #if(USBFS_DMA5_REMOVE == 0u)
 851:.\Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaChan[epNumber] = USBFS_ep5_DmaInitialize(
 852:.\Generated_Source\PSoC5/USBFS.c ****                         USBFS_DMA_BYTES_PER_BURST, USBFS_DMA_REQUEST_PER_BURST, src, dst);
 853:.\Generated_Source\PSoC5/USBFS.c ****                 #endif   /*  USBFS_DMA5_REMOVE */
 854:.\Generated_Source\PSoC5/USBFS.c ****                 break;
 855:.\Generated_Source\PSoC5/USBFS.c ****             case USBFS_EP6:
 856:.\Generated_Source\PSoC5/USBFS.c ****                 #if(USBFS_DMA6_REMOVE == 0u)
 857:.\Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaChan[epNumber] = USBFS_ep6_DmaInitialize(
 858:.\Generated_Source\PSoC5/USBFS.c ****                         USBFS_DMA_BYTES_PER_BURST, USBFS_DMA_REQUEST_PER_BURST, src, dst);
 859:.\Generated_Source\PSoC5/USBFS.c ****                 #endif   /*  USBFS_DMA6_REMOVE */
 860:.\Generated_Source\PSoC5/USBFS.c ****                 break;
 861:.\Generated_Source\PSoC5/USBFS.c ****             case USBFS_EP7:
 862:.\Generated_Source\PSoC5/USBFS.c ****                 #if(USBFS_DMA7_REMOVE == 0u)
 863:.\Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaChan[epNumber] = USBFS_ep7_DmaInitialize(
 864:.\Generated_Source\PSoC5/USBFS.c ****                         USBFS_DMA_BYTES_PER_BURST, USBFS_DMA_REQUEST_PER_BURST, src, dst);
 865:.\Generated_Source\PSoC5/USBFS.c ****                 #endif   /*  USBFS_DMA7_REMOVE */
 866:.\Generated_Source\PSoC5/USBFS.c ****                 break;
 867:.\Generated_Source\PSoC5/USBFS.c ****             case USBFS_EP8:
 868:.\Generated_Source\PSoC5/USBFS.c ****                 #if(USBFS_DMA8_REMOVE == 0u)
 869:.\Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaChan[epNumber] = USBFS_ep8_DmaInitialize(
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 34


 870:.\Generated_Source\PSoC5/USBFS.c ****                         USBFS_DMA_BYTES_PER_BURST, USBFS_DMA_REQUEST_PER_BURST, src, dst);
 871:.\Generated_Source\PSoC5/USBFS.c ****                 #endif   /*  USBFS_DMA8_REMOVE */
 872:.\Generated_Source\PSoC5/USBFS.c ****                 break;
 873:.\Generated_Source\PSoC5/USBFS.c ****             default:
 874:.\Generated_Source\PSoC5/USBFS.c ****                 /* Do not support EP0 DMA transfers */
 875:.\Generated_Source\PSoC5/USBFS.c ****                 break;
 876:.\Generated_Source\PSoC5/USBFS.c ****         }
 877:.\Generated_Source\PSoC5/USBFS.c ****         if((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 878:.\Generated_Source\PSoC5/USBFS.c ****         {
 879:.\Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaTd[epNumber] = CyDmaTdAllocate();
 880:.\Generated_Source\PSoC5/USBFS.c ****             #if ((USBFS_EP_MM == USBFS__EP_DMAAUTO) && (USBFS_EP_DMA_AUTO_OPT == 0u))
 881:.\Generated_Source\PSoC5/USBFS.c ****                 USBFS_DmaNextTd[epNumber] = CyDmaTdAllocate();
 882:.\Generated_Source\PSoC5/USBFS.c ****             #endif /*  ((USBFS_EP_MM == USBFS__EP_DMAAUTO) && (USBFS_EP_DMA_AUTO_OPT == 0u)) */
 883:.\Generated_Source\PSoC5/USBFS.c **** 
 884:.\Generated_Source\PSoC5/USBFS.c ****         }
 885:.\Generated_Source\PSoC5/USBFS.c ****     }
 886:.\Generated_Source\PSoC5/USBFS.c **** 
 887:.\Generated_Source\PSoC5/USBFS.c **** 
 888:.\Generated_Source\PSoC5/USBFS.c ****     /*******************************************************************************
 889:.\Generated_Source\PSoC5/USBFS.c ****     * Function Name: USBFS_Stop_DMA
 890:.\Generated_Source\PSoC5/USBFS.c ****     ********************************************************************************
 891:.\Generated_Source\PSoC5/USBFS.c ****     *
 892:.\Generated_Source\PSoC5/USBFS.c ****     * Summary: Stops and free DMA
 893:.\Generated_Source\PSoC5/USBFS.c ****     *
 894:.\Generated_Source\PSoC5/USBFS.c ****     * Parameters:
 895:.\Generated_Source\PSoC5/USBFS.c ****     *  epNumber: Contains the data endpoint number or
 896:.\Generated_Source\PSoC5/USBFS.c ****     *           USBFS_MAX_EP to stop all DMAs
 897:.\Generated_Source\PSoC5/USBFS.c ****     *
 898:.\Generated_Source\PSoC5/USBFS.c ****     * Return:
 899:.\Generated_Source\PSoC5/USBFS.c ****     *  None.
 900:.\Generated_Source\PSoC5/USBFS.c ****     *
 901:.\Generated_Source\PSoC5/USBFS.c ****     * Reentrant:
 902:.\Generated_Source\PSoC5/USBFS.c ****     *  No.
 903:.\Generated_Source\PSoC5/USBFS.c ****     *
 904:.\Generated_Source\PSoC5/USBFS.c ****     *******************************************************************************/
 905:.\Generated_Source\PSoC5/USBFS.c ****     void USBFS_Stop_DMA(uint8 epNumber) 
 906:.\Generated_Source\PSoC5/USBFS.c ****     {
 907:.\Generated_Source\PSoC5/USBFS.c ****         uint8 i;
 908:.\Generated_Source\PSoC5/USBFS.c ****         i = (epNumber < USBFS_MAX_EP) ? epNumber : USBFS_EP1;
 909:.\Generated_Source\PSoC5/USBFS.c ****         do
 910:.\Generated_Source\PSoC5/USBFS.c ****         {
 911:.\Generated_Source\PSoC5/USBFS.c ****             if(USBFS_DmaTd[i] != DMA_INVALID_TD)
 912:.\Generated_Source\PSoC5/USBFS.c ****             {
 913:.\Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaChDisable(USBFS_DmaChan[i]);
 914:.\Generated_Source\PSoC5/USBFS.c ****                 CyDmaTdFree(USBFS_DmaTd[i]);
 915:.\Generated_Source\PSoC5/USBFS.c ****                 USBFS_DmaTd[i] = DMA_INVALID_TD;
 916:.\Generated_Source\PSoC5/USBFS.c ****             }
 917:.\Generated_Source\PSoC5/USBFS.c ****             #if ((USBFS_EP_MM == USBFS__EP_DMAAUTO) && (USBFS_EP_DMA_AUTO_OPT == 0u))
 918:.\Generated_Source\PSoC5/USBFS.c ****                 if(USBFS_DmaNextTd[i] != DMA_INVALID_TD)
 919:.\Generated_Source\PSoC5/USBFS.c ****                 {
 920:.\Generated_Source\PSoC5/USBFS.c ****                     CyDmaTdFree(USBFS_DmaNextTd[i]);
 921:.\Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaNextTd[i] = DMA_INVALID_TD;
 922:.\Generated_Source\PSoC5/USBFS.c ****                 }
 923:.\Generated_Source\PSoC5/USBFS.c ****             #endif /* ((USBFS_EP_MM == USBFS__EP_DMAAUTO) && (USBFS_EP_DMA_AUTO_OPT == 0u)) */
 924:.\Generated_Source\PSoC5/USBFS.c ****             i++;
 925:.\Generated_Source\PSoC5/USBFS.c ****         }while((i < USBFS_MAX_EP) && (epNumber == USBFS_MAX_EP));
 926:.\Generated_Source\PSoC5/USBFS.c ****     }
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 35


 927:.\Generated_Source\PSoC5/USBFS.c **** 
 928:.\Generated_Source\PSoC5/USBFS.c **** #endif /*  USBFS_EP_MM != USBFS__EP_MANUAL */
 929:.\Generated_Source\PSoC5/USBFS.c **** 
 930:.\Generated_Source\PSoC5/USBFS.c **** 
 931:.\Generated_Source\PSoC5/USBFS.c **** #if ((USBFS_EP_MM == USBFS__EP_DMAAUTO) && (USBFS_EP_DMA_AUTO_OPT == 0u))
 932:.\Generated_Source\PSoC5/USBFS.c **** 
 933:.\Generated_Source\PSoC5/USBFS.c **** 
 934:.\Generated_Source\PSoC5/USBFS.c ****     /*******************************************************************************
 935:.\Generated_Source\PSoC5/USBFS.c ****     * Function Name: USBFS_LoadNextInEP
 936:.\Generated_Source\PSoC5/USBFS.c ****     ********************************************************************************
 937:.\Generated_Source\PSoC5/USBFS.c ****     *
 938:.\Generated_Source\PSoC5/USBFS.c ****     * Summary:
 939:.\Generated_Source\PSoC5/USBFS.c ****     *  This internal function is used for IN endpoint DMA reconfiguration in
 940:.\Generated_Source\PSoC5/USBFS.c ****     *  Auto DMA mode.
 941:.\Generated_Source\PSoC5/USBFS.c ****     *
 942:.\Generated_Source\PSoC5/USBFS.c ****     * Parameters:
 943:.\Generated_Source\PSoC5/USBFS.c ****     *  epNumber: Contains the data endpoint number.
 944:.\Generated_Source\PSoC5/USBFS.c ****     *  mode:   0 - Configure DMA to send the the rest of data.
 945:.\Generated_Source\PSoC5/USBFS.c ****     *          1 - Configure DMA to repeat 2 last bytes of the first burst.
 946:.\Generated_Source\PSoC5/USBFS.c ****     *
 947:.\Generated_Source\PSoC5/USBFS.c ****     * Return:
 948:.\Generated_Source\PSoC5/USBFS.c ****     *  None.
 949:.\Generated_Source\PSoC5/USBFS.c ****     *
 950:.\Generated_Source\PSoC5/USBFS.c ****     *******************************************************************************/
 951:.\Generated_Source\PSoC5/USBFS.c ****     void USBFS_LoadNextInEP(uint8 epNumber, uint8 mode) 
 952:.\Generated_Source\PSoC5/USBFS.c ****     {
 953:.\Generated_Source\PSoC5/USBFS.c ****         reg16 *convert;
 954:.\Generated_Source\PSoC5/USBFS.c **** 
 955:.\Generated_Source\PSoC5/USBFS.c ****         if(mode == 0u)
 956:.\Generated_Source\PSoC5/USBFS.c ****         {
 957:.\Generated_Source\PSoC5/USBFS.c ****             /* Configure DMA to send the the rest of data */
 958:.\Generated_Source\PSoC5/USBFS.c ****             /* CyDmaTdSetConfiguration API is optimised to change only transfer length and configur
 959:.\Generated_Source\PSoC5/USBFS.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBFS_DmaTd[epNumber]].TD0[0u];
 960:.\Generated_Source\PSoC5/USBFS.c ****             /* Set transfer length */
 961:.\Generated_Source\PSoC5/USBFS.c ****             CY_SET_REG16(convert, USBFS_inLength[epNumber] - USBFS_DMA_BYTES_PER_BURST);
 962:.\Generated_Source\PSoC5/USBFS.c ****             /* CyDmaTdSetAddress API is optimized to change only source address */
 963:.\Generated_Source\PSoC5/USBFS.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBFS_DmaTd[epNumber]].TD1[0u];
 964:.\Generated_Source\PSoC5/USBFS.c ****             CY_SET_REG16(convert, LO16((uint32)USBFS_inDataPointer[epNumber] +
 965:.\Generated_Source\PSoC5/USBFS.c ****                                             USBFS_DMA_BYTES_PER_BURST));
 966:.\Generated_Source\PSoC5/USBFS.c ****             USBFS_inBufFull[epNumber] = 1u;
 967:.\Generated_Source\PSoC5/USBFS.c ****         }
 968:.\Generated_Source\PSoC5/USBFS.c ****         else
 969:.\Generated_Source\PSoC5/USBFS.c ****         {
 970:.\Generated_Source\PSoC5/USBFS.c ****             /* Configure DMA to repeat 2 last bytes of the first burst. */
 971:.\Generated_Source\PSoC5/USBFS.c ****             /* CyDmaTdSetConfiguration API is optimised to change only transfer length and configur
 972:.\Generated_Source\PSoC5/USBFS.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBFS_DmaTd[epNumber]].TD0[0u];
 973:.\Generated_Source\PSoC5/USBFS.c ****             /* Set transfer length */
 974:.\Generated_Source\PSoC5/USBFS.c ****             CY_SET_REG16(convert, USBFS_DMA_BYTES_REPEAT);
 975:.\Generated_Source\PSoC5/USBFS.c ****             /* CyDmaTdSetAddress API is optimized to change only source address */
 976:.\Generated_Source\PSoC5/USBFS.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBFS_DmaTd[epNumber]].TD1[0u];
 977:.\Generated_Source\PSoC5/USBFS.c ****             CY_SET_REG16(convert,  LO16((uint32)USBFS_inDataPointer[epNumber] +
 978:.\Generated_Source\PSoC5/USBFS.c ****                                    USBFS_DMA_BYTES_PER_BURST - USBFS_DMA_BYTES_REPEAT));
 979:.\Generated_Source\PSoC5/USBFS.c ****         }
 980:.\Generated_Source\PSoC5/USBFS.c **** 
 981:.\Generated_Source\PSoC5/USBFS.c ****         /* CyDmaChSetInitialTd API is optimised to init TD */
 982:.\Generated_Source\PSoC5/USBFS.c ****         CY_DMA_CH_STRUCT_PTR[USBFS_DmaChan[epNumber]].basic_status[1u] = USBFS_DmaTd[epNumber];
 983:.\Generated_Source\PSoC5/USBFS.c ****     }
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 36


 984:.\Generated_Source\PSoC5/USBFS.c **** #endif /* ((USBFS_EP_MM == USBFS__EP_DMAAUTO) && (USBFS_EP_DMA_AUTO_OPT == 0u)) */
 985:.\Generated_Source\PSoC5/USBFS.c **** 
 986:.\Generated_Source\PSoC5/USBFS.c **** 
 987:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 988:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_LoadInEP
 989:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
 990:.\Generated_Source\PSoC5/USBFS.c **** *
 991:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
 992:.\Generated_Source\PSoC5/USBFS.c **** *  Loads and enables the specified USB data endpoint for an IN transfer.
 993:.\Generated_Source\PSoC5/USBFS.c **** *
 994:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
 995:.\Generated_Source\PSoC5/USBFS.c **** *  epNumber: Contains the data endpoint number.
 996:.\Generated_Source\PSoC5/USBFS.c **** *            Valid values are between 1 and 8.
 997:.\Generated_Source\PSoC5/USBFS.c **** *  *pData: A pointer to a data array from which the data for the endpoint space
 998:.\Generated_Source\PSoC5/USBFS.c **** *          is loaded.
 999:.\Generated_Source\PSoC5/USBFS.c **** *  length: The number of bytes to transfer from the array and then send as a
1000:.\Generated_Source\PSoC5/USBFS.c **** *          result of an IN request. Valid values are between 0 and 512.
1001:.\Generated_Source\PSoC5/USBFS.c **** *
1002:.\Generated_Source\PSoC5/USBFS.c **** * Return:
1003:.\Generated_Source\PSoC5/USBFS.c **** *  None.
1004:.\Generated_Source\PSoC5/USBFS.c **** *
1005:.\Generated_Source\PSoC5/USBFS.c **** * Reentrant:
1006:.\Generated_Source\PSoC5/USBFS.c **** *  No.
1007:.\Generated_Source\PSoC5/USBFS.c **** *
1008:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
1009:.\Generated_Source\PSoC5/USBFS.c **** void USBFS_LoadInEP(uint8 epNumber, const uint8 pData[], uint16 length)
1010:.\Generated_Source\PSoC5/USBFS.c ****                                                                         
1011:.\Generated_Source\PSoC5/USBFS.c **** {
 1013              		.loc 1 1011 0
 1014              		.cfi_startproc
 1015              		@ args = 0, pretend = 0, frame = 16
 1016              		@ frame_needed = 1, uses_anonymous_args = 0
 1017              		@ link register save eliminated.
 1018 0000 90B4     		push	{r4, r7}
 1019              	.LCFI30:
 1020              		.cfi_def_cfa_offset 8
 1021              		.cfi_offset 4, -8
 1022              		.cfi_offset 7, -4
 1023 0002 84B0     		sub	sp, sp, #16
 1024              	.LCFI31:
 1025              		.cfi_def_cfa_offset 24
 1026 0004 00AF     		add	r7, sp, #0
 1027              	.LCFI32:
 1028              		.cfi_def_cfa_register 7
 1029 0006 3960     		str	r1, [r7, #0]
 1030 0008 1346     		mov	r3, r2
 1031 000a 0246     		mov	r2, r0
 1032 000c FA71     		strb	r2, [r7, #7]
 1033 000e BB80     		strh	r3, [r7, #4]	@ movhi
1012:.\Generated_Source\PSoC5/USBFS.c ****     uint8 ri;
1013:.\Generated_Source\PSoC5/USBFS.c ****     reg8 *p;
1014:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP_MM == USBFS__EP_MANUAL)
1015:.\Generated_Source\PSoC5/USBFS.c ****         uint16 i;
1016:.\Generated_Source\PSoC5/USBFS.c ****     #endif /*  USBFS_EP_MM == USBFS__EP_MANUAL */
1017:.\Generated_Source\PSoC5/USBFS.c **** 
1018:.\Generated_Source\PSoC5/USBFS.c ****     if((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 1034              		.loc 1 1018 0
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 37


 1035 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1036 0012 002B     		cmp	r3, #0
 1037 0014 00F09680 		beq	.L26
 1038              		.loc 1 1018 0 is_stmt 0 discriminator 1
 1039 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1040 001a 082B     		cmp	r3, #8
 1041 001c 00F29280 		bhi	.L26
1019:.\Generated_Source\PSoC5/USBFS.c ****     {
1020:.\Generated_Source\PSoC5/USBFS.c ****         ri = ((epNumber - USBFS_EP1) << USBFS_EPX_CNTX_ADDR_SHIFT);
 1042              		.loc 1 1020 0 is_stmt 1
 1043 0020 FB79     		ldrb	r3, [r7, #7]
 1044 0022 03F1FF33 		add	r3, r3, #-1
 1045 0026 DBB2     		uxtb	r3, r3
 1046 0028 4FEA0313 		lsl	r3, r3, #4
 1047 002c 7B73     		strb	r3, [r7, #13]
1021:.\Generated_Source\PSoC5/USBFS.c ****         p = (reg8 *)(USBFS_ARB_RW1_DR_IND + ri);
 1048              		.loc 1 1021 0
 1049 002e 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1050 0030 46F28803 		movw	r3, #24712
 1051 0034 C4F20003 		movt	r3, 16384
 1052 0038 D318     		adds	r3, r2, r3
 1053 003a BB60     		str	r3, [r7, #8]
1022:.\Generated_Source\PSoC5/USBFS.c **** 
1023:.\Generated_Source\PSoC5/USBFS.c ****         #if(USBFS_EP_MM != USBFS__EP_DMAAUTO)
1024:.\Generated_Source\PSoC5/USBFS.c ****             /* Limits length to available buffer space, auto MM could send packets up to 1024 bytes
1025:.\Generated_Source\PSoC5/USBFS.c ****             if(length > (USBFS_EPX_DATA_BUF_MAX - USBFS_EP[epNumber].buffOffset))
 1054              		.loc 1 1025 0
 1055 003c B888     		ldrh	r0, [r7, #4]
 1056 003e F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1057 0040 40F20002 		movw	r2, #:lower16:USBFS_EP
 1058 0044 C0F20002 		movt	r2, #:upper16:USBFS_EP
 1059 0048 0B46     		mov	r3, r1
 1060 004a 4FEA4303 		lsl	r3, r3, #1
 1061 004e 5B18     		adds	r3, r3, r1
 1062 0050 4FEA8303 		lsl	r3, r3, #2
 1063 0054 D318     		adds	r3, r2, r3
 1064 0056 DB88     		ldrh	r3, [r3, #6]	@ movhi
 1065 0058 9BB2     		uxth	r3, r3
 1066 005a C3F50073 		rsb	r3, r3, #512
 1067 005e 9842     		cmp	r0, r3
 1068 0060 10D9     		bls	.L28
1026:.\Generated_Source\PSoC5/USBFS.c ****             {
1027:.\Generated_Source\PSoC5/USBFS.c ****                 length = USBFS_EPX_DATA_BUF_MAX - USBFS_EP[epNumber].buffOffset;
 1069              		.loc 1 1027 0
 1070 0062 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1071 0064 40F20002 		movw	r2, #:lower16:USBFS_EP
 1072 0068 C0F20002 		movt	r2, #:upper16:USBFS_EP
 1073 006c 0B46     		mov	r3, r1
 1074 006e 4FEA4303 		lsl	r3, r3, #1
 1075 0072 5B18     		adds	r3, r3, r1
 1076 0074 4FEA8303 		lsl	r3, r3, #2
 1077 0078 D318     		adds	r3, r2, r3
 1078 007a DB88     		ldrh	r3, [r3, #6]	@ movhi
 1079 007c 9BB2     		uxth	r3, r3
 1080 007e C3F50073 		rsb	r3, r3, #512
 1081 0082 BB80     		strh	r3, [r7, #4]	@ movhi
 1082              	.L28:
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 38


1028:.\Generated_Source\PSoC5/USBFS.c ****             }
1029:.\Generated_Source\PSoC5/USBFS.c ****         #endif /*  USBFS_EP_MM != USBFS__EP_DMAAUTO */
1030:.\Generated_Source\PSoC5/USBFS.c **** 
1031:.\Generated_Source\PSoC5/USBFS.c ****         /* Set the count and data toggle */
1032:.\Generated_Source\PSoC5/USBFS.c ****         CY_SET_REG8((reg8 *)(USBFS_SIE_EP1_CNT0_IND + ri),
 1083              		.loc 1 1032 0
 1084 0084 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1085 0086 46F20C03 		movw	r3, #24588
 1086 008a C4F20003 		movt	r3, 16384
 1087 008e D318     		adds	r3, r2, r3
 1088 0090 1846     		mov	r0, r3
 1089 0092 BB88     		ldrh	r3, [r7, #4]
 1090 0094 4FEA1323 		lsr	r3, r3, #8
 1091 0098 9BB2     		uxth	r3, r3
 1092 009a DCB2     		uxtb	r4, r3
 1093 009c F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1094 009e 40F20002 		movw	r2, #:lower16:USBFS_EP
 1095 00a2 C0F20002 		movt	r2, #:upper16:USBFS_EP
 1096 00a6 0B46     		mov	r3, r1
 1097 00a8 4FEA4303 		lsl	r3, r3, #1
 1098 00ac 5B18     		adds	r3, r3, r1
 1099 00ae 4FEA8303 		lsl	r3, r3, #2
 1100 00b2 D318     		adds	r3, r2, r3
 1101 00b4 DB78     		ldrb	r3, [r3, #3]
 1102 00b6 DBB2     		uxtb	r3, r3
 1103 00b8 2343     		orrs	r3, r3, r4
 1104 00ba DBB2     		uxtb	r3, r3
 1105 00bc 0370     		strb	r3, [r0, #0]
1033:.\Generated_Source\PSoC5/USBFS.c ****                             (length >> 8u) | (USBFS_EP[epNumber].epToggle));
1034:.\Generated_Source\PSoC5/USBFS.c ****         CY_SET_REG8((reg8 *)(USBFS_SIE_EP1_CNT1_IND + ri),  length & 0xFFu);
 1106              		.loc 1 1034 0
 1107 00be 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1108 00c0 46F20D03 		movw	r3, #24589
 1109 00c4 C4F20003 		movt	r3, 16384
 1110 00c8 D318     		adds	r3, r2, r3
 1111 00ca BA88     		ldrh	r2, [r7, #4]	@ movhi
 1112 00cc D2B2     		uxtb	r2, r2
 1113 00ce 1A70     		strb	r2, [r3, #0]
1035:.\Generated_Source\PSoC5/USBFS.c **** 
1036:.\Generated_Source\PSoC5/USBFS.c ****         #if(USBFS_EP_MM == USBFS__EP_MANUAL)
1037:.\Generated_Source\PSoC5/USBFS.c ****             if(pData != NULL)
 1114              		.loc 1 1037 0
 1115 00d0 3B68     		ldr	r3, [r7, #0]
 1116 00d2 002B     		cmp	r3, #0
 1117 00d4 11D0     		beq	.L29
1038:.\Generated_Source\PSoC5/USBFS.c ****             {
1039:.\Generated_Source\PSoC5/USBFS.c ****                 /* Copy the data using the arbiter data register */
1040:.\Generated_Source\PSoC5/USBFS.c ****                 for (i = 0u; i < length; i++)
 1118              		.loc 1 1040 0
 1119 00d6 4FF00003 		mov	r3, #0
 1120 00da FB81     		strh	r3, [r7, #14]	@ movhi
 1121 00dc 09E0     		b	.L30
 1122              	.L31:
1041:.\Generated_Source\PSoC5/USBFS.c ****                 {
1042:.\Generated_Source\PSoC5/USBFS.c ****                     CY_SET_REG8(p, pData[i]);
 1123              		.loc 1 1042 0 discriminator 2
 1124 00de FB89     		ldrh	r3, [r7, #14]
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 39


 1125 00e0 3A68     		ldr	r2, [r7, #0]
 1126 00e2 D318     		adds	r3, r2, r3
 1127 00e4 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1128 00e6 BB68     		ldr	r3, [r7, #8]
 1129 00e8 1A70     		strb	r2, [r3, #0]
1040:.\Generated_Source\PSoC5/USBFS.c ****                 for (i = 0u; i < length; i++)
 1130              		.loc 1 1040 0 discriminator 2
 1131 00ea FB89     		ldrh	r3, [r7, #14]	@ movhi
 1132 00ec 03F10103 		add	r3, r3, #1
 1133 00f0 FB81     		strh	r3, [r7, #14]	@ movhi
 1134              	.L30:
1040:.\Generated_Source\PSoC5/USBFS.c ****                 for (i = 0u; i < length; i++)
 1135              		.loc 1 1040 0 is_stmt 0 discriminator 1
 1136 00f2 FA89     		ldrh	r2, [r7, #14]
 1137 00f4 BB88     		ldrh	r3, [r7, #4]
 1138 00f6 9A42     		cmp	r2, r3
 1139 00f8 F1D3     		bcc	.L31
 1140              	.L29:
1043:.\Generated_Source\PSoC5/USBFS.c ****                 }
1044:.\Generated_Source\PSoC5/USBFS.c ****             }
1045:.\Generated_Source\PSoC5/USBFS.c ****             USBFS_EP[epNumber].apiEpState = USBFS_NO_EVENT_PENDING;
 1141              		.loc 1 1045 0 is_stmt 1
 1142 00fa F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1143 00fc 40F20002 		movw	r2, #:lower16:USBFS_EP
 1144 0100 C0F20002 		movt	r2, #:upper16:USBFS_EP
 1145 0104 0B46     		mov	r3, r1
 1146 0106 4FEA4303 		lsl	r3, r3, #1
 1147 010a 5B18     		adds	r3, r3, r1
 1148 010c 4FEA8303 		lsl	r3, r3, #2
 1149 0110 D318     		adds	r3, r2, r3
 1150 0112 4FF00002 		mov	r2, #0
 1151 0116 5A70     		strb	r2, [r3, #1]
1046:.\Generated_Source\PSoC5/USBFS.c ****             /* Write the Mode register */
1047:.\Generated_Source\PSoC5/USBFS.c ****             CY_SET_REG8((reg8 *)(USBFS_SIE_EP1_CR0_IND + ri), USBFS_EP[epNumber].epMode);
 1152              		.loc 1 1047 0
 1153 0118 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1154 011a 46F20E03 		movw	r3, #24590
 1155 011e C4F20003 		movt	r3, 16384
 1156 0122 D318     		adds	r3, r2, r3
 1157 0124 1846     		mov	r0, r3
 1158 0126 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1159 0128 40F20002 		movw	r2, #:lower16:USBFS_EP
 1160 012c C0F20002 		movt	r2, #:upper16:USBFS_EP
 1161 0130 0B46     		mov	r3, r1
 1162 0132 4FEA4303 		lsl	r3, r3, #1
 1163 0136 5B18     		adds	r3, r3, r1
 1164 0138 4FEA8303 		lsl	r3, r3, #2
 1165 013c D318     		adds	r3, r2, r3
 1166 013e 5B79     		ldrb	r3, [r3, #5]
 1167 0140 DBB2     		uxtb	r3, r3
 1168 0142 0370     		strb	r3, [r0, #0]
 1169              	.L26:
1048:.\Generated_Source\PSoC5/USBFS.c ****         #else
1049:.\Generated_Source\PSoC5/USBFS.c ****             /* Init DMA if it was not initialized */
1050:.\Generated_Source\PSoC5/USBFS.c ****             if (USBFS_DmaTd[epNumber] == DMA_INVALID_TD)
1051:.\Generated_Source\PSoC5/USBFS.c ****             {
1052:.\Generated_Source\PSoC5/USBFS.c ****                 USBFS_InitEP_DMA(epNumber, pData);
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 40


1053:.\Generated_Source\PSoC5/USBFS.c ****             }
1054:.\Generated_Source\PSoC5/USBFS.c ****         #endif /*  USBFS_EP_MM == USBFS__EP_MANUAL */
1055:.\Generated_Source\PSoC5/USBFS.c **** 
1056:.\Generated_Source\PSoC5/USBFS.c ****         #if(USBFS_EP_MM == USBFS__EP_DMAMANUAL)
1057:.\Generated_Source\PSoC5/USBFS.c ****             USBFS_EP[epNumber].apiEpState = USBFS_NO_EVENT_PENDING;
1058:.\Generated_Source\PSoC5/USBFS.c ****             if ((pData != NULL) && (length > 0u))
1059:.\Generated_Source\PSoC5/USBFS.c ****             {
1060:.\Generated_Source\PSoC5/USBFS.c ****                 /* Enable DMA in mode2 for transferring data */
1061:.\Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaChDisable(USBFS_DmaChan[epNumber]);
1062:.\Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaTdSetConfiguration(USBFS_DmaTd[epNumber], length, CY_DMA_DISABLE_TD,
1063:.\Generated_Source\PSoC5/USBFS.c ****                                                                                  TD_TERMIN_EN | TD_
1064:.\Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaTdSetAddress(USBFS_DmaTd[epNumber],  LO16((uint32)pData), LO16((uint32)
1065:.\Generated_Source\PSoC5/USBFS.c ****                 /* Enable the DMA */
1066:.\Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaChSetInitialTd(USBFS_DmaChan[epNumber], USBFS_DmaTd[epNumber]);
1067:.\Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaChEnable(USBFS_DmaChan[epNumber], 1u);
1068:.\Generated_Source\PSoC5/USBFS.c ****                 /* Generate DMA request */
1069:.\Generated_Source\PSoC5/USBFS.c ****                 * (reg8 *)(USBFS_ARB_EP1_CFG_IND + ri) |= USBFS_ARB_EPX_CFG_DMA_REQ;
1070:.\Generated_Source\PSoC5/USBFS.c ****                 * (reg8 *)(USBFS_ARB_EP1_CFG_IND + ri) &= ((uint8)(~USBFS_ARB_EPX_CFG_DMA_REQ));
1071:.\Generated_Source\PSoC5/USBFS.c ****                 /* Mode register will be written in arb ISR after DMA transfer complete */
1072:.\Generated_Source\PSoC5/USBFS.c ****             }
1073:.\Generated_Source\PSoC5/USBFS.c ****             else
1074:.\Generated_Source\PSoC5/USBFS.c ****             {
1075:.\Generated_Source\PSoC5/USBFS.c ****                 /* When zero-length packet - write the Mode register directly */
1076:.\Generated_Source\PSoC5/USBFS.c ****                 CY_SET_REG8((reg8 *)(USBFS_SIE_EP1_CR0_IND + ri), USBFS_EP[epNumber].epMode);
1077:.\Generated_Source\PSoC5/USBFS.c ****             }
1078:.\Generated_Source\PSoC5/USBFS.c ****         #endif /*  USBFS_EP_MM == USBFS__EP_DMAMANUAL */
1079:.\Generated_Source\PSoC5/USBFS.c **** 
1080:.\Generated_Source\PSoC5/USBFS.c ****         #if(USBFS_EP_MM == USBFS__EP_DMAAUTO)
1081:.\Generated_Source\PSoC5/USBFS.c ****             if (pData != NULL)
1082:.\Generated_Source\PSoC5/USBFS.c ****             {
1083:.\Generated_Source\PSoC5/USBFS.c ****                 /* Enable DMA in mode3 for transferring data */
1084:.\Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaChDisable(USBFS_DmaChan[epNumber]);
1085:.\Generated_Source\PSoC5/USBFS.c ****             #if (USBFS_EP_DMA_AUTO_OPT == 0u)
1086:.\Generated_Source\PSoC5/USBFS.c ****                 USBFS_inLength[epNumber] = length;
1087:.\Generated_Source\PSoC5/USBFS.c ****                 USBFS_inDataPointer[epNumber] = pData;
1088:.\Generated_Source\PSoC5/USBFS.c ****                 /* Configure DMA to send the data only for the first burst */
1089:.\Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaTdSetConfiguration(USBFS_DmaTd[epNumber],
1090:.\Generated_Source\PSoC5/USBFS.c ****                     (length > USBFS_DMA_BYTES_PER_BURST) ? USBFS_DMA_BYTES_PER_BURST : length,
1091:.\Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR);
1092:.\Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaTdSetAddress(USBFS_DmaTd[epNumber],  LO16((uint32)pData), LO16((uint32)
1093:.\Generated_Source\PSoC5/USBFS.c ****                 /* The second TD will be executed only when the first one fails.
1094:.\Generated_Source\PSoC5/USBFS.c ****                 *  The intention of this TD is to generate NRQ interrupt
1095:.\Generated_Source\PSoC5/USBFS.c ****                 *  and repeat 2 last bytes of the first burst.
1096:.\Generated_Source\PSoC5/USBFS.c ****                 */
1097:.\Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaTdSetConfiguration(USBFS_DmaNextTd[epNumber], 1u,
1098:.\Generated_Source\PSoC5/USBFS.c ****                                                USBFS_DmaNextTd[epNumber],
1099:.\Generated_Source\PSoC5/USBFS.c ****                                                USBFS_epX_TD_TERMOUT_EN[epNumber]);
1100:.\Generated_Source\PSoC5/USBFS.c ****                 /* Configure DmaNextTd to clear Data ready status */
1101:.\Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaTdSetAddress(USBFS_DmaNextTd[epNumber],  LO16((uint32)&clearInDataRdySt
1102:.\Generated_Source\PSoC5/USBFS.c ****                                                                 LO16((uint32)(USBFS_ARB_EP1_CFG_IND
1103:.\Generated_Source\PSoC5/USBFS.c ****             #else /* Configure DMA to send all data*/
1104:.\Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaTdSetConfiguration(USBFS_DmaTd[epNumber], length,
1105:.\Generated_Source\PSoC5/USBFS.c ****                                                USBFS_DmaTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR
1106:.\Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaTdSetAddress(USBFS_DmaTd[epNumber],  LO16((uint32)pData), LO16((uint32)
1107:.\Generated_Source\PSoC5/USBFS.c ****             #endif /* USBFS_EP_DMA_AUTO_OPT == 0u */    
1108:.\Generated_Source\PSoC5/USBFS.c **** 
1109:.\Generated_Source\PSoC5/USBFS.c ****                 /* Clear Any potential pending DMA requests before starting the DMA channel to tran
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 41


1110:.\Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaClearPendingDrq(USBFS_DmaChan[epNumber]);
1111:.\Generated_Source\PSoC5/USBFS.c ****                 /* Enable the DMA */
1112:.\Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaChSetInitialTd(USBFS_DmaChan[epNumber], USBFS_DmaTd[epNumber]);
1113:.\Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaChEnable(USBFS_DmaChan[epNumber], 1u);
1114:.\Generated_Source\PSoC5/USBFS.c ****             }
1115:.\Generated_Source\PSoC5/USBFS.c ****             else
1116:.\Generated_Source\PSoC5/USBFS.c ****             {
1117:.\Generated_Source\PSoC5/USBFS.c ****                 USBFS_EP[epNumber].apiEpState = USBFS_NO_EVENT_PENDING;
1118:.\Generated_Source\PSoC5/USBFS.c ****                 if(length > 0u)
1119:.\Generated_Source\PSoC5/USBFS.c ****                 {
1120:.\Generated_Source\PSoC5/USBFS.c ****                 #if (USBFS_EP_DMA_AUTO_OPT == 0u)
1121:.\Generated_Source\PSoC5/USBFS.c ****                     USBFS_inLength[epNumber] = length;
1122:.\Generated_Source\PSoC5/USBFS.c ****                     USBFS_inBufFull[epNumber] = 0u;
1123:.\Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaChDisable(USBFS_DmaChan[epNumber]);
1124:.\Generated_Source\PSoC5/USBFS.c ****                     /* Configure DMA to send the data only for the first burst */
1125:.\Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaTdSetConfiguration(
1126:.\Generated_Source\PSoC5/USBFS.c ****                         USBFS_DmaTd[epNumber], (length > USBFS_DMA_BYTES_PER_BURST) ?
1127:.\Generated_Source\PSoC5/USBFS.c ****                         USBFS_DMA_BYTES_PER_BURST : length,
1128:.\Generated_Source\PSoC5/USBFS.c ****                         USBFS_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR );
1129:.\Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaTdSetAddress(USBFS_DmaTd[epNumber],
1130:.\Generated_Source\PSoC5/USBFS.c ****                                              LO16((uint32)USBFS_inDataPointer[epNumber]), LO16((uin
1131:.\Generated_Source\PSoC5/USBFS.c ****                     /* Clear Any potential pending DMA requests before starting the DMA channel to 
1132:.\Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaClearPendingDrq(USBFS_DmaChan[epNumber]);
1133:.\Generated_Source\PSoC5/USBFS.c ****                     /* Enable the DMA */
1134:.\Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaChSetInitialTd(USBFS_DmaChan[epNumber], USBFS_DmaTd[epNumber]);
1135:.\Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaChEnable(USBFS_DmaChan[epNumber], 1u);
1136:.\Generated_Source\PSoC5/USBFS.c ****                 #endif /* (USBFS_EP_DMA_AUTO_OPT == 0u) */
1137:.\Generated_Source\PSoC5/USBFS.c **** 
1138:.\Generated_Source\PSoC5/USBFS.c ****                     /* Set Data ready status, This will generate DMA request */
1139:.\Generated_Source\PSoC5/USBFS.c ****                     #ifndef USBFS_MANUAL_IN_EP_ARM
1140:.\Generated_Source\PSoC5/USBFS.c ****                         * (reg8 *)(USBFS_ARB_EP1_CFG_IND + ri) |= USBFS_ARB_EPX_CFG_IN_DATA_RDY;
1141:.\Generated_Source\PSoC5/USBFS.c ****                     #endif  /* USBFS_MANUAL_IN_EP_ARM */
1142:.\Generated_Source\PSoC5/USBFS.c ****                     /* Mode register will be written in arb ISR(In Buffer Full) after first DMA tra
1143:.\Generated_Source\PSoC5/USBFS.c ****                 }
1144:.\Generated_Source\PSoC5/USBFS.c ****                 else
1145:.\Generated_Source\PSoC5/USBFS.c ****                 {
1146:.\Generated_Source\PSoC5/USBFS.c ****                     /* When zero-length packet - write the Mode register directly */
1147:.\Generated_Source\PSoC5/USBFS.c ****                     CY_SET_REG8((reg8 *)(USBFS_SIE_EP1_CR0_IND + ri), USBFS_EP[epNumber].epMode);
1148:.\Generated_Source\PSoC5/USBFS.c ****                 }
1149:.\Generated_Source\PSoC5/USBFS.c ****             }
1150:.\Generated_Source\PSoC5/USBFS.c ****         #endif /*  USBFS_EP_MM == USBFS__EP_DMAAUTO */
1151:.\Generated_Source\PSoC5/USBFS.c ****     }
1152:.\Generated_Source\PSoC5/USBFS.c **** }
 1170              		.loc 1 1152 0
 1171 0144 07F11007 		add	r7, r7, #16
 1172 0148 BD46     		mov	sp, r7
 1173 014a 90BC     		pop	{r4, r7}
 1174 014c 7047     		bx	lr
 1175              		.cfi_endproc
 1176              	.LFE11:
 1177              		.size	USBFS_LoadInEP, .-USBFS_LoadInEP
 1178 014e 00BF     		.section	.text.USBFS_ReadOutEP,"ax",%progbits
 1179              		.align	2
 1180              		.global	USBFS_ReadOutEP
 1181              		.thumb
 1182              		.thumb_func
 1183              		.type	USBFS_ReadOutEP, %function
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 42


 1184              	USBFS_ReadOutEP:
 1185              	.LFB12:
1153:.\Generated_Source\PSoC5/USBFS.c **** 
1154:.\Generated_Source\PSoC5/USBFS.c **** 
1155:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
1156:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_ReadOutEP
1157:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
1158:.\Generated_Source\PSoC5/USBFS.c **** *
1159:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
1160:.\Generated_Source\PSoC5/USBFS.c **** *  Read data from an endpoint.  The application must call
1161:.\Generated_Source\PSoC5/USBFS.c **** *  USBFS_GetEPState to see if an event is pending.
1162:.\Generated_Source\PSoC5/USBFS.c **** *
1163:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
1164:.\Generated_Source\PSoC5/USBFS.c **** *  epNumber: Contains the data endpoint number.
1165:.\Generated_Source\PSoC5/USBFS.c **** *            Valid values are between 1 and 8.
1166:.\Generated_Source\PSoC5/USBFS.c **** *  pData: A pointer to a data array from which the data for the endpoint space
1167:.\Generated_Source\PSoC5/USBFS.c **** *         is loaded.
1168:.\Generated_Source\PSoC5/USBFS.c **** *  length: The number of bytes to transfer from the USB Out endpoint and loads
1169:.\Generated_Source\PSoC5/USBFS.c **** *          it into data array. Valid values are between 0 and 1023. The function
1170:.\Generated_Source\PSoC5/USBFS.c **** *          moves fewer than the requested number of bytes if the host sends
1171:.\Generated_Source\PSoC5/USBFS.c **** *          fewer bytes than requested.
1172:.\Generated_Source\PSoC5/USBFS.c **** *
1173:.\Generated_Source\PSoC5/USBFS.c **** * Returns:
1174:.\Generated_Source\PSoC5/USBFS.c **** *  Number of bytes received, 0 for an invalid endpoint.
1175:.\Generated_Source\PSoC5/USBFS.c **** *
1176:.\Generated_Source\PSoC5/USBFS.c **** * Reentrant:
1177:.\Generated_Source\PSoC5/USBFS.c **** *  No.
1178:.\Generated_Source\PSoC5/USBFS.c **** *
1179:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
1180:.\Generated_Source\PSoC5/USBFS.c **** uint16 USBFS_ReadOutEP(uint8 epNumber, uint8 pData[], uint16 length)
1181:.\Generated_Source\PSoC5/USBFS.c ****                                                                         
1182:.\Generated_Source\PSoC5/USBFS.c **** {
 1186              		.loc 1 1182 0
 1187              		.cfi_startproc
 1188              		@ args = 0, pretend = 0, frame = 24
 1189              		@ frame_needed = 1, uses_anonymous_args = 0
 1190 0000 80B5     		push	{r7, lr}
 1191              	.LCFI33:
 1192              		.cfi_def_cfa_offset 8
 1193              		.cfi_offset 7, -8
 1194              		.cfi_offset 14, -4
 1195 0002 86B0     		sub	sp, sp, #24
 1196              	.LCFI34:
 1197              		.cfi_def_cfa_offset 32
 1198 0004 00AF     		add	r7, sp, #0
 1199              	.LCFI35:
 1200              		.cfi_def_cfa_register 7
 1201 0006 3960     		str	r1, [r7, #0]
 1202 0008 1346     		mov	r3, r2
 1203 000a 0246     		mov	r2, r0
 1204 000c FA71     		strb	r2, [r7, #7]
 1205 000e BB80     		strh	r3, [r7, #4]	@ movhi
1183:.\Generated_Source\PSoC5/USBFS.c ****     uint8 ri;
1184:.\Generated_Source\PSoC5/USBFS.c ****     reg8 *p;
1185:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP_MM == USBFS__EP_MANUAL)
1186:.\Generated_Source\PSoC5/USBFS.c ****         uint16 i;
1187:.\Generated_Source\PSoC5/USBFS.c ****     #endif /*  USBFS_EP_MM == USBFS__EP_MANUAL */
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 43


1188:.\Generated_Source\PSoC5/USBFS.c ****     #if(USBFS_EP_MM != USBFS__EP_DMAAUTO)
1189:.\Generated_Source\PSoC5/USBFS.c ****         uint16 xferCount;
1190:.\Generated_Source\PSoC5/USBFS.c ****     #endif /*  USBFS_EP_MM != USBFS__EP_DMAAUTO */
1191:.\Generated_Source\PSoC5/USBFS.c **** 
1192:.\Generated_Source\PSoC5/USBFS.c ****     if((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP) && (pData != NULL))
 1206              		.loc 1 1192 0
 1207 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1208 0012 002B     		cmp	r3, #0
 1209 0014 37D0     		beq	.L33
 1210              		.loc 1 1192 0 is_stmt 0 discriminator 1
 1211 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1212 0018 082B     		cmp	r3, #8
 1213 001a 34D8     		bhi	.L33
 1214 001c 3B68     		ldr	r3, [r7, #0]
 1215 001e 002B     		cmp	r3, #0
 1216 0020 31D0     		beq	.L33
1193:.\Generated_Source\PSoC5/USBFS.c ****     {
1194:.\Generated_Source\PSoC5/USBFS.c ****         ri = ((epNumber - USBFS_EP1) << USBFS_EPX_CNTX_ADDR_SHIFT);
 1217              		.loc 1 1194 0 is_stmt 1
 1218 0022 FB79     		ldrb	r3, [r7, #7]
 1219 0024 03F1FF33 		add	r3, r3, #-1
 1220 0028 DBB2     		uxtb	r3, r3
 1221 002a 4FEA0313 		lsl	r3, r3, #4
 1222 002e 7B75     		strb	r3, [r7, #21]
1195:.\Generated_Source\PSoC5/USBFS.c ****         p = (reg8 *)(USBFS_ARB_RW1_DR_IND + ri);
 1223              		.loc 1 1195 0
 1224 0030 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 1225 0032 46F28803 		movw	r3, #24712
 1226 0036 C4F20003 		movt	r3, 16384
 1227 003a D318     		adds	r3, r2, r3
 1228 003c 3B61     		str	r3, [r7, #16]
1196:.\Generated_Source\PSoC5/USBFS.c **** 
1197:.\Generated_Source\PSoC5/USBFS.c ****         #if(USBFS_EP_MM != USBFS__EP_DMAAUTO)
1198:.\Generated_Source\PSoC5/USBFS.c ****             /* Determine which is smaller the requested data or the available data */
1199:.\Generated_Source\PSoC5/USBFS.c ****             xferCount = USBFS_GetEPCount(epNumber);
 1229              		.loc 1 1199 0
 1230 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1231 0040 1846     		mov	r0, r3
 1232 0042 FFF7FEFF 		bl	USBFS_GetEPCount
 1233 0046 0346     		mov	r3, r0
 1234 0048 FB81     		strh	r3, [r7, #14]	@ movhi
1200:.\Generated_Source\PSoC5/USBFS.c ****             if (length > xferCount)
 1235              		.loc 1 1200 0
 1236 004a BA88     		ldrh	r2, [r7, #4]
 1237 004c FB89     		ldrh	r3, [r7, #14]
 1238 004e 9A42     		cmp	r2, r3
 1239 0050 01D9     		bls	.L34
1201:.\Generated_Source\PSoC5/USBFS.c ****             {
1202:.\Generated_Source\PSoC5/USBFS.c ****                 length = xferCount;
 1240              		.loc 1 1202 0
 1241 0052 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1242 0054 BB80     		strh	r3, [r7, #4]	@ movhi
 1243              	.L34:
1203:.\Generated_Source\PSoC5/USBFS.c ****             }
1204:.\Generated_Source\PSoC5/USBFS.c ****         #endif /*  USBFS_EP_MM != USBFS__EP_DMAAUTO */
1205:.\Generated_Source\PSoC5/USBFS.c **** 
1206:.\Generated_Source\PSoC5/USBFS.c ****         #if(USBFS_EP_MM == USBFS__EP_MANUAL)
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 44


1207:.\Generated_Source\PSoC5/USBFS.c ****             /* Copy the data using the arbiter data register */
1208:.\Generated_Source\PSoC5/USBFS.c ****             for (i = 0u; i < length; i++)
 1244              		.loc 1 1208 0
 1245 0056 4FF00003 		mov	r3, #0
 1246 005a FB82     		strh	r3, [r7, #22]	@ movhi
 1247 005c 0AE0     		b	.L35
 1248              	.L36:
1209:.\Generated_Source\PSoC5/USBFS.c ****             {
1210:.\Generated_Source\PSoC5/USBFS.c ****                 pData[i] = CY_GET_REG8(p);
 1249              		.loc 1 1210 0 discriminator 2
 1250 005e FB8A     		ldrh	r3, [r7, #22]
 1251 0060 3A68     		ldr	r2, [r7, #0]
 1252 0062 D318     		adds	r3, r2, r3
 1253 0064 3A69     		ldr	r2, [r7, #16]
 1254 0066 1278     		ldrb	r2, [r2, #0]
 1255 0068 D2B2     		uxtb	r2, r2
 1256 006a 1A70     		strb	r2, [r3, #0]
1208:.\Generated_Source\PSoC5/USBFS.c ****             for (i = 0u; i < length; i++)
 1257              		.loc 1 1208 0 discriminator 2
 1258 006c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 1259 006e 03F10103 		add	r3, r3, #1
 1260 0072 FB82     		strh	r3, [r7, #22]	@ movhi
 1261              	.L35:
1208:.\Generated_Source\PSoC5/USBFS.c ****             for (i = 0u; i < length; i++)
 1262              		.loc 1 1208 0 is_stmt 0 discriminator 1
 1263 0074 FA8A     		ldrh	r2, [r7, #22]
 1264 0076 BB88     		ldrh	r3, [r7, #4]
 1265 0078 9A42     		cmp	r2, r3
 1266 007a F0D3     		bcc	.L36
1211:.\Generated_Source\PSoC5/USBFS.c ****             }
1212:.\Generated_Source\PSoC5/USBFS.c **** 
1213:.\Generated_Source\PSoC5/USBFS.c ****             /* (re)arming of OUT endpoint */
1214:.\Generated_Source\PSoC5/USBFS.c ****             USBFS_EnableOutEP(epNumber);
 1267              		.loc 1 1214 0 is_stmt 1
 1268 007c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1269 007e 1846     		mov	r0, r3
 1270 0080 FFF7FEFF 		bl	USBFS_EnableOutEP
 1271 0084 02E0     		b	.L37
 1272              	.L33:
1215:.\Generated_Source\PSoC5/USBFS.c ****         #else
1216:.\Generated_Source\PSoC5/USBFS.c ****             /*Init DMA if it was not initialized */
1217:.\Generated_Source\PSoC5/USBFS.c ****             if(USBFS_DmaTd[epNumber] == DMA_INVALID_TD)
1218:.\Generated_Source\PSoC5/USBFS.c ****             {
1219:.\Generated_Source\PSoC5/USBFS.c ****                 USBFS_InitEP_DMA(epNumber, pData);
1220:.\Generated_Source\PSoC5/USBFS.c ****             }
1221:.\Generated_Source\PSoC5/USBFS.c **** 
1222:.\Generated_Source\PSoC5/USBFS.c ****         #endif /*  USBFS_EP_MM == USBFS__EP_MANUAL */
1223:.\Generated_Source\PSoC5/USBFS.c **** 
1224:.\Generated_Source\PSoC5/USBFS.c ****         #if(USBFS_EP_MM == USBFS__EP_DMAMANUAL)
1225:.\Generated_Source\PSoC5/USBFS.c ****             /* Enable DMA in mode2 for transferring data */
1226:.\Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaChDisable(USBFS_DmaChan[epNumber]);
1227:.\Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaTdSetConfiguration(USBFS_DmaTd[epNumber], length, CY_DMA_DISABLE_TD,
1228:.\Generated_Source\PSoC5/USBFS.c ****                                                                                 TD_TERMIN_EN | TD_I
1229:.\Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaTdSetAddress(USBFS_DmaTd[epNumber],  LO16((uint32)p), LO16((uint32)pData));
1230:.\Generated_Source\PSoC5/USBFS.c ****             /* Enable the DMA */
1231:.\Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaChSetInitialTd(USBFS_DmaChan[epNumber], USBFS_DmaTd[epNumber]);
1232:.\Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaChEnable(USBFS_DmaChan[epNumber], 1u);
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 45


1233:.\Generated_Source\PSoC5/USBFS.c **** 
1234:.\Generated_Source\PSoC5/USBFS.c ****             /* Generate DMA request */
1235:.\Generated_Source\PSoC5/USBFS.c ****             * (reg8 *)(USBFS_ARB_EP1_CFG_IND + ri) |= USBFS_ARB_EPX_CFG_DMA_REQ;
1236:.\Generated_Source\PSoC5/USBFS.c ****             * (reg8 *)(USBFS_ARB_EP1_CFG_IND + ri) &= ((uint8)(~USBFS_ARB_EPX_CFG_DMA_REQ));
1237:.\Generated_Source\PSoC5/USBFS.c ****             /* Out EP will be (re)armed in arb ISR after transfer complete */
1238:.\Generated_Source\PSoC5/USBFS.c ****         #endif /*  USBFS_EP_MM == USBFS__EP_DMAMANUAL */
1239:.\Generated_Source\PSoC5/USBFS.c **** 
1240:.\Generated_Source\PSoC5/USBFS.c ****         #if(USBFS_EP_MM == USBFS__EP_DMAAUTO)
1241:.\Generated_Source\PSoC5/USBFS.c ****             /* Enable DMA in mode3 for transferring data */
1242:.\Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaChDisable(USBFS_DmaChan[epNumber]);
1243:.\Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaTdSetConfiguration(USBFS_DmaTd[epNumber], length, USBFS_DmaTd[epNumber],
1244:.\Generated_Source\PSoC5/USBFS.c ****                                                                                 TD_TERMIN_EN | TD_I
1245:.\Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaTdSetAddress(USBFS_DmaTd[epNumber],  LO16((uint32)p), LO16((uint32)pData));
1246:.\Generated_Source\PSoC5/USBFS.c **** 
1247:.\Generated_Source\PSoC5/USBFS.c ****             /* Clear Any potential pending DMA requests before starting the DMA channel to transfer
1248:.\Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaClearPendingDrq(USBFS_DmaChan[epNumber]);
1249:.\Generated_Source\PSoC5/USBFS.c ****             /* Enable the DMA */
1250:.\Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaChSetInitialTd(USBFS_DmaChan[epNumber], USBFS_DmaTd[epNumber]);
1251:.\Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaChEnable(USBFS_DmaChan[epNumber], 1u);
1252:.\Generated_Source\PSoC5/USBFS.c ****             /* Out EP will be (re)armed in arb ISR after transfer complete */
1253:.\Generated_Source\PSoC5/USBFS.c ****         #endif /*  USBFS_EP_MM == USBFS__EP_DMAAUTO */
1254:.\Generated_Source\PSoC5/USBFS.c **** 
1255:.\Generated_Source\PSoC5/USBFS.c ****     }
1256:.\Generated_Source\PSoC5/USBFS.c ****     else
1257:.\Generated_Source\PSoC5/USBFS.c ****     {
1258:.\Generated_Source\PSoC5/USBFS.c ****         length = 0u;
 1273              		.loc 1 1258 0
 1274 0086 4FF00003 		mov	r3, #0
 1275 008a BB80     		strh	r3, [r7, #4]	@ movhi
 1276              	.L37:
1259:.\Generated_Source\PSoC5/USBFS.c ****     }
1260:.\Generated_Source\PSoC5/USBFS.c **** 
1261:.\Generated_Source\PSoC5/USBFS.c ****     return(length);
 1277              		.loc 1 1261 0
 1278 008c BB88     		ldrh	r3, [r7, #4]
1262:.\Generated_Source\PSoC5/USBFS.c **** }
 1279              		.loc 1 1262 0
 1280 008e 1846     		mov	r0, r3
 1281 0090 07F11807 		add	r7, r7, #24
 1282 0094 BD46     		mov	sp, r7
 1283 0096 80BD     		pop	{r7, pc}
 1284              		.cfi_endproc
 1285              	.LFE12:
 1286              		.size	USBFS_ReadOutEP, .-USBFS_ReadOutEP
 1287              		.section	.text.USBFS_EnableOutEP,"ax",%progbits
 1288              		.align	2
 1289              		.global	USBFS_EnableOutEP
 1290              		.thumb
 1291              		.thumb_func
 1292              		.type	USBFS_EnableOutEP, %function
 1293              	USBFS_EnableOutEP:
 1294              	.LFB13:
1263:.\Generated_Source\PSoC5/USBFS.c **** 
1264:.\Generated_Source\PSoC5/USBFS.c **** 
1265:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
1266:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_EnableOutEP
1267:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 46


1268:.\Generated_Source\PSoC5/USBFS.c **** *
1269:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
1270:.\Generated_Source\PSoC5/USBFS.c **** *  This function enables an OUT endpoint.  It should not be
1271:.\Generated_Source\PSoC5/USBFS.c **** *  called for an IN endpoint.
1272:.\Generated_Source\PSoC5/USBFS.c **** *
1273:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
1274:.\Generated_Source\PSoC5/USBFS.c **** *  epNumber: Endpoint Number
1275:.\Generated_Source\PSoC5/USBFS.c **** *            Valid values are between 1 and 8.
1276:.\Generated_Source\PSoC5/USBFS.c **** *
1277:.\Generated_Source\PSoC5/USBFS.c **** * Return:
1278:.\Generated_Source\PSoC5/USBFS.c **** *   None.
1279:.\Generated_Source\PSoC5/USBFS.c **** *
1280:.\Generated_Source\PSoC5/USBFS.c **** * Global variables:
1281:.\Generated_Source\PSoC5/USBFS.c **** *  USBFS_EP[epNumber].apiEpState - set to NO_EVENT_PENDING
1282:.\Generated_Source\PSoC5/USBFS.c **** *
1283:.\Generated_Source\PSoC5/USBFS.c **** * Reentrant:
1284:.\Generated_Source\PSoC5/USBFS.c **** *  No.
1285:.\Generated_Source\PSoC5/USBFS.c **** *
1286:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
1287:.\Generated_Source\PSoC5/USBFS.c **** void USBFS_EnableOutEP(uint8 epNumber) 
1288:.\Generated_Source\PSoC5/USBFS.c **** {
 1295              		.loc 1 1288 0
 1296              		.cfi_startproc
 1297              		@ args = 0, pretend = 0, frame = 16
 1298              		@ frame_needed = 1, uses_anonymous_args = 0
 1299              		@ link register save eliminated.
 1300 0000 80B4     		push	{r7}
 1301              	.LCFI36:
 1302              		.cfi_def_cfa_offset 4
 1303              		.cfi_offset 7, -4
 1304 0002 85B0     		sub	sp, sp, #20
 1305              	.LCFI37:
 1306              		.cfi_def_cfa_offset 24
 1307 0004 00AF     		add	r7, sp, #0
 1308              	.LCFI38:
 1309              		.cfi_def_cfa_register 7
 1310 0006 0346     		mov	r3, r0
 1311 0008 FB71     		strb	r3, [r7, #7]
1289:.\Generated_Source\PSoC5/USBFS.c ****     uint8 ri;
1290:.\Generated_Source\PSoC5/USBFS.c **** 
1291:.\Generated_Source\PSoC5/USBFS.c ****     if((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 1312              		.loc 1 1291 0
 1313 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1314 000c 002B     		cmp	r3, #0
 1315 000e 2ED0     		beq	.L39
 1316              		.loc 1 1291 0 is_stmt 0 discriminator 1
 1317 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1318 0012 082B     		cmp	r3, #8
 1319 0014 2BD8     		bhi	.L39
1292:.\Generated_Source\PSoC5/USBFS.c ****     {
1293:.\Generated_Source\PSoC5/USBFS.c ****         ri = ((epNumber - USBFS_EP1) << USBFS_EPX_CNTX_ADDR_SHIFT);
 1320              		.loc 1 1293 0 is_stmt 1
 1321 0016 FB79     		ldrb	r3, [r7, #7]
 1322 0018 03F1FF33 		add	r3, r3, #-1
 1323 001c DBB2     		uxtb	r3, r3
 1324 001e 4FEA0313 		lsl	r3, r3, #4
 1325 0022 FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 47


1294:.\Generated_Source\PSoC5/USBFS.c ****         USBFS_EP[epNumber].apiEpState = USBFS_NO_EVENT_PENDING;
 1326              		.loc 1 1294 0
 1327 0024 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1328 0026 40F20002 		movw	r2, #:lower16:USBFS_EP
 1329 002a C0F20002 		movt	r2, #:upper16:USBFS_EP
 1330 002e 0B46     		mov	r3, r1
 1331 0030 4FEA4303 		lsl	r3, r3, #1
 1332 0034 5B18     		adds	r3, r3, r1
 1333 0036 4FEA8303 		lsl	r3, r3, #2
 1334 003a D318     		adds	r3, r2, r3
 1335 003c 4FF00002 		mov	r2, #0
 1336 0040 5A70     		strb	r2, [r3, #1]
1295:.\Generated_Source\PSoC5/USBFS.c ****         /* Write the Mode register */
1296:.\Generated_Source\PSoC5/USBFS.c ****         CY_SET_REG8((reg8 *)(USBFS_SIE_EP1_CR0_IND + ri), USBFS_EP[epNumber].epMode);
 1337              		.loc 1 1296 0
 1338 0042 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1339 0044 46F20E03 		movw	r3, #24590
 1340 0048 C4F20003 		movt	r3, 16384
 1341 004c D318     		adds	r3, r2, r3
 1342 004e 1846     		mov	r0, r3
 1343 0050 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1344 0052 40F20002 		movw	r2, #:lower16:USBFS_EP
 1345 0056 C0F20002 		movt	r2, #:upper16:USBFS_EP
 1346 005a 0B46     		mov	r3, r1
 1347 005c 4FEA4303 		lsl	r3, r3, #1
 1348 0060 5B18     		adds	r3, r3, r1
 1349 0062 4FEA8303 		lsl	r3, r3, #2
 1350 0066 D318     		adds	r3, r2, r3
 1351 0068 5B79     		ldrb	r3, [r3, #5]
 1352 006a DBB2     		uxtb	r3, r3
 1353 006c 0370     		strb	r3, [r0, #0]
 1354              	.L39:
1297:.\Generated_Source\PSoC5/USBFS.c ****     }
1298:.\Generated_Source\PSoC5/USBFS.c **** }
 1355              		.loc 1 1298 0
 1356 006e 07F11407 		add	r7, r7, #20
 1357 0072 BD46     		mov	sp, r7
 1358 0074 80BC     		pop	{r7}
 1359 0076 7047     		bx	lr
 1360              		.cfi_endproc
 1361              	.LFE13:
 1362              		.size	USBFS_EnableOutEP, .-USBFS_EnableOutEP
 1363              		.section	.text.USBFS_DisableOutEP,"ax",%progbits
 1364              		.align	2
 1365              		.global	USBFS_DisableOutEP
 1366              		.thumb
 1367              		.thumb_func
 1368              		.type	USBFS_DisableOutEP, %function
 1369              	USBFS_DisableOutEP:
 1370              	.LFB14:
1299:.\Generated_Source\PSoC5/USBFS.c **** 
1300:.\Generated_Source\PSoC5/USBFS.c **** 
1301:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
1302:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_DisableOutEP
1303:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
1304:.\Generated_Source\PSoC5/USBFS.c **** *
1305:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 48


1306:.\Generated_Source\PSoC5/USBFS.c **** *  This function disables an OUT endpoint.  It should not be
1307:.\Generated_Source\PSoC5/USBFS.c **** *  called for an IN endpoint.
1308:.\Generated_Source\PSoC5/USBFS.c **** *
1309:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
1310:.\Generated_Source\PSoC5/USBFS.c **** *  epNumber: Endpoint Number
1311:.\Generated_Source\PSoC5/USBFS.c **** *            Valid values are between 1 and 8.
1312:.\Generated_Source\PSoC5/USBFS.c **** *
1313:.\Generated_Source\PSoC5/USBFS.c **** * Return:
1314:.\Generated_Source\PSoC5/USBFS.c **** *  None.
1315:.\Generated_Source\PSoC5/USBFS.c **** *
1316:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
1317:.\Generated_Source\PSoC5/USBFS.c **** void USBFS_DisableOutEP(uint8 epNumber) 
1318:.\Generated_Source\PSoC5/USBFS.c **** {
 1371              		.loc 1 1318 0
 1372              		.cfi_startproc
 1373              		@ args = 0, pretend = 0, frame = 16
 1374              		@ frame_needed = 1, uses_anonymous_args = 0
 1375              		@ link register save eliminated.
 1376 0000 80B4     		push	{r7}
 1377              	.LCFI39:
 1378              		.cfi_def_cfa_offset 4
 1379              		.cfi_offset 7, -4
 1380 0002 85B0     		sub	sp, sp, #20
 1381              	.LCFI40:
 1382              		.cfi_def_cfa_offset 24
 1383 0004 00AF     		add	r7, sp, #0
 1384              	.LCFI41:
 1385              		.cfi_def_cfa_register 7
 1386 0006 0346     		mov	r3, r0
 1387 0008 FB71     		strb	r3, [r7, #7]
1319:.\Generated_Source\PSoC5/USBFS.c ****     uint8 ri ;
1320:.\Generated_Source\PSoC5/USBFS.c **** 
1321:.\Generated_Source\PSoC5/USBFS.c ****     if((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 1388              		.loc 1 1321 0
 1389 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1390 000c 002B     		cmp	r3, #0
 1391 000e 12D0     		beq	.L41
 1392              		.loc 1 1321 0 is_stmt 0 discriminator 1
 1393 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1394 0012 082B     		cmp	r3, #8
 1395 0014 0FD8     		bhi	.L41
1322:.\Generated_Source\PSoC5/USBFS.c ****     {
1323:.\Generated_Source\PSoC5/USBFS.c ****         ri = ((epNumber - USBFS_EP1) << USBFS_EPX_CNTX_ADDR_SHIFT);
 1396              		.loc 1 1323 0 is_stmt 1
 1397 0016 FB79     		ldrb	r3, [r7, #7]
 1398 0018 03F1FF33 		add	r3, r3, #-1
 1399 001c DBB2     		uxtb	r3, r3
 1400 001e 4FEA0313 		lsl	r3, r3, #4
 1401 0022 FB73     		strb	r3, [r7, #15]
1324:.\Generated_Source\PSoC5/USBFS.c ****         /* Write the Mode register */
1325:.\Generated_Source\PSoC5/USBFS.c ****         CY_SET_REG8((reg8 *)(USBFS_SIE_EP1_CR0_IND + ri), USBFS_MODE_NAK_OUT);
 1402              		.loc 1 1325 0
 1403 0024 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1404 0026 46F20E03 		movw	r3, #24590
 1405 002a C4F20003 		movt	r3, 16384
 1406 002e D318     		adds	r3, r2, r3
 1407 0030 4FF00802 		mov	r2, #8
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 49


 1408 0034 1A70     		strb	r2, [r3, #0]
 1409              	.L41:
1326:.\Generated_Source\PSoC5/USBFS.c ****     }
1327:.\Generated_Source\PSoC5/USBFS.c **** }
 1410              		.loc 1 1327 0
 1411 0036 07F11407 		add	r7, r7, #20
 1412 003a BD46     		mov	sp, r7
 1413 003c 80BC     		pop	{r7}
 1414 003e 7047     		bx	lr
 1415              		.cfi_endproc
 1416              	.LFE14:
 1417              		.size	USBFS_DisableOutEP, .-USBFS_DisableOutEP
 1418              		.section	.text.USBFS_Force,"ax",%progbits
 1419              		.align	2
 1420              		.global	USBFS_Force
 1421              		.thumb
 1422              		.thumb_func
 1423              		.type	USBFS_Force, %function
 1424              	USBFS_Force:
 1425              	.LFB15:
1328:.\Generated_Source\PSoC5/USBFS.c **** 
1329:.\Generated_Source\PSoC5/USBFS.c **** 
1330:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
1331:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_Force
1332:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
1333:.\Generated_Source\PSoC5/USBFS.c **** *
1334:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
1335:.\Generated_Source\PSoC5/USBFS.c **** *  Forces the bus state
1336:.\Generated_Source\PSoC5/USBFS.c **** *
1337:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
1338:.\Generated_Source\PSoC5/USBFS.c **** *  bState
1339:.\Generated_Source\PSoC5/USBFS.c **** *    USBFS_FORCE_J
1340:.\Generated_Source\PSoC5/USBFS.c **** *    USBFS_FORCE_K
1341:.\Generated_Source\PSoC5/USBFS.c **** *    USBFS_FORCE_SE0
1342:.\Generated_Source\PSoC5/USBFS.c **** *    USBFS_FORCE_NONE
1343:.\Generated_Source\PSoC5/USBFS.c **** *
1344:.\Generated_Source\PSoC5/USBFS.c **** * Return:
1345:.\Generated_Source\PSoC5/USBFS.c **** *  None.
1346:.\Generated_Source\PSoC5/USBFS.c **** *
1347:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
1348:.\Generated_Source\PSoC5/USBFS.c **** void USBFS_Force(uint8 bState) 
1349:.\Generated_Source\PSoC5/USBFS.c **** {
 1426              		.loc 1 1349 0
 1427              		.cfi_startproc
 1428              		@ args = 0, pretend = 0, frame = 8
 1429              		@ frame_needed = 1, uses_anonymous_args = 0
 1430              		@ link register save eliminated.
 1431 0000 80B4     		push	{r7}
 1432              	.LCFI42:
 1433              		.cfi_def_cfa_offset 4
 1434              		.cfi_offset 7, -4
 1435 0002 83B0     		sub	sp, sp, #12
 1436              	.LCFI43:
 1437              		.cfi_def_cfa_offset 16
 1438 0004 00AF     		add	r7, sp, #0
 1439              	.LCFI44:
 1440              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 50


 1441 0006 0346     		mov	r3, r0
 1442 0008 FB71     		strb	r3, [r7, #7]
1350:.\Generated_Source\PSoC5/USBFS.c ****     CY_SET_REG8(USBFS_USBIO_CR0_PTR, bState);
 1443              		.loc 1 1350 0
 1444 000a 46F21003 		movw	r3, #24592
 1445 000e C4F20003 		movt	r3, 16384
 1446 0012 FA79     		ldrb	r2, [r7, #7]
 1447 0014 1A70     		strb	r2, [r3, #0]
1351:.\Generated_Source\PSoC5/USBFS.c **** }
 1448              		.loc 1 1351 0
 1449 0016 07F10C07 		add	r7, r7, #12
 1450 001a BD46     		mov	sp, r7
 1451 001c 80BC     		pop	{r7}
 1452 001e 7047     		bx	lr
 1453              		.cfi_endproc
 1454              	.LFE15:
 1455              		.size	USBFS_Force, .-USBFS_Force
 1456              		.section	.text.USBFS_GetEPAckState,"ax",%progbits
 1457              		.align	2
 1458              		.global	USBFS_GetEPAckState
 1459              		.thumb
 1460              		.thumb_func
 1461              		.type	USBFS_GetEPAckState, %function
 1462              	USBFS_GetEPAckState:
 1463              	.LFB16:
1352:.\Generated_Source\PSoC5/USBFS.c **** 
1353:.\Generated_Source\PSoC5/USBFS.c **** 
1354:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
1355:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_GetEPAckState
1356:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
1357:.\Generated_Source\PSoC5/USBFS.c **** *
1358:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
1359:.\Generated_Source\PSoC5/USBFS.c **** *  Returns the ACK of the CR0 Register (ACKD)
1360:.\Generated_Source\PSoC5/USBFS.c **** *
1361:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
1362:.\Generated_Source\PSoC5/USBFS.c **** *  epNumber: Endpoint Number
1363:.\Generated_Source\PSoC5/USBFS.c **** *            Valid values are between 1 and 8.
1364:.\Generated_Source\PSoC5/USBFS.c **** *
1365:.\Generated_Source\PSoC5/USBFS.c **** * Returns
1366:.\Generated_Source\PSoC5/USBFS.c **** *  0 if nothing has been ACKD, non-=zero something has been ACKD
1367:.\Generated_Source\PSoC5/USBFS.c **** *
1368:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
1369:.\Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_GetEPAckState(uint8 epNumber) 
1370:.\Generated_Source\PSoC5/USBFS.c **** {
 1464              		.loc 1 1370 0
 1465              		.cfi_startproc
 1466              		@ args = 0, pretend = 0, frame = 16
 1467              		@ frame_needed = 1, uses_anonymous_args = 0
 1468              		@ link register save eliminated.
 1469 0000 80B4     		push	{r7}
 1470              	.LCFI45:
 1471              		.cfi_def_cfa_offset 4
 1472              		.cfi_offset 7, -4
 1473 0002 85B0     		sub	sp, sp, #20
 1474              	.LCFI46:
 1475              		.cfi_def_cfa_offset 24
 1476 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 51


 1477              	.LCFI47:
 1478              		.cfi_def_cfa_register 7
 1479 0006 0346     		mov	r3, r0
 1480 0008 FB71     		strb	r3, [r7, #7]
1371:.\Generated_Source\PSoC5/USBFS.c ****     uint8 ri;
1372:.\Generated_Source\PSoC5/USBFS.c ****     uint8 cr = 0u;
 1481              		.loc 1 1372 0
 1482 000a 4FF00003 		mov	r3, #0
 1483 000e FB73     		strb	r3, [r7, #15]
1373:.\Generated_Source\PSoC5/USBFS.c **** 
1374:.\Generated_Source\PSoC5/USBFS.c ****     if((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 1484              		.loc 1 1374 0
 1485 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1486 0012 002B     		cmp	r3, #0
 1487 0014 14D0     		beq	.L45
 1488              		.loc 1 1374 0 is_stmt 0 discriminator 1
 1489 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1490 0018 082B     		cmp	r3, #8
 1491 001a 11D8     		bhi	.L45
1375:.\Generated_Source\PSoC5/USBFS.c ****     {
1376:.\Generated_Source\PSoC5/USBFS.c ****         ri = ((epNumber - USBFS_EP1) << USBFS_EPX_CNTX_ADDR_SHIFT);
 1492              		.loc 1 1376 0 is_stmt 1
 1493 001c FB79     		ldrb	r3, [r7, #7]
 1494 001e 03F1FF33 		add	r3, r3, #-1
 1495 0022 DBB2     		uxtb	r3, r3
 1496 0024 4FEA0313 		lsl	r3, r3, #4
 1497 0028 BB73     		strb	r3, [r7, #14]
1377:.\Generated_Source\PSoC5/USBFS.c ****         cr = CY_GET_REG8((reg8 *)(USBFS_SIE_EP1_CR0_IND + ri)) & USBFS_MODE_ACKD;
 1498              		.loc 1 1377 0
 1499 002a BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 1500 002c 46F20E03 		movw	r3, #24590
 1501 0030 C4F20003 		movt	r3, 16384
 1502 0034 D318     		adds	r3, r2, r3
 1503 0036 1B78     		ldrb	r3, [r3, #0]
 1504 0038 DBB2     		uxtb	r3, r3
 1505 003a 03F01003 		and	r3, r3, #16
 1506 003e FB73     		strb	r3, [r7, #15]
 1507              	.L45:
1378:.\Generated_Source\PSoC5/USBFS.c ****     }
1379:.\Generated_Source\PSoC5/USBFS.c **** 
1380:.\Generated_Source\PSoC5/USBFS.c ****     return(cr);
 1508              		.loc 1 1380 0
 1509 0040 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1381:.\Generated_Source\PSoC5/USBFS.c **** }
 1510              		.loc 1 1381 0
 1511 0042 1846     		mov	r0, r3
 1512 0044 07F11407 		add	r7, r7, #20
 1513 0048 BD46     		mov	sp, r7
 1514 004a 80BC     		pop	{r7}
 1515 004c 7047     		bx	lr
 1516              		.cfi_endproc
 1517              	.LFE16:
 1518              		.size	USBFS_GetEPAckState, .-USBFS_GetEPAckState
 1519 004e 00BF     		.section	.text.USBFS_SetPowerStatus,"ax",%progbits
 1520              		.align	2
 1521              		.global	USBFS_SetPowerStatus
 1522              		.thumb
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 52


 1523              		.thumb_func
 1524              		.type	USBFS_SetPowerStatus, %function
 1525              	USBFS_SetPowerStatus:
 1526              	.LFB17:
1382:.\Generated_Source\PSoC5/USBFS.c **** 
1383:.\Generated_Source\PSoC5/USBFS.c **** 
1384:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
1385:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_SetPowerStatus
1386:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
1387:.\Generated_Source\PSoC5/USBFS.c **** *
1388:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
1389:.\Generated_Source\PSoC5/USBFS.c **** *  Sets the device power status for reporting in the Get Device Status
1390:.\Generated_Source\PSoC5/USBFS.c **** *  request
1391:.\Generated_Source\PSoC5/USBFS.c **** *
1392:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
1393:.\Generated_Source\PSoC5/USBFS.c **** *  powerStatus: USBFS_DEVICE_STATUS_BUS_POWERED(0) - Bus Powered,
1394:.\Generated_Source\PSoC5/USBFS.c **** *               USBFS_DEVICE_STATUS_SELF_POWERED(1) - Self Powered
1395:.\Generated_Source\PSoC5/USBFS.c **** *
1396:.\Generated_Source\PSoC5/USBFS.c **** * Return:
1397:.\Generated_Source\PSoC5/USBFS.c **** *   None.
1398:.\Generated_Source\PSoC5/USBFS.c **** *
1399:.\Generated_Source\PSoC5/USBFS.c **** * Global variables:
1400:.\Generated_Source\PSoC5/USBFS.c **** *  USBFS_deviceStatus - set power status
1401:.\Generated_Source\PSoC5/USBFS.c **** *
1402:.\Generated_Source\PSoC5/USBFS.c **** * Reentrant:
1403:.\Generated_Source\PSoC5/USBFS.c **** *  No.
1404:.\Generated_Source\PSoC5/USBFS.c **** *
1405:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
1406:.\Generated_Source\PSoC5/USBFS.c **** void USBFS_SetPowerStatus(uint8 powerStatus) 
1407:.\Generated_Source\PSoC5/USBFS.c **** {
 1527              		.loc 1 1407 0
 1528              		.cfi_startproc
 1529              		@ args = 0, pretend = 0, frame = 8
 1530              		@ frame_needed = 1, uses_anonymous_args = 0
 1531              		@ link register save eliminated.
 1532 0000 80B4     		push	{r7}
 1533              	.LCFI48:
 1534              		.cfi_def_cfa_offset 4
 1535              		.cfi_offset 7, -4
 1536 0002 83B0     		sub	sp, sp, #12
 1537              	.LCFI49:
 1538              		.cfi_def_cfa_offset 16
 1539 0004 00AF     		add	r7, sp, #0
 1540              	.LCFI50:
 1541              		.cfi_def_cfa_register 7
 1542 0006 0346     		mov	r3, r0
 1543 0008 FB71     		strb	r3, [r7, #7]
1408:.\Generated_Source\PSoC5/USBFS.c ****     if (powerStatus != USBFS_DEVICE_STATUS_BUS_POWERED)
 1544              		.loc 1 1408 0
 1545 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1546 000c 002B     		cmp	r3, #0
 1547 000e 0ED0     		beq	.L48
1409:.\Generated_Source\PSoC5/USBFS.c ****     {
1410:.\Generated_Source\PSoC5/USBFS.c ****         USBFS_deviceStatus |=  USBFS_DEVICE_STATUS_SELF_POWERED;
 1548              		.loc 1 1410 0
 1549 0010 40F20003 		movw	r3, #:lower16:USBFS_deviceStatus
 1550 0014 C0F20003 		movt	r3, #:upper16:USBFS_deviceStatus
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 53


 1551 0018 1B78     		ldrb	r3, [r3, #0]
 1552 001a DBB2     		uxtb	r3, r3
 1553 001c 43F00103 		orr	r3, r3, #1
 1554 0020 DAB2     		uxtb	r2, r3
 1555 0022 40F20003 		movw	r3, #:lower16:USBFS_deviceStatus
 1556 0026 C0F20003 		movt	r3, #:upper16:USBFS_deviceStatus
 1557 002a 1A70     		strb	r2, [r3, #0]
 1558 002c 0DE0     		b	.L47
 1559              	.L48:
1411:.\Generated_Source\PSoC5/USBFS.c ****     }
1412:.\Generated_Source\PSoC5/USBFS.c ****     else
1413:.\Generated_Source\PSoC5/USBFS.c ****     {
1414:.\Generated_Source\PSoC5/USBFS.c ****         USBFS_deviceStatus &=  ((uint8)(~USBFS_DEVICE_STATUS_SELF_POWERED));
 1560              		.loc 1 1414 0
 1561 002e 40F20003 		movw	r3, #:lower16:USBFS_deviceStatus
 1562 0032 C0F20003 		movt	r3, #:upper16:USBFS_deviceStatus
 1563 0036 1B78     		ldrb	r3, [r3, #0]
 1564 0038 DBB2     		uxtb	r3, r3
 1565 003a 23F00103 		bic	r3, r3, #1
 1566 003e DAB2     		uxtb	r2, r3
 1567 0040 40F20003 		movw	r3, #:lower16:USBFS_deviceStatus
 1568 0044 C0F20003 		movt	r3, #:upper16:USBFS_deviceStatus
 1569 0048 1A70     		strb	r2, [r3, #0]
 1570              	.L47:
1415:.\Generated_Source\PSoC5/USBFS.c ****     }
1416:.\Generated_Source\PSoC5/USBFS.c **** }
 1571              		.loc 1 1416 0
 1572 004a 07F10C07 		add	r7, r7, #12
 1573 004e BD46     		mov	sp, r7
 1574 0050 80BC     		pop	{r7}
 1575 0052 7047     		bx	lr
 1576              		.cfi_endproc
 1577              	.LFE17:
 1578              		.size	USBFS_SetPowerStatus, .-USBFS_SetPowerStatus
 1579              		.section	.text.USBFS_RWUEnabled,"ax",%progbits
 1580              		.align	2
 1581              		.global	USBFS_RWUEnabled
 1582              		.thumb
 1583              		.thumb_func
 1584              		.type	USBFS_RWUEnabled, %function
 1585              	USBFS_RWUEnabled:
 1586              	.LFB18:
1417:.\Generated_Source\PSoC5/USBFS.c **** 
1418:.\Generated_Source\PSoC5/USBFS.c **** 
1419:.\Generated_Source\PSoC5/USBFS.c **** #if (USBFS_MON_VBUS == 1u)
1420:.\Generated_Source\PSoC5/USBFS.c **** 
1421:.\Generated_Source\PSoC5/USBFS.c ****     /*******************************************************************************
1422:.\Generated_Source\PSoC5/USBFS.c ****     * Function Name: USBFS_VBusPresent
1423:.\Generated_Source\PSoC5/USBFS.c ****     ********************************************************************************
1424:.\Generated_Source\PSoC5/USBFS.c ****     *
1425:.\Generated_Source\PSoC5/USBFS.c ****     * Summary:
1426:.\Generated_Source\PSoC5/USBFS.c ****     *  Determines VBUS presence for Self Powered Devices.
1427:.\Generated_Source\PSoC5/USBFS.c ****     *
1428:.\Generated_Source\PSoC5/USBFS.c ****     * Parameters:
1429:.\Generated_Source\PSoC5/USBFS.c ****     *  None.
1430:.\Generated_Source\PSoC5/USBFS.c ****     *
1431:.\Generated_Source\PSoC5/USBFS.c ****     * Return:
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 54


1432:.\Generated_Source\PSoC5/USBFS.c ****     *  1 if VBUS is present, otherwise 0.
1433:.\Generated_Source\PSoC5/USBFS.c ****     *
1434:.\Generated_Source\PSoC5/USBFS.c ****     *******************************************************************************/
1435:.\Generated_Source\PSoC5/USBFS.c ****     uint8 USBFS_VBusPresent(void) 
1436:.\Generated_Source\PSoC5/USBFS.c ****     {
1437:.\Generated_Source\PSoC5/USBFS.c ****         return((0u != (CY_GET_REG8(USBFS_VBUS_PS_PTR) & USBFS_VBUS_MASK)) ? 1u : 0u);
1438:.\Generated_Source\PSoC5/USBFS.c ****     }
1439:.\Generated_Source\PSoC5/USBFS.c **** 
1440:.\Generated_Source\PSoC5/USBFS.c **** #endif /* USBFS_MON_VBUS */
1441:.\Generated_Source\PSoC5/USBFS.c **** 
1442:.\Generated_Source\PSoC5/USBFS.c **** 
1443:.\Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
1444:.\Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_RWUEnabled
1445:.\Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
1446:.\Generated_Source\PSoC5/USBFS.c **** *
1447:.\Generated_Source\PSoC5/USBFS.c **** * Summary:
1448:.\Generated_Source\PSoC5/USBFS.c **** *  Returns TRUE if Remote Wake Up is enabled, otherwise FALSE
1449:.\Generated_Source\PSoC5/USBFS.c **** *
1450:.\Generated_Source\PSoC5/USBFS.c **** * Parameters:
1451:.\Generated_Source\PSoC5/USBFS.c **** *   None.
1452:.\Generated_Source\PSoC5/USBFS.c **** *
1453:.\Generated_Source\PSoC5/USBFS.c **** * Return:
1454:.\Generated_Source\PSoC5/USBFS.c **** *  TRUE -  Remote Wake Up Enabled
1455:.\Generated_Source\PSoC5/USBFS.c **** *  FALSE - Remote Wake Up Disabled
1456:.\Generated_Source\PSoC5/USBFS.c **** *
1457:.\Generated_Source\PSoC5/USBFS.c **** * Global variables:
1458:.\Generated_Source\PSoC5/USBFS.c **** *  USBFS_deviceStatus - checked to determine remote status
1459:.\Generated_Source\PSoC5/USBFS.c **** *
1460:.\Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
1461:.\Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_RWUEnabled(void) 
1462:.\Generated_Source\PSoC5/USBFS.c **** {
 1587              		.loc 1 1462 0
 1588              		.cfi_startproc
 1589              		@ args = 0, pretend = 0, frame = 8
 1590              		@ frame_needed = 1, uses_anonymous_args = 0
 1591              		@ link register save eliminated.
 1592 0000 80B4     		push	{r7}
 1593              	.LCFI51:
 1594              		.cfi_def_cfa_offset 4
 1595              		.cfi_offset 7, -4
 1596 0002 83B0     		sub	sp, sp, #12
 1597              	.LCFI52:
 1598              		.cfi_def_cfa_offset 16
 1599 0004 00AF     		add	r7, sp, #0
 1600              	.LCFI53:
 1601              		.cfi_def_cfa_register 7
1463:.\Generated_Source\PSoC5/USBFS.c ****     uint8 result = USBFS_FALSE;
 1602              		.loc 1 1463 0
 1603 0006 4FF00003 		mov	r3, #0
 1604 000a FB71     		strb	r3, [r7, #7]
1464:.\Generated_Source\PSoC5/USBFS.c ****     if((USBFS_deviceStatus & USBFS_DEVICE_STATUS_REMOTE_WAKEUP) != 0u)
 1605              		.loc 1 1464 0
 1606 000c 40F20003 		movw	r3, #:lower16:USBFS_deviceStatus
 1607 0010 C0F20003 		movt	r3, #:upper16:USBFS_deviceStatus
 1608 0014 1B78     		ldrb	r3, [r3, #0]
 1609 0016 DBB2     		uxtb	r3, r3
 1610 0018 03F00203 		and	r3, r3, #2
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 55


 1611 001c 002B     		cmp	r3, #0
 1612 001e 02D0     		beq	.L51
1465:.\Generated_Source\PSoC5/USBFS.c ****     {
1466:.\Generated_Source\PSoC5/USBFS.c ****         result = USBFS_TRUE;
 1613              		.loc 1 1466 0
 1614 0020 4FF00103 		mov	r3, #1
 1615 0024 FB71     		strb	r3, [r7, #7]
 1616              	.L51:
1467:.\Generated_Source\PSoC5/USBFS.c ****     }
1468:.\Generated_Source\PSoC5/USBFS.c **** 
1469:.\Generated_Source\PSoC5/USBFS.c ****     return(result);
 1617              		.loc 1 1469 0
 1618 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1470:.\Generated_Source\PSoC5/USBFS.c **** }
 1619              		.loc 1 1470 0
 1620 0028 1846     		mov	r0, r3
 1621 002a 07F10C07 		add	r7, r7, #12
 1622 002e BD46     		mov	sp, r7
 1623 0030 80BC     		pop	{r7}
 1624 0032 7047     		bx	lr
 1625              		.cfi_endproc
 1626              	.LFE18:
 1627              		.size	USBFS_RWUEnabled, .-USBFS_RWUEnabled
 1628              		.text
 1629              	.Letext0:
 1630              		.file 2 "./Generated_Source/PSoC5/cytypes.h"
 1631              		.file 3 ".\\Generated_Source\\PSoC5\\USBFS.h"
 1632              		.file 4 ".\\Generated_Source\\PSoC5\\USBFS_pvt.h"
 1633              		.section	.debug_info,"",%progbits
 1634              	.Ldebug_info0:
 1635 0000 55060000 		.4byte	0x655
 1636 0004 0200     		.2byte	0x2
 1637 0006 00000000 		.4byte	.Ldebug_abbrev0
 1638 000a 04       		.byte	0x4
 1639 000b 01       		.uleb128 0x1
 1640 000c 4E020000 		.4byte	.LASF68
 1641 0010 01       		.byte	0x1
 1642 0011 8B000000 		.4byte	.LASF69
 1643 0015 49030000 		.4byte	.LASF70
 1644 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1645 001d 00000000 		.4byte	0
 1646 0021 00000000 		.4byte	0
 1647 0025 00000000 		.4byte	.Ldebug_line0
 1648 0029 02       		.uleb128 0x2
 1649 002a 01       		.byte	0x1
 1650 002b 06       		.byte	0x6
 1651 002c 7F000000 		.4byte	.LASF0
 1652 0030 02       		.uleb128 0x2
 1653 0031 01       		.byte	0x1
 1654 0032 08       		.byte	0x8
 1655 0033 B0020000 		.4byte	.LASF1
 1656 0037 02       		.uleb128 0x2
 1657 0038 02       		.byte	0x2
 1658 0039 05       		.byte	0x5
 1659 003a BE020000 		.4byte	.LASF2
 1660 003e 02       		.uleb128 0x2
 1661 003f 02       		.byte	0x2
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 56


 1662 0040 07       		.byte	0x7
 1663 0041 D1010000 		.4byte	.LASF3
 1664 0045 02       		.uleb128 0x2
 1665 0046 04       		.byte	0x4
 1666 0047 05       		.byte	0x5
 1667 0048 24010000 		.4byte	.LASF4
 1668 004c 02       		.uleb128 0x2
 1669 004d 04       		.byte	0x4
 1670 004e 07       		.byte	0x7
 1671 004f BF010000 		.4byte	.LASF5
 1672 0053 02       		.uleb128 0x2
 1673 0054 08       		.byte	0x8
 1674 0055 05       		.byte	0x5
 1675 0056 71000000 		.4byte	.LASF6
 1676 005a 02       		.uleb128 0x2
 1677 005b 08       		.byte	0x8
 1678 005c 07       		.byte	0x7
 1679 005d 21000000 		.4byte	.LASF7
 1680 0061 03       		.uleb128 0x3
 1681 0062 04       		.byte	0x4
 1682 0063 05       		.byte	0x5
 1683 0064 696E7400 		.ascii	"int\000"
 1684 0068 02       		.uleb128 0x2
 1685 0069 04       		.byte	0x4
 1686 006a 07       		.byte	0x7
 1687 006b B2010000 		.4byte	.LASF8
 1688 006f 04       		.uleb128 0x4
 1689 0070 44010000 		.4byte	.LASF9
 1690 0074 02       		.byte	0x2
 1691 0075 5B       		.byte	0x5b
 1692 0076 30000000 		.4byte	0x30
 1693 007a 04       		.uleb128 0x4
 1694 007b 00000000 		.4byte	.LASF10
 1695 007f 02       		.byte	0x2
 1696 0080 5C       		.byte	0x5c
 1697 0081 3E000000 		.4byte	0x3e
 1698 0085 04       		.uleb128 0x4
 1699 0086 66010000 		.4byte	.LASF11
 1700 008a 02       		.byte	0x2
 1701 008b 5D       		.byte	0x5d
 1702 008c 4C000000 		.4byte	0x4c
 1703 0090 02       		.uleb128 0x2
 1704 0091 04       		.byte	0x4
 1705 0092 04       		.byte	0x4
 1706 0093 34020000 		.4byte	.LASF12
 1707 0097 02       		.uleb128 0x2
 1708 0098 08       		.byte	0x8
 1709 0099 04       		.byte	0x4
 1710 009a 53010000 		.4byte	.LASF13
 1711 009e 02       		.uleb128 0x2
 1712 009f 01       		.byte	0x1
 1713 00a0 08       		.byte	0x8
 1714 00a1 99030000 		.4byte	.LASF14
 1715 00a5 04       		.uleb128 0x4
 1716 00a6 97020000 		.4byte	.LASF15
 1717 00aa 02       		.byte	0x2
 1718 00ab F0       		.byte	0xf0
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 57


 1719 00ac B0000000 		.4byte	0xb0
 1720 00b0 05       		.uleb128 0x5
 1721 00b1 6F000000 		.4byte	0x6f
 1722 00b5 04       		.uleb128 0x4
 1723 00b6 09020000 		.4byte	.LASF16
 1724 00ba 02       		.byte	0x2
 1725 00bb F2       		.byte	0xf2
 1726 00bc C0000000 		.4byte	0xc0
 1727 00c0 05       		.uleb128 0x5
 1728 00c1 85000000 		.4byte	0x85
 1729 00c5 02       		.uleb128 0x2
 1730 00c6 04       		.byte	0x4
 1731 00c7 07       		.byte	0x7
 1732 00c8 19020000 		.4byte	.LASF17
 1733 00cc 06       		.uleb128 0x6
 1734 00cd 0C       		.byte	0xc
 1735 00ce 03       		.byte	0x3
 1736 00cf 76       		.byte	0x76
 1737 00d0 53010000 		.4byte	0x153
 1738 00d4 07       		.uleb128 0x7
 1739 00d5 22020000 		.4byte	.LASF18
 1740 00d9 03       		.byte	0x3
 1741 00da 78       		.byte	0x78
 1742 00db 6F000000 		.4byte	0x6f
 1743 00df 02       		.byte	0x2
 1744 00e0 23       		.byte	0x23
 1745 00e1 00       		.uleb128 0
 1746 00e2 07       		.uleb128 0x7
 1747 00e3 3A020000 		.4byte	.LASF19
 1748 00e7 03       		.byte	0x3
 1749 00e8 79       		.byte	0x79
 1750 00e9 6F000000 		.4byte	0x6f
 1751 00ed 02       		.byte	0x2
 1752 00ee 23       		.byte	0x23
 1753 00ef 01       		.uleb128 0x1
 1754 00f0 07       		.uleb128 0x7
 1755 00f1 0F020000 		.4byte	.LASF20
 1756 00f5 03       		.byte	0x3
 1757 00f6 7A       		.byte	0x7a
 1758 00f7 6F000000 		.4byte	0x6f
 1759 00fb 02       		.byte	0x2
 1760 00fc 23       		.byte	0x23
 1761 00fd 02       		.uleb128 0x2
 1762 00fe 07       		.uleb128 0x7
 1763 00ff 4A010000 		.4byte	.LASF21
 1764 0103 03       		.byte	0x3
 1765 0104 7B       		.byte	0x7b
 1766 0105 6F000000 		.4byte	0x6f
 1767 0109 02       		.byte	0x2
 1768 010a 23       		.byte	0x23
 1769 010b 03       		.uleb128 0x3
 1770 010c 07       		.uleb128 0x7
 1771 010d 4C000000 		.4byte	.LASF22
 1772 0111 03       		.byte	0x3
 1773 0112 7C       		.byte	0x7c
 1774 0113 6F000000 		.4byte	0x6f
 1775 0117 02       		.byte	0x2
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 58


 1776 0118 23       		.byte	0x23
 1777 0119 04       		.uleb128 0x4
 1778 011a 07       		.uleb128 0x7
 1779 011b 9B010000 		.4byte	.LASF23
 1780 011f 03       		.byte	0x3
 1781 0120 7D       		.byte	0x7d
 1782 0121 6F000000 		.4byte	0x6f
 1783 0125 02       		.byte	0x2
 1784 0126 23       		.byte	0x23
 1785 0127 05       		.uleb128 0x5
 1786 0128 07       		.uleb128 0x7
 1787 0129 BA030000 		.4byte	.LASF24
 1788 012d 03       		.byte	0x3
 1789 012e 7E       		.byte	0x7e
 1790 012f 7A000000 		.4byte	0x7a
 1791 0133 02       		.byte	0x2
 1792 0134 23       		.byte	0x23
 1793 0135 06       		.uleb128 0x6
 1794 0136 07       		.uleb128 0x7
 1795 0137 A3030000 		.4byte	.LASF25
 1796 013b 03       		.byte	0x3
 1797 013c 7F       		.byte	0x7f
 1798 013d 7A000000 		.4byte	0x7a
 1799 0141 02       		.byte	0x2
 1800 0142 23       		.byte	0x23
 1801 0143 08       		.uleb128 0x8
 1802 0144 07       		.uleb128 0x7
 1803 0145 E4010000 		.4byte	.LASF26
 1804 0149 03       		.byte	0x3
 1805 014a 80       		.byte	0x80
 1806 014b 6F000000 		.4byte	0x6f
 1807 014f 02       		.byte	0x2
 1808 0150 23       		.byte	0x23
 1809 0151 0A       		.uleb128 0xa
 1810 0152 00       		.byte	0
 1811 0153 04       		.uleb128 0x4
 1812 0154 20030000 		.4byte	.LASF27
 1813 0158 03       		.byte	0x3
 1814 0159 81       		.byte	0x81
 1815 015a CC000000 		.4byte	0xcc
 1816 015e 08       		.uleb128 0x8
 1817 015f 01       		.byte	0x1
 1818 0160 AE030000 		.4byte	.LASF30
 1819 0164 01       		.byte	0x1
 1820 0165 81       		.byte	0x81
 1821 0166 01       		.byte	0x1
 1822 0167 00000000 		.4byte	.LFB0
 1823 016b 42000000 		.4byte	.LFE0
 1824 016f 00000000 		.4byte	.LLST0
 1825 0173 01       		.byte	0x1
 1826 0174 95010000 		.4byte	0x195
 1827 0178 09       		.uleb128 0x9
 1828 0179 6A000000 		.4byte	.LASF28
 1829 017d 01       		.byte	0x1
 1830 017e 81       		.byte	0x81
 1831 017f 6F000000 		.4byte	0x6f
 1832 0183 02       		.byte	0x2
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 59


 1833 0184 91       		.byte	0x91
 1834 0185 77       		.sleb128 -9
 1835 0186 09       		.uleb128 0x9
 1836 0187 9E030000 		.4byte	.LASF29
 1837 018b 01       		.byte	0x1
 1838 018c 81       		.byte	0x81
 1839 018d 6F000000 		.4byte	0x6f
 1840 0191 02       		.byte	0x2
 1841 0192 91       		.byte	0x91
 1842 0193 76       		.sleb128 -10
 1843 0194 00       		.byte	0
 1844 0195 08       		.uleb128 0x8
 1845 0196 01       		.byte	0x1
 1846 0197 29020000 		.4byte	.LASF31
 1847 019b 01       		.byte	0x1
 1848 019c 9E       		.byte	0x9e
 1849 019d 01       		.byte	0x1
 1850 019e 00000000 		.4byte	.LFB1
 1851 01a2 8A020000 		.4byte	.LFE1
 1852 01a6 38000000 		.4byte	.LLST1
 1853 01aa 01       		.byte	0x1
 1854 01ab BE010000 		.4byte	0x1be
 1855 01af 0A       		.uleb128 0xa
 1856 01b0 FF030000 		.4byte	.LASF35
 1857 01b4 01       		.byte	0x1
 1858 01b5 A0       		.byte	0xa0
 1859 01b6 6F000000 		.4byte	0x6f
 1860 01ba 02       		.byte	0x2
 1861 01bb 91       		.byte	0x91
 1862 01bc 77       		.sleb128 -9
 1863 01bd 00       		.byte	0
 1864 01be 0B       		.uleb128 0xb
 1865 01bf 01       		.byte	0x1
 1866 01c0 6D010000 		.4byte	.LASF32
 1867 01c4 01       		.byte	0x1
 1868 01c5 5C01     		.2byte	0x15c
 1869 01c7 01       		.byte	0x1
 1870 01c8 00000000 		.4byte	.LFB2
 1871 01cc 62010000 		.4byte	.LFE2
 1872 01d0 70000000 		.4byte	.LLST2
 1873 01d4 01       		.byte	0x1
 1874 01d5 F8010000 		.4byte	0x1f8
 1875 01d9 0C       		.uleb128 0xc
 1876 01da 6A000000 		.4byte	.LASF28
 1877 01de 01       		.byte	0x1
 1878 01df 5C01     		.2byte	0x15c
 1879 01e1 6F000000 		.4byte	0x6f
 1880 01e5 02       		.byte	0x2
 1881 01e6 91       		.byte	0x91
 1882 01e7 77       		.sleb128 -9
 1883 01e8 0C       		.uleb128 0xc
 1884 01e9 9E030000 		.4byte	.LASF29
 1885 01ed 01       		.byte	0x1
 1886 01ee 5C01     		.2byte	0x15c
 1887 01f0 6F000000 		.4byte	0x6f
 1888 01f4 02       		.byte	0x2
 1889 01f5 91       		.byte	0x91
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 60


 1890 01f6 76       		.sleb128 -10
 1891 01f7 00       		.byte	0
 1892 01f8 0D       		.uleb128 0xd
 1893 01f9 01       		.byte	0x1
 1894 01fa E9030000 		.4byte	.LASF33
 1895 01fe 01       		.byte	0x1
 1896 01ff F201     		.2byte	0x1f2
 1897 0201 01       		.byte	0x1
 1898 0202 00000000 		.4byte	.LFB3
 1899 0206 88000000 		.4byte	.LFE3
 1900 020a A8000000 		.4byte	.LLST3
 1901 020e 01       		.byte	0x1
 1902 020f 0D       		.uleb128 0xd
 1903 0210 01       		.byte	0x1
 1904 0211 19010000 		.4byte	.LASF34
 1905 0215 01       		.byte	0x1
 1906 0216 3402     		.2byte	0x234
 1907 0218 01       		.byte	0x1
 1908 0219 00000000 		.4byte	.LFB4
 1909 021d 3E010000 		.4byte	.LFE4
 1910 0221 D4000000 		.4byte	.LLST4
 1911 0225 01       		.byte	0x1
 1912 0226 0E       		.uleb128 0xe
 1913 0227 01       		.byte	0x1
 1914 0228 10040000 		.4byte	.LASF36
 1915 022c 01       		.byte	0x1
 1916 022d 7B02     		.2byte	0x27b
 1917 022f 01       		.byte	0x1
 1918 0230 6F000000 		.4byte	0x6f
 1919 0234 00000000 		.4byte	.LFB5
 1920 0238 3C000000 		.4byte	.LFE5
 1921 023c 00010000 		.4byte	.LLST5
 1922 0240 01       		.byte	0x1
 1923 0241 53020000 		.4byte	0x253
 1924 0245 0F       		.uleb128 0xf
 1925 0246 7200     		.ascii	"r\000"
 1926 0248 01       		.byte	0x1
 1927 0249 7D02     		.2byte	0x27d
 1928 024b 6F000000 		.4byte	0x6f
 1929 024f 02       		.byte	0x2
 1930 0250 91       		.byte	0x91
 1931 0251 77       		.sleb128 -9
 1932 0252 00       		.byte	0
 1933 0253 10       		.uleb128 0x10
 1934 0254 01       		.byte	0x1
 1935 0255 2D010000 		.4byte	.LASF71
 1936 0259 01       		.byte	0x1
 1937 025a 9402     		.2byte	0x294
 1938 025c 01       		.byte	0x1
 1939 025d 6F000000 		.4byte	0x6f
 1940 0261 00000000 		.4byte	.LFB6
 1941 0265 18000000 		.4byte	.LFE6
 1942 0269 38010000 		.4byte	.LLST6
 1943 026d 01       		.byte	0x1
 1944 026e 0E       		.uleb128 0xe
 1945 026f 01       		.byte	0x1
 1946 0270 AC000000 		.4byte	.LASF37
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 61


 1947 0274 01       		.byte	0x1
 1948 0275 AE02     		.2byte	0x2ae
 1949 0277 01       		.byte	0x1
 1950 0278 6F000000 		.4byte	0x6f
 1951 027c 00000000 		.4byte	.LFB7
 1952 0280 44000000 		.4byte	.LFE7
 1953 0284 64010000 		.4byte	.LLST7
 1954 0288 01       		.byte	0x1
 1955 0289 9D020000 		.4byte	0x29d
 1956 028d 0F       		.uleb128 0xf
 1957 028e 72657300 		.ascii	"res\000"
 1958 0292 01       		.byte	0x1
 1959 0293 B002     		.2byte	0x2b0
 1960 0295 6F000000 		.4byte	0x6f
 1961 0299 02       		.byte	0x2
 1962 029a 91       		.byte	0x91
 1963 029b 77       		.sleb128 -9
 1964 029c 00       		.byte	0
 1965 029d 0E       		.uleb128 0xe
 1966 029e 01       		.byte	0x1
 1967 029f DA020000 		.4byte	.LASF38
 1968 02a3 01       		.byte	0x1
 1969 02a4 CA02     		.2byte	0x2ca
 1970 02a6 01       		.byte	0x1
 1971 02a7 6F000000 		.4byte	0x6f
 1972 02ab 00000000 		.4byte	.LFB8
 1973 02af 24000000 		.4byte	.LFE8
 1974 02b3 9C010000 		.4byte	.LLST8
 1975 02b7 01       		.byte	0x1
 1976 02b8 CC020000 		.4byte	0x2cc
 1977 02bc 0C       		.uleb128 0xc
 1978 02bd 51000000 		.4byte	.LASF39
 1979 02c1 01       		.byte	0x1
 1980 02c2 CA02     		.2byte	0x2ca
 1981 02c4 6F000000 		.4byte	0x6f
 1982 02c8 02       		.byte	0x2
 1983 02c9 91       		.byte	0x91
 1984 02ca 77       		.sleb128 -9
 1985 02cb 00       		.byte	0
 1986 02cc 0E       		.uleb128 0xe
 1987 02cd 01       		.byte	0x1
 1988 02ce D8030000 		.4byte	.LASF40
 1989 02d2 01       		.byte	0x1
 1990 02d3 DF02     		.2byte	0x2df
 1991 02d5 01       		.byte	0x1
 1992 02d6 6F000000 		.4byte	0x6f
 1993 02da 00000000 		.4byte	.LFB9
 1994 02de 32000000 		.4byte	.LFE9
 1995 02e2 D4010000 		.4byte	.LLST9
 1996 02e6 01       		.byte	0x1
 1997 02e7 FB020000 		.4byte	0x2fb
 1998 02eb 0C       		.uleb128 0xc
 1999 02ec 61000000 		.4byte	.LASF41
 2000 02f0 01       		.byte	0x1
 2001 02f1 DF02     		.2byte	0x2df
 2002 02f3 6F000000 		.4byte	0x6f
 2003 02f7 02       		.byte	0x2
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 62


 2004 02f8 91       		.byte	0x91
 2005 02f9 77       		.sleb128 -9
 2006 02fa 00       		.byte	0
 2007 02fb 0E       		.uleb128 0xe
 2008 02fc 01       		.byte	0x1
 2009 02fd 50040000 		.4byte	.LASF42
 2010 0301 01       		.byte	0x1
 2011 0302 F802     		.2byte	0x2f8
 2012 0304 01       		.byte	0x1
 2013 0305 7A000000 		.4byte	0x7a
 2014 0309 00000000 		.4byte	.LFB10
 2015 030d 74000000 		.4byte	.LFE10
 2016 0311 0C020000 		.4byte	.LLST10
 2017 0315 01       		.byte	0x1
 2018 0316 47030000 		.4byte	0x347
 2019 031a 0C       		.uleb128 0xc
 2020 031b 61000000 		.4byte	.LASF41
 2021 031f 01       		.byte	0x1
 2022 0320 F802     		.2byte	0x2f8
 2023 0322 6F000000 		.4byte	0x6f
 2024 0326 02       		.byte	0x2
 2025 0327 91       		.byte	0x91
 2026 0328 6F       		.sleb128 -17
 2027 0329 0F       		.uleb128 0xf
 2028 032a 726900   		.ascii	"ri\000"
 2029 032d 01       		.byte	0x1
 2030 032e FA02     		.2byte	0x2fa
 2031 0330 6F000000 		.4byte	0x6f
 2032 0334 02       		.byte	0x2
 2033 0335 91       		.byte	0x91
 2034 0336 75       		.sleb128 -11
 2035 0337 11       		.uleb128 0x11
 2036 0338 61040000 		.4byte	.LASF43
 2037 033c 01       		.byte	0x1
 2038 033d FB02     		.2byte	0x2fb
 2039 033f 7A000000 		.4byte	0x7a
 2040 0343 02       		.byte	0x2
 2041 0344 91       		.byte	0x91
 2042 0345 76       		.sleb128 -10
 2043 0346 00       		.byte	0
 2044 0347 12       		.uleb128 0x12
 2045 0348 01       		.byte	0x1
 2046 0349 41040000 		.4byte	.LASF44
 2047 034d 01       		.byte	0x1
 2048 034e F103     		.2byte	0x3f1
 2049 0350 01       		.byte	0x1
 2050 0351 00000000 		.4byte	.LFB11
 2051 0355 4E010000 		.4byte	.LFE11
 2052 0359 44020000 		.4byte	.LLST11
 2053 035d 01       		.byte	0x1
 2054 035e B8030000 		.4byte	0x3b8
 2055 0362 0C       		.uleb128 0xc
 2056 0363 61000000 		.4byte	.LASF41
 2057 0367 01       		.byte	0x1
 2058 0368 F103     		.2byte	0x3f1
 2059 036a 6F000000 		.4byte	0x6f
 2060 036e 02       		.byte	0x2
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 63


 2061 036f 91       		.byte	0x91
 2062 0370 6F       		.sleb128 -17
 2063 0371 0C       		.uleb128 0xc
 2064 0372 81010000 		.4byte	.LASF45
 2065 0376 01       		.byte	0x1
 2066 0377 F103     		.2byte	0x3f1
 2067 0379 B8030000 		.4byte	0x3b8
 2068 037d 02       		.byte	0x2
 2069 037e 91       		.byte	0x91
 2070 037f 68       		.sleb128 -24
 2071 0380 0C       		.uleb128 0xc
 2072 0381 92030000 		.4byte	.LASF46
 2073 0385 01       		.byte	0x1
 2074 0386 F103     		.2byte	0x3f1
 2075 0388 7A000000 		.4byte	0x7a
 2076 038c 02       		.byte	0x2
 2077 038d 91       		.byte	0x91
 2078 038e 6C       		.sleb128 -20
 2079 038f 0F       		.uleb128 0xf
 2080 0390 726900   		.ascii	"ri\000"
 2081 0393 01       		.byte	0x1
 2082 0394 F403     		.2byte	0x3f4
 2083 0396 6F000000 		.4byte	0x6f
 2084 039a 02       		.byte	0x2
 2085 039b 91       		.byte	0x91
 2086 039c 75       		.sleb128 -11
 2087 039d 0F       		.uleb128 0xf
 2088 039e 7000     		.ascii	"p\000"
 2089 03a0 01       		.byte	0x1
 2090 03a1 F503     		.2byte	0x3f5
 2091 03a3 C3030000 		.4byte	0x3c3
 2092 03a7 02       		.byte	0x2
 2093 03a8 91       		.byte	0x91
 2094 03a9 70       		.sleb128 -16
 2095 03aa 0F       		.uleb128 0xf
 2096 03ab 6900     		.ascii	"i\000"
 2097 03ad 01       		.byte	0x1
 2098 03ae F703     		.2byte	0x3f7
 2099 03b0 7A000000 		.4byte	0x7a
 2100 03b4 02       		.byte	0x2
 2101 03b5 91       		.byte	0x91
 2102 03b6 76       		.sleb128 -10
 2103 03b7 00       		.byte	0
 2104 03b8 13       		.uleb128 0x13
 2105 03b9 04       		.byte	0x4
 2106 03ba BE030000 		.4byte	0x3be
 2107 03be 14       		.uleb128 0x14
 2108 03bf 6F000000 		.4byte	0x6f
 2109 03c3 13       		.uleb128 0x13
 2110 03c4 04       		.byte	0x4
 2111 03c5 A5000000 		.4byte	0xa5
 2112 03c9 15       		.uleb128 0x15
 2113 03ca 01       		.byte	0x1
 2114 03cb A2010000 		.4byte	.LASF47
 2115 03cf 01       		.byte	0x1
 2116 03d0 9C04     		.2byte	0x49c
 2117 03d2 01       		.byte	0x1
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 64


 2118 03d3 7A000000 		.4byte	0x7a
 2119 03d7 00000000 		.4byte	.LFB12
 2120 03db 98000000 		.4byte	.LFE12
 2121 03df 7C020000 		.4byte	.LLST12
 2122 03e3 01       		.byte	0x1
 2123 03e4 4D040000 		.4byte	0x44d
 2124 03e8 0C       		.uleb128 0xc
 2125 03e9 61000000 		.4byte	.LASF41
 2126 03ed 01       		.byte	0x1
 2127 03ee 9C04     		.2byte	0x49c
 2128 03f0 6F000000 		.4byte	0x6f
 2129 03f4 02       		.byte	0x2
 2130 03f5 91       		.byte	0x91
 2131 03f6 67       		.sleb128 -25
 2132 03f7 0C       		.uleb128 0xc
 2133 03f8 81010000 		.4byte	.LASF45
 2134 03fc 01       		.byte	0x1
 2135 03fd 9C04     		.2byte	0x49c
 2136 03ff 4D040000 		.4byte	0x44d
 2137 0403 02       		.byte	0x2
 2138 0404 91       		.byte	0x91
 2139 0405 60       		.sleb128 -32
 2140 0406 0C       		.uleb128 0xc
 2141 0407 92030000 		.4byte	.LASF46
 2142 040b 01       		.byte	0x1
 2143 040c 9C04     		.2byte	0x49c
 2144 040e 7A000000 		.4byte	0x7a
 2145 0412 02       		.byte	0x2
 2146 0413 91       		.byte	0x91
 2147 0414 64       		.sleb128 -28
 2148 0415 0F       		.uleb128 0xf
 2149 0416 726900   		.ascii	"ri\000"
 2150 0419 01       		.byte	0x1
 2151 041a 9F04     		.2byte	0x49f
 2152 041c 6F000000 		.4byte	0x6f
 2153 0420 02       		.byte	0x2
 2154 0421 91       		.byte	0x91
 2155 0422 75       		.sleb128 -11
 2156 0423 0F       		.uleb128 0xf
 2157 0424 7000     		.ascii	"p\000"
 2158 0426 01       		.byte	0x1
 2159 0427 A004     		.2byte	0x4a0
 2160 0429 C3030000 		.4byte	0x3c3
 2161 042d 02       		.byte	0x2
 2162 042e 91       		.byte	0x91
 2163 042f 70       		.sleb128 -16
 2164 0430 0F       		.uleb128 0xf
 2165 0431 6900     		.ascii	"i\000"
 2166 0433 01       		.byte	0x1
 2167 0434 A204     		.2byte	0x4a2
 2168 0436 7A000000 		.4byte	0x7a
 2169 043a 02       		.byte	0x2
 2170 043b 91       		.byte	0x91
 2171 043c 76       		.sleb128 -10
 2172 043d 11       		.uleb128 0x11
 2173 043e 24040000 		.4byte	.LASF48
 2174 0442 01       		.byte	0x1
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 65


 2175 0443 A504     		.2byte	0x4a5
 2176 0445 7A000000 		.4byte	0x7a
 2177 0449 02       		.byte	0x2
 2178 044a 91       		.byte	0x91
 2179 044b 6E       		.sleb128 -18
 2180 044c 00       		.byte	0
 2181 044d 13       		.uleb128 0x13
 2182 044e 04       		.byte	0x4
 2183 044f 6F000000 		.4byte	0x6f
 2184 0453 12       		.uleb128 0x12
 2185 0454 01       		.byte	0x1
 2186 0455 C8020000 		.4byte	.LASF49
 2187 0459 01       		.byte	0x1
 2188 045a 0705     		.2byte	0x507
 2189 045c 01       		.byte	0x1
 2190 045d 00000000 		.4byte	.LFB13
 2191 0461 78000000 		.4byte	.LFE13
 2192 0465 B4020000 		.4byte	.LLST13
 2193 0469 01       		.byte	0x1
 2194 046a 8C040000 		.4byte	0x48c
 2195 046e 0C       		.uleb128 0xc
 2196 046f 61000000 		.4byte	.LASF41
 2197 0473 01       		.byte	0x1
 2198 0474 0705     		.2byte	0x507
 2199 0476 6F000000 		.4byte	0x6f
 2200 047a 02       		.byte	0x2
 2201 047b 91       		.byte	0x91
 2202 047c 6F       		.sleb128 -17
 2203 047d 0F       		.uleb128 0xf
 2204 047e 726900   		.ascii	"ri\000"
 2205 0481 01       		.byte	0x1
 2206 0482 0905     		.2byte	0x509
 2207 0484 6F000000 		.4byte	0x6f
 2208 0488 02       		.byte	0x2
 2209 0489 91       		.byte	0x91
 2210 048a 77       		.sleb128 -9
 2211 048b 00       		.byte	0
 2212 048c 12       		.uleb128 0x12
 2213 048d 01       		.byte	0x1
 2214 048e 2E040000 		.4byte	.LASF50
 2215 0492 01       		.byte	0x1
 2216 0493 2505     		.2byte	0x525
 2217 0495 01       		.byte	0x1
 2218 0496 00000000 		.4byte	.LFB14
 2219 049a 40000000 		.4byte	.LFE14
 2220 049e EC020000 		.4byte	.LLST14
 2221 04a2 01       		.byte	0x1
 2222 04a3 C5040000 		.4byte	0x4c5
 2223 04a7 0C       		.uleb128 0xc
 2224 04a8 61000000 		.4byte	.LASF41
 2225 04ac 01       		.byte	0x1
 2226 04ad 2505     		.2byte	0x525
 2227 04af 6F000000 		.4byte	0x6f
 2228 04b3 02       		.byte	0x2
 2229 04b4 91       		.byte	0x91
 2230 04b5 6F       		.sleb128 -17
 2231 04b6 0F       		.uleb128 0xf
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 66


 2232 04b7 726900   		.ascii	"ri\000"
 2233 04ba 01       		.byte	0x1
 2234 04bb 2705     		.2byte	0x527
 2235 04bd 6F000000 		.4byte	0x6f
 2236 04c1 02       		.byte	0x2
 2237 04c2 91       		.byte	0x91
 2238 04c3 77       		.sleb128 -9
 2239 04c4 00       		.byte	0
 2240 04c5 12       		.uleb128 0x12
 2241 04c6 01       		.byte	0x1
 2242 04c7 15000000 		.4byte	.LASF51
 2243 04cb 01       		.byte	0x1
 2244 04cc 4405     		.2byte	0x544
 2245 04ce 01       		.byte	0x1
 2246 04cf 00000000 		.4byte	.LFB15
 2247 04d3 20000000 		.4byte	.LFE15
 2248 04d7 24030000 		.4byte	.LLST15
 2249 04db 01       		.byte	0x1
 2250 04dc F0040000 		.4byte	0x4f0
 2251 04e0 0C       		.uleb128 0xc
 2252 04e1 42030000 		.4byte	.LASF52
 2253 04e5 01       		.byte	0x1
 2254 04e6 4405     		.2byte	0x544
 2255 04e8 6F000000 		.4byte	0x6f
 2256 04ec 02       		.byte	0x2
 2257 04ed 91       		.byte	0x91
 2258 04ee 77       		.sleb128 -9
 2259 04ef 00       		.byte	0
 2260 04f0 0E       		.uleb128 0xe
 2261 04f1 01       		.byte	0x1
 2262 04f2 38000000 		.4byte	.LASF53
 2263 04f6 01       		.byte	0x1
 2264 04f7 5905     		.2byte	0x559
 2265 04f9 01       		.byte	0x1
 2266 04fa 6F000000 		.4byte	0x6f
 2267 04fe 00000000 		.4byte	.LFB16
 2268 0502 4E000000 		.4byte	.LFE16
 2269 0506 5C030000 		.4byte	.LLST16
 2270 050a 01       		.byte	0x1
 2271 050b 3B050000 		.4byte	0x53b
 2272 050f 0C       		.uleb128 0xc
 2273 0510 61000000 		.4byte	.LASF41
 2274 0514 01       		.byte	0x1
 2275 0515 5905     		.2byte	0x559
 2276 0517 6F000000 		.4byte	0x6f
 2277 051b 02       		.byte	0x2
 2278 051c 91       		.byte	0x91
 2279 051d 6F       		.sleb128 -17
 2280 051e 0F       		.uleb128 0xf
 2281 051f 726900   		.ascii	"ri\000"
 2282 0522 01       		.byte	0x1
 2283 0523 5B05     		.2byte	0x55b
 2284 0525 6F000000 		.4byte	0x6f
 2285 0529 02       		.byte	0x2
 2286 052a 91       		.byte	0x91
 2287 052b 76       		.sleb128 -10
 2288 052c 0F       		.uleb128 0xf
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 67


 2289 052d 637200   		.ascii	"cr\000"
 2290 0530 01       		.byte	0x1
 2291 0531 5C05     		.2byte	0x55c
 2292 0533 6F000000 		.4byte	0x6f
 2293 0537 02       		.byte	0x2
 2294 0538 91       		.byte	0x91
 2295 0539 77       		.sleb128 -9
 2296 053a 00       		.byte	0
 2297 053b 12       		.uleb128 0x12
 2298 053c 01       		.byte	0x1
 2299 053d 04010000 		.4byte	.LASF54
 2300 0541 01       		.byte	0x1
 2301 0542 7E05     		.2byte	0x57e
 2302 0544 01       		.byte	0x1
 2303 0545 00000000 		.4byte	.LFB17
 2304 0549 54000000 		.4byte	.LFE17
 2305 054d 94030000 		.4byte	.LLST17
 2306 0551 01       		.byte	0x1
 2307 0552 66050000 		.4byte	0x566
 2308 0556 0C       		.uleb128 0xc
 2309 0557 5A010000 		.4byte	.LASF55
 2310 055b 01       		.byte	0x1
 2311 055c 7E05     		.2byte	0x57e
 2312 055e 6F000000 		.4byte	0x6f
 2313 0562 02       		.byte	0x2
 2314 0563 91       		.byte	0x91
 2315 0564 77       		.sleb128 -9
 2316 0565 00       		.byte	0
 2317 0566 0E       		.uleb128 0xe
 2318 0567 01       		.byte	0x1
 2319 0568 F3000000 		.4byte	.LASF56
 2320 056c 01       		.byte	0x1
 2321 056d B505     		.2byte	0x5b5
 2322 056f 01       		.byte	0x1
 2323 0570 6F000000 		.4byte	0x6f
 2324 0574 00000000 		.4byte	.LFB18
 2325 0578 34000000 		.4byte	.LFE18
 2326 057c CC030000 		.4byte	.LLST18
 2327 0580 01       		.byte	0x1
 2328 0581 95050000 		.4byte	0x595
 2329 0585 11       		.uleb128 0x11
 2330 0586 61040000 		.4byte	.LASF43
 2331 058a 01       		.byte	0x1
 2332 058b B705     		.2byte	0x5b7
 2333 058d 6F000000 		.4byte	0x6f
 2334 0591 02       		.byte	0x2
 2335 0592 91       		.byte	0x91
 2336 0593 77       		.sleb128 -9
 2337 0594 00       		.byte	0
 2338 0595 16       		.uleb128 0x16
 2339 0596 07000000 		.4byte	.LASF57
 2340 059a 01       		.byte	0x1
 2341 059b 3B       		.byte	0x3b
 2342 059c 6F000000 		.4byte	0x6f
 2343 05a0 01       		.byte	0x1
 2344 05a1 05       		.byte	0x5
 2345 05a2 03       		.byte	0x3
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 68


 2346 05a3 00000000 		.4byte	USBFS_initVar
 2347 05a7 17       		.uleb128 0x17
 2348 05a8 35030000 		.4byte	.LASF58
 2349 05ac 03       		.byte	0x3
 2350 05ad 4802     		.2byte	0x248
 2351 05af B0000000 		.4byte	0xb0
 2352 05b3 01       		.byte	0x1
 2353 05b4 01       		.byte	0x1
 2354 05b5 17       		.uleb128 0x17
 2355 05b6 9C020000 		.4byte	.LASF59
 2356 05ba 03       		.byte	0x3
 2357 05bb 4902     		.2byte	0x249
 2358 05bd B0000000 		.4byte	0xb0
 2359 05c1 01       		.byte	0x1
 2360 05c2 01       		.byte	0x1
 2361 05c3 17       		.uleb128 0x17
 2362 05c4 87010000 		.4byte	.LASF60
 2363 05c8 03       		.byte	0x3
 2364 05c9 4A02     		.2byte	0x24a
 2365 05cb B0000000 		.4byte	0xb0
 2366 05cf 01       		.byte	0x1
 2367 05d0 01       		.byte	0x1
 2368 05d1 17       		.uleb128 0x17
 2369 05d2 EE010000 		.4byte	.LASF61
 2370 05d6 03       		.byte	0x3
 2371 05d7 4B02     		.2byte	0x24b
 2372 05d9 B0000000 		.4byte	0xb0
 2373 05dd 01       		.byte	0x1
 2374 05de 01       		.byte	0x1
 2375 05df 17       		.uleb128 0x17
 2376 05e0 C5030000 		.4byte	.LASF62
 2377 05e4 03       		.byte	0x3
 2378 05e5 4C02     		.2byte	0x24c
 2379 05e7 B0000000 		.4byte	0xb0
 2380 05eb 01       		.byte	0x1
 2381 05ec 01       		.byte	0x1
 2382 05ed 18       		.uleb128 0x18
 2383 05ee DD000000 		.4byte	.LASF63
 2384 05f2 04       		.byte	0x4
 2385 05f3 2C       		.byte	0x2c
 2386 05f4 B0000000 		.4byte	0xb0
 2387 05f8 01       		.byte	0x1
 2388 05f9 01       		.byte	0x1
 2389 05fa 19       		.uleb128 0x19
 2390 05fb 6F000000 		.4byte	0x6f
 2391 05ff 0A060000 		.4byte	0x60a
 2392 0603 1A       		.uleb128 0x1a
 2393 0604 C5000000 		.4byte	0xc5
 2394 0608 00       		.byte	0
 2395 0609 00       		.byte	0
 2396 060a 18       		.uleb128 0x18
 2397 060b 09030000 		.4byte	.LASF64
 2398 060f 04       		.byte	0x4
 2399 0610 2D       		.byte	0x2d
 2400 0611 17060000 		.4byte	0x617
 2401 0615 01       		.byte	0x1
 2402 0616 01       		.byte	0x1
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 69


 2403 0617 05       		.uleb128 0x5
 2404 0618 FA050000 		.4byte	0x5fa
 2405 061c 18       		.uleb128 0x18
 2406 061d C9000000 		.4byte	.LASF65
 2407 0621 04       		.byte	0x4
 2408 0622 2F       		.byte	0x2f
 2409 0623 B0000000 		.4byte	0xb0
 2410 0627 01       		.byte	0x1
 2411 0628 01       		.byte	0x1
 2412 0629 19       		.uleb128 0x19
 2413 062a 53010000 		.4byte	0x153
 2414 062e 39060000 		.4byte	0x639
 2415 0632 1A       		.uleb128 0x1a
 2416 0633 C5000000 		.4byte	0xc5
 2417 0637 08       		.byte	0x8
 2418 0638 00       		.byte	0
 2419 0639 18       		.uleb128 0x18
 2420 063a 45020000 		.4byte	.LASF66
 2421 063e 04       		.byte	0x4
 2422 063f 33       		.byte	0x33
 2423 0640 46060000 		.4byte	0x646
 2424 0644 01       		.byte	0x1
 2425 0645 01       		.byte	0x1
 2426 0646 05       		.uleb128 0x5
 2427 0647 29060000 		.4byte	0x629
 2428 064b 18       		.uleb128 0x18
 2429 064c F4020000 		.4byte	.LASF67
 2430 0650 04       		.byte	0x4
 2431 0651 42       		.byte	0x42
 2432 0652 B0000000 		.4byte	0xb0
 2433 0656 01       		.byte	0x1
 2434 0657 01       		.byte	0x1
 2435 0658 00       		.byte	0
 2436              		.section	.debug_abbrev,"",%progbits
 2437              	.Ldebug_abbrev0:
 2438 0000 01       		.uleb128 0x1
 2439 0001 11       		.uleb128 0x11
 2440 0002 01       		.byte	0x1
 2441 0003 25       		.uleb128 0x25
 2442 0004 0E       		.uleb128 0xe
 2443 0005 13       		.uleb128 0x13
 2444 0006 0B       		.uleb128 0xb
 2445 0007 03       		.uleb128 0x3
 2446 0008 0E       		.uleb128 0xe
 2447 0009 1B       		.uleb128 0x1b
 2448 000a 0E       		.uleb128 0xe
 2449 000b 55       		.uleb128 0x55
 2450 000c 06       		.uleb128 0x6
 2451 000d 11       		.uleb128 0x11
 2452 000e 01       		.uleb128 0x1
 2453 000f 52       		.uleb128 0x52
 2454 0010 01       		.uleb128 0x1
 2455 0011 10       		.uleb128 0x10
 2456 0012 06       		.uleb128 0x6
 2457 0013 00       		.byte	0
 2458 0014 00       		.byte	0
 2459 0015 02       		.uleb128 0x2
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 70


 2460 0016 24       		.uleb128 0x24
 2461 0017 00       		.byte	0
 2462 0018 0B       		.uleb128 0xb
 2463 0019 0B       		.uleb128 0xb
 2464 001a 3E       		.uleb128 0x3e
 2465 001b 0B       		.uleb128 0xb
 2466 001c 03       		.uleb128 0x3
 2467 001d 0E       		.uleb128 0xe
 2468 001e 00       		.byte	0
 2469 001f 00       		.byte	0
 2470 0020 03       		.uleb128 0x3
 2471 0021 24       		.uleb128 0x24
 2472 0022 00       		.byte	0
 2473 0023 0B       		.uleb128 0xb
 2474 0024 0B       		.uleb128 0xb
 2475 0025 3E       		.uleb128 0x3e
 2476 0026 0B       		.uleb128 0xb
 2477 0027 03       		.uleb128 0x3
 2478 0028 08       		.uleb128 0x8
 2479 0029 00       		.byte	0
 2480 002a 00       		.byte	0
 2481 002b 04       		.uleb128 0x4
 2482 002c 16       		.uleb128 0x16
 2483 002d 00       		.byte	0
 2484 002e 03       		.uleb128 0x3
 2485 002f 0E       		.uleb128 0xe
 2486 0030 3A       		.uleb128 0x3a
 2487 0031 0B       		.uleb128 0xb
 2488 0032 3B       		.uleb128 0x3b
 2489 0033 0B       		.uleb128 0xb
 2490 0034 49       		.uleb128 0x49
 2491 0035 13       		.uleb128 0x13
 2492 0036 00       		.byte	0
 2493 0037 00       		.byte	0
 2494 0038 05       		.uleb128 0x5
 2495 0039 35       		.uleb128 0x35
 2496 003a 00       		.byte	0
 2497 003b 49       		.uleb128 0x49
 2498 003c 13       		.uleb128 0x13
 2499 003d 00       		.byte	0
 2500 003e 00       		.byte	0
 2501 003f 06       		.uleb128 0x6
 2502 0040 13       		.uleb128 0x13
 2503 0041 01       		.byte	0x1
 2504 0042 0B       		.uleb128 0xb
 2505 0043 0B       		.uleb128 0xb
 2506 0044 3A       		.uleb128 0x3a
 2507 0045 0B       		.uleb128 0xb
 2508 0046 3B       		.uleb128 0x3b
 2509 0047 0B       		.uleb128 0xb
 2510 0048 01       		.uleb128 0x1
 2511 0049 13       		.uleb128 0x13
 2512 004a 00       		.byte	0
 2513 004b 00       		.byte	0
 2514 004c 07       		.uleb128 0x7
 2515 004d 0D       		.uleb128 0xd
 2516 004e 00       		.byte	0
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 71


 2517 004f 03       		.uleb128 0x3
 2518 0050 0E       		.uleb128 0xe
 2519 0051 3A       		.uleb128 0x3a
 2520 0052 0B       		.uleb128 0xb
 2521 0053 3B       		.uleb128 0x3b
 2522 0054 0B       		.uleb128 0xb
 2523 0055 49       		.uleb128 0x49
 2524 0056 13       		.uleb128 0x13
 2525 0057 38       		.uleb128 0x38
 2526 0058 0A       		.uleb128 0xa
 2527 0059 00       		.byte	0
 2528 005a 00       		.byte	0
 2529 005b 08       		.uleb128 0x8
 2530 005c 2E       		.uleb128 0x2e
 2531 005d 01       		.byte	0x1
 2532 005e 3F       		.uleb128 0x3f
 2533 005f 0C       		.uleb128 0xc
 2534 0060 03       		.uleb128 0x3
 2535 0061 0E       		.uleb128 0xe
 2536 0062 3A       		.uleb128 0x3a
 2537 0063 0B       		.uleb128 0xb
 2538 0064 3B       		.uleb128 0x3b
 2539 0065 0B       		.uleb128 0xb
 2540 0066 27       		.uleb128 0x27
 2541 0067 0C       		.uleb128 0xc
 2542 0068 11       		.uleb128 0x11
 2543 0069 01       		.uleb128 0x1
 2544 006a 12       		.uleb128 0x12
 2545 006b 01       		.uleb128 0x1
 2546 006c 40       		.uleb128 0x40
 2547 006d 06       		.uleb128 0x6
 2548 006e 9642     		.uleb128 0x2116
 2549 0070 0C       		.uleb128 0xc
 2550 0071 01       		.uleb128 0x1
 2551 0072 13       		.uleb128 0x13
 2552 0073 00       		.byte	0
 2553 0074 00       		.byte	0
 2554 0075 09       		.uleb128 0x9
 2555 0076 05       		.uleb128 0x5
 2556 0077 00       		.byte	0
 2557 0078 03       		.uleb128 0x3
 2558 0079 0E       		.uleb128 0xe
 2559 007a 3A       		.uleb128 0x3a
 2560 007b 0B       		.uleb128 0xb
 2561 007c 3B       		.uleb128 0x3b
 2562 007d 0B       		.uleb128 0xb
 2563 007e 49       		.uleb128 0x49
 2564 007f 13       		.uleb128 0x13
 2565 0080 02       		.uleb128 0x2
 2566 0081 0A       		.uleb128 0xa
 2567 0082 00       		.byte	0
 2568 0083 00       		.byte	0
 2569 0084 0A       		.uleb128 0xa
 2570 0085 34       		.uleb128 0x34
 2571 0086 00       		.byte	0
 2572 0087 03       		.uleb128 0x3
 2573 0088 0E       		.uleb128 0xe
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 72


 2574 0089 3A       		.uleb128 0x3a
 2575 008a 0B       		.uleb128 0xb
 2576 008b 3B       		.uleb128 0x3b
 2577 008c 0B       		.uleb128 0xb
 2578 008d 49       		.uleb128 0x49
 2579 008e 13       		.uleb128 0x13
 2580 008f 02       		.uleb128 0x2
 2581 0090 0A       		.uleb128 0xa
 2582 0091 00       		.byte	0
 2583 0092 00       		.byte	0
 2584 0093 0B       		.uleb128 0xb
 2585 0094 2E       		.uleb128 0x2e
 2586 0095 01       		.byte	0x1
 2587 0096 3F       		.uleb128 0x3f
 2588 0097 0C       		.uleb128 0xc
 2589 0098 03       		.uleb128 0x3
 2590 0099 0E       		.uleb128 0xe
 2591 009a 3A       		.uleb128 0x3a
 2592 009b 0B       		.uleb128 0xb
 2593 009c 3B       		.uleb128 0x3b
 2594 009d 05       		.uleb128 0x5
 2595 009e 27       		.uleb128 0x27
 2596 009f 0C       		.uleb128 0xc
 2597 00a0 11       		.uleb128 0x11
 2598 00a1 01       		.uleb128 0x1
 2599 00a2 12       		.uleb128 0x12
 2600 00a3 01       		.uleb128 0x1
 2601 00a4 40       		.uleb128 0x40
 2602 00a5 06       		.uleb128 0x6
 2603 00a6 9642     		.uleb128 0x2116
 2604 00a8 0C       		.uleb128 0xc
 2605 00a9 01       		.uleb128 0x1
 2606 00aa 13       		.uleb128 0x13
 2607 00ab 00       		.byte	0
 2608 00ac 00       		.byte	0
 2609 00ad 0C       		.uleb128 0xc
 2610 00ae 05       		.uleb128 0x5
 2611 00af 00       		.byte	0
 2612 00b0 03       		.uleb128 0x3
 2613 00b1 0E       		.uleb128 0xe
 2614 00b2 3A       		.uleb128 0x3a
 2615 00b3 0B       		.uleb128 0xb
 2616 00b4 3B       		.uleb128 0x3b
 2617 00b5 05       		.uleb128 0x5
 2618 00b6 49       		.uleb128 0x49
 2619 00b7 13       		.uleb128 0x13
 2620 00b8 02       		.uleb128 0x2
 2621 00b9 0A       		.uleb128 0xa
 2622 00ba 00       		.byte	0
 2623 00bb 00       		.byte	0
 2624 00bc 0D       		.uleb128 0xd
 2625 00bd 2E       		.uleb128 0x2e
 2626 00be 00       		.byte	0
 2627 00bf 3F       		.uleb128 0x3f
 2628 00c0 0C       		.uleb128 0xc
 2629 00c1 03       		.uleb128 0x3
 2630 00c2 0E       		.uleb128 0xe
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 73


 2631 00c3 3A       		.uleb128 0x3a
 2632 00c4 0B       		.uleb128 0xb
 2633 00c5 3B       		.uleb128 0x3b
 2634 00c6 05       		.uleb128 0x5
 2635 00c7 27       		.uleb128 0x27
 2636 00c8 0C       		.uleb128 0xc
 2637 00c9 11       		.uleb128 0x11
 2638 00ca 01       		.uleb128 0x1
 2639 00cb 12       		.uleb128 0x12
 2640 00cc 01       		.uleb128 0x1
 2641 00cd 40       		.uleb128 0x40
 2642 00ce 06       		.uleb128 0x6
 2643 00cf 9742     		.uleb128 0x2117
 2644 00d1 0C       		.uleb128 0xc
 2645 00d2 00       		.byte	0
 2646 00d3 00       		.byte	0
 2647 00d4 0E       		.uleb128 0xe
 2648 00d5 2E       		.uleb128 0x2e
 2649 00d6 01       		.byte	0x1
 2650 00d7 3F       		.uleb128 0x3f
 2651 00d8 0C       		.uleb128 0xc
 2652 00d9 03       		.uleb128 0x3
 2653 00da 0E       		.uleb128 0xe
 2654 00db 3A       		.uleb128 0x3a
 2655 00dc 0B       		.uleb128 0xb
 2656 00dd 3B       		.uleb128 0x3b
 2657 00de 05       		.uleb128 0x5
 2658 00df 27       		.uleb128 0x27
 2659 00e0 0C       		.uleb128 0xc
 2660 00e1 49       		.uleb128 0x49
 2661 00e2 13       		.uleb128 0x13
 2662 00e3 11       		.uleb128 0x11
 2663 00e4 01       		.uleb128 0x1
 2664 00e5 12       		.uleb128 0x12
 2665 00e6 01       		.uleb128 0x1
 2666 00e7 40       		.uleb128 0x40
 2667 00e8 06       		.uleb128 0x6
 2668 00e9 9742     		.uleb128 0x2117
 2669 00eb 0C       		.uleb128 0xc
 2670 00ec 01       		.uleb128 0x1
 2671 00ed 13       		.uleb128 0x13
 2672 00ee 00       		.byte	0
 2673 00ef 00       		.byte	0
 2674 00f0 0F       		.uleb128 0xf
 2675 00f1 34       		.uleb128 0x34
 2676 00f2 00       		.byte	0
 2677 00f3 03       		.uleb128 0x3
 2678 00f4 08       		.uleb128 0x8
 2679 00f5 3A       		.uleb128 0x3a
 2680 00f6 0B       		.uleb128 0xb
 2681 00f7 3B       		.uleb128 0x3b
 2682 00f8 05       		.uleb128 0x5
 2683 00f9 49       		.uleb128 0x49
 2684 00fa 13       		.uleb128 0x13
 2685 00fb 02       		.uleb128 0x2
 2686 00fc 0A       		.uleb128 0xa
 2687 00fd 00       		.byte	0
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 74


 2688 00fe 00       		.byte	0
 2689 00ff 10       		.uleb128 0x10
 2690 0100 2E       		.uleb128 0x2e
 2691 0101 00       		.byte	0
 2692 0102 3F       		.uleb128 0x3f
 2693 0103 0C       		.uleb128 0xc
 2694 0104 03       		.uleb128 0x3
 2695 0105 0E       		.uleb128 0xe
 2696 0106 3A       		.uleb128 0x3a
 2697 0107 0B       		.uleb128 0xb
 2698 0108 3B       		.uleb128 0x3b
 2699 0109 05       		.uleb128 0x5
 2700 010a 27       		.uleb128 0x27
 2701 010b 0C       		.uleb128 0xc
 2702 010c 49       		.uleb128 0x49
 2703 010d 13       		.uleb128 0x13
 2704 010e 11       		.uleb128 0x11
 2705 010f 01       		.uleb128 0x1
 2706 0110 12       		.uleb128 0x12
 2707 0111 01       		.uleb128 0x1
 2708 0112 40       		.uleb128 0x40
 2709 0113 06       		.uleb128 0x6
 2710 0114 9742     		.uleb128 0x2117
 2711 0116 0C       		.uleb128 0xc
 2712 0117 00       		.byte	0
 2713 0118 00       		.byte	0
 2714 0119 11       		.uleb128 0x11
 2715 011a 34       		.uleb128 0x34
 2716 011b 00       		.byte	0
 2717 011c 03       		.uleb128 0x3
 2718 011d 0E       		.uleb128 0xe
 2719 011e 3A       		.uleb128 0x3a
 2720 011f 0B       		.uleb128 0xb
 2721 0120 3B       		.uleb128 0x3b
 2722 0121 05       		.uleb128 0x5
 2723 0122 49       		.uleb128 0x49
 2724 0123 13       		.uleb128 0x13
 2725 0124 02       		.uleb128 0x2
 2726 0125 0A       		.uleb128 0xa
 2727 0126 00       		.byte	0
 2728 0127 00       		.byte	0
 2729 0128 12       		.uleb128 0x12
 2730 0129 2E       		.uleb128 0x2e
 2731 012a 01       		.byte	0x1
 2732 012b 3F       		.uleb128 0x3f
 2733 012c 0C       		.uleb128 0xc
 2734 012d 03       		.uleb128 0x3
 2735 012e 0E       		.uleb128 0xe
 2736 012f 3A       		.uleb128 0x3a
 2737 0130 0B       		.uleb128 0xb
 2738 0131 3B       		.uleb128 0x3b
 2739 0132 05       		.uleb128 0x5
 2740 0133 27       		.uleb128 0x27
 2741 0134 0C       		.uleb128 0xc
 2742 0135 11       		.uleb128 0x11
 2743 0136 01       		.uleb128 0x1
 2744 0137 12       		.uleb128 0x12
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 75


 2745 0138 01       		.uleb128 0x1
 2746 0139 40       		.uleb128 0x40
 2747 013a 06       		.uleb128 0x6
 2748 013b 9742     		.uleb128 0x2117
 2749 013d 0C       		.uleb128 0xc
 2750 013e 01       		.uleb128 0x1
 2751 013f 13       		.uleb128 0x13
 2752 0140 00       		.byte	0
 2753 0141 00       		.byte	0
 2754 0142 13       		.uleb128 0x13
 2755 0143 0F       		.uleb128 0xf
 2756 0144 00       		.byte	0
 2757 0145 0B       		.uleb128 0xb
 2758 0146 0B       		.uleb128 0xb
 2759 0147 49       		.uleb128 0x49
 2760 0148 13       		.uleb128 0x13
 2761 0149 00       		.byte	0
 2762 014a 00       		.byte	0
 2763 014b 14       		.uleb128 0x14
 2764 014c 26       		.uleb128 0x26
 2765 014d 00       		.byte	0
 2766 014e 49       		.uleb128 0x49
 2767 014f 13       		.uleb128 0x13
 2768 0150 00       		.byte	0
 2769 0151 00       		.byte	0
 2770 0152 15       		.uleb128 0x15
 2771 0153 2E       		.uleb128 0x2e
 2772 0154 01       		.byte	0x1
 2773 0155 3F       		.uleb128 0x3f
 2774 0156 0C       		.uleb128 0xc
 2775 0157 03       		.uleb128 0x3
 2776 0158 0E       		.uleb128 0xe
 2777 0159 3A       		.uleb128 0x3a
 2778 015a 0B       		.uleb128 0xb
 2779 015b 3B       		.uleb128 0x3b
 2780 015c 05       		.uleb128 0x5
 2781 015d 27       		.uleb128 0x27
 2782 015e 0C       		.uleb128 0xc
 2783 015f 49       		.uleb128 0x49
 2784 0160 13       		.uleb128 0x13
 2785 0161 11       		.uleb128 0x11
 2786 0162 01       		.uleb128 0x1
 2787 0163 12       		.uleb128 0x12
 2788 0164 01       		.uleb128 0x1
 2789 0165 40       		.uleb128 0x40
 2790 0166 06       		.uleb128 0x6
 2791 0167 9642     		.uleb128 0x2116
 2792 0169 0C       		.uleb128 0xc
 2793 016a 01       		.uleb128 0x1
 2794 016b 13       		.uleb128 0x13
 2795 016c 00       		.byte	0
 2796 016d 00       		.byte	0
 2797 016e 16       		.uleb128 0x16
 2798 016f 34       		.uleb128 0x34
 2799 0170 00       		.byte	0
 2800 0171 03       		.uleb128 0x3
 2801 0172 0E       		.uleb128 0xe
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 76


 2802 0173 3A       		.uleb128 0x3a
 2803 0174 0B       		.uleb128 0xb
 2804 0175 3B       		.uleb128 0x3b
 2805 0176 0B       		.uleb128 0xb
 2806 0177 49       		.uleb128 0x49
 2807 0178 13       		.uleb128 0x13
 2808 0179 3F       		.uleb128 0x3f
 2809 017a 0C       		.uleb128 0xc
 2810 017b 02       		.uleb128 0x2
 2811 017c 0A       		.uleb128 0xa
 2812 017d 00       		.byte	0
 2813 017e 00       		.byte	0
 2814 017f 17       		.uleb128 0x17
 2815 0180 34       		.uleb128 0x34
 2816 0181 00       		.byte	0
 2817 0182 03       		.uleb128 0x3
 2818 0183 0E       		.uleb128 0xe
 2819 0184 3A       		.uleb128 0x3a
 2820 0185 0B       		.uleb128 0xb
 2821 0186 3B       		.uleb128 0x3b
 2822 0187 05       		.uleb128 0x5
 2823 0188 49       		.uleb128 0x49
 2824 0189 13       		.uleb128 0x13
 2825 018a 3F       		.uleb128 0x3f
 2826 018b 0C       		.uleb128 0xc
 2827 018c 3C       		.uleb128 0x3c
 2828 018d 0C       		.uleb128 0xc
 2829 018e 00       		.byte	0
 2830 018f 00       		.byte	0
 2831 0190 18       		.uleb128 0x18
 2832 0191 34       		.uleb128 0x34
 2833 0192 00       		.byte	0
 2834 0193 03       		.uleb128 0x3
 2835 0194 0E       		.uleb128 0xe
 2836 0195 3A       		.uleb128 0x3a
 2837 0196 0B       		.uleb128 0xb
 2838 0197 3B       		.uleb128 0x3b
 2839 0198 0B       		.uleb128 0xb
 2840 0199 49       		.uleb128 0x49
 2841 019a 13       		.uleb128 0x13
 2842 019b 3F       		.uleb128 0x3f
 2843 019c 0C       		.uleb128 0xc
 2844 019d 3C       		.uleb128 0x3c
 2845 019e 0C       		.uleb128 0xc
 2846 019f 00       		.byte	0
 2847 01a0 00       		.byte	0
 2848 01a1 19       		.uleb128 0x19
 2849 01a2 01       		.uleb128 0x1
 2850 01a3 01       		.byte	0x1
 2851 01a4 49       		.uleb128 0x49
 2852 01a5 13       		.uleb128 0x13
 2853 01a6 01       		.uleb128 0x1
 2854 01a7 13       		.uleb128 0x13
 2855 01a8 00       		.byte	0
 2856 01a9 00       		.byte	0
 2857 01aa 1A       		.uleb128 0x1a
 2858 01ab 21       		.uleb128 0x21
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 77


 2859 01ac 00       		.byte	0
 2860 01ad 49       		.uleb128 0x49
 2861 01ae 13       		.uleb128 0x13
 2862 01af 2F       		.uleb128 0x2f
 2863 01b0 0B       		.uleb128 0xb
 2864 01b1 00       		.byte	0
 2865 01b2 00       		.byte	0
 2866 01b3 00       		.byte	0
 2867              		.section	.debug_loc,"",%progbits
 2868              	.Ldebug_loc0:
 2869              	.LLST0:
 2870 0000 00000000 		.4byte	.LFB0
 2871 0004 02000000 		.4byte	.LCFI0
 2872 0008 0200     		.2byte	0x2
 2873 000a 7D       		.byte	0x7d
 2874 000b 00       		.sleb128 0
 2875 000c 02000000 		.4byte	.LCFI0
 2876 0010 04000000 		.4byte	.LCFI1
 2877 0014 0200     		.2byte	0x2
 2878 0016 7D       		.byte	0x7d
 2879 0017 08       		.sleb128 8
 2880 0018 04000000 		.4byte	.LCFI1
 2881 001c 06000000 		.4byte	.LCFI2
 2882 0020 0200     		.2byte	0x2
 2883 0022 7D       		.byte	0x7d
 2884 0023 10       		.sleb128 16
 2885 0024 06000000 		.4byte	.LCFI2
 2886 0028 42000000 		.4byte	.LFE0
 2887 002c 0200     		.2byte	0x2
 2888 002e 77       		.byte	0x77
 2889 002f 10       		.sleb128 16
 2890 0030 00000000 		.4byte	0
 2891 0034 00000000 		.4byte	0
 2892              	.LLST1:
 2893 0038 00000000 		.4byte	.LFB1
 2894 003c 02000000 		.4byte	.LCFI3
 2895 0040 0200     		.2byte	0x2
 2896 0042 7D       		.byte	0x7d
 2897 0043 00       		.sleb128 0
 2898 0044 02000000 		.4byte	.LCFI3
 2899 0048 04000000 		.4byte	.LCFI4
 2900 004c 0200     		.2byte	0x2
 2901 004e 7D       		.byte	0x7d
 2902 004f 08       		.sleb128 8
 2903 0050 04000000 		.4byte	.LCFI4
 2904 0054 06000000 		.4byte	.LCFI5
 2905 0058 0200     		.2byte	0x2
 2906 005a 7D       		.byte	0x7d
 2907 005b 10       		.sleb128 16
 2908 005c 06000000 		.4byte	.LCFI5
 2909 0060 8A020000 		.4byte	.LFE1
 2910 0064 0200     		.2byte	0x2
 2911 0066 77       		.byte	0x77
 2912 0067 10       		.sleb128 16
 2913 0068 00000000 		.4byte	0
 2914 006c 00000000 		.4byte	0
 2915              	.LLST2:
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 78


 2916 0070 00000000 		.4byte	.LFB2
 2917 0074 02000000 		.4byte	.LCFI6
 2918 0078 0200     		.2byte	0x2
 2919 007a 7D       		.byte	0x7d
 2920 007b 00       		.sleb128 0
 2921 007c 02000000 		.4byte	.LCFI6
 2922 0080 04000000 		.4byte	.LCFI7
 2923 0084 0200     		.2byte	0x2
 2924 0086 7D       		.byte	0x7d
 2925 0087 08       		.sleb128 8
 2926 0088 04000000 		.4byte	.LCFI7
 2927 008c 06000000 		.4byte	.LCFI8
 2928 0090 0200     		.2byte	0x2
 2929 0092 7D       		.byte	0x7d
 2930 0093 10       		.sleb128 16
 2931 0094 06000000 		.4byte	.LCFI8
 2932 0098 62010000 		.4byte	.LFE2
 2933 009c 0200     		.2byte	0x2
 2934 009e 77       		.byte	0x77
 2935 009f 10       		.sleb128 16
 2936 00a0 00000000 		.4byte	0
 2937 00a4 00000000 		.4byte	0
 2938              	.LLST3:
 2939 00a8 00000000 		.4byte	.LFB3
 2940 00ac 02000000 		.4byte	.LCFI9
 2941 00b0 0200     		.2byte	0x2
 2942 00b2 7D       		.byte	0x7d
 2943 00b3 00       		.sleb128 0
 2944 00b4 02000000 		.4byte	.LCFI9
 2945 00b8 04000000 		.4byte	.LCFI10
 2946 00bc 0200     		.2byte	0x2
 2947 00be 7D       		.byte	0x7d
 2948 00bf 04       		.sleb128 4
 2949 00c0 04000000 		.4byte	.LCFI10
 2950 00c4 88000000 		.4byte	.LFE3
 2951 00c8 0200     		.2byte	0x2
 2952 00ca 77       		.byte	0x77
 2953 00cb 04       		.sleb128 4
 2954 00cc 00000000 		.4byte	0
 2955 00d0 00000000 		.4byte	0
 2956              	.LLST4:
 2957 00d4 00000000 		.4byte	.LFB4
 2958 00d8 02000000 		.4byte	.LCFI11
 2959 00dc 0200     		.2byte	0x2
 2960 00de 7D       		.byte	0x7d
 2961 00df 00       		.sleb128 0
 2962 00e0 02000000 		.4byte	.LCFI11
 2963 00e4 04000000 		.4byte	.LCFI12
 2964 00e8 0200     		.2byte	0x2
 2965 00ea 7D       		.byte	0x7d
 2966 00eb 04       		.sleb128 4
 2967 00ec 04000000 		.4byte	.LCFI12
 2968 00f0 3E010000 		.4byte	.LFE4
 2969 00f4 0200     		.2byte	0x2
 2970 00f6 77       		.byte	0x77
 2971 00f7 04       		.sleb128 4
 2972 00f8 00000000 		.4byte	0
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 79


 2973 00fc 00000000 		.4byte	0
 2974              	.LLST5:
 2975 0100 00000000 		.4byte	.LFB5
 2976 0104 02000000 		.4byte	.LCFI13
 2977 0108 0200     		.2byte	0x2
 2978 010a 7D       		.byte	0x7d
 2979 010b 00       		.sleb128 0
 2980 010c 02000000 		.4byte	.LCFI13
 2981 0110 04000000 		.4byte	.LCFI14
 2982 0114 0200     		.2byte	0x2
 2983 0116 7D       		.byte	0x7d
 2984 0117 04       		.sleb128 4
 2985 0118 04000000 		.4byte	.LCFI14
 2986 011c 06000000 		.4byte	.LCFI15
 2987 0120 0200     		.2byte	0x2
 2988 0122 7D       		.byte	0x7d
 2989 0123 10       		.sleb128 16
 2990 0124 06000000 		.4byte	.LCFI15
 2991 0128 3C000000 		.4byte	.LFE5
 2992 012c 0200     		.2byte	0x2
 2993 012e 77       		.byte	0x77
 2994 012f 10       		.sleb128 16
 2995 0130 00000000 		.4byte	0
 2996 0134 00000000 		.4byte	0
 2997              	.LLST6:
 2998 0138 00000000 		.4byte	.LFB6
 2999 013c 02000000 		.4byte	.LCFI16
 3000 0140 0200     		.2byte	0x2
 3001 0142 7D       		.byte	0x7d
 3002 0143 00       		.sleb128 0
 3003 0144 02000000 		.4byte	.LCFI16
 3004 0148 04000000 		.4byte	.LCFI17
 3005 014c 0200     		.2byte	0x2
 3006 014e 7D       		.byte	0x7d
 3007 014f 04       		.sleb128 4
 3008 0150 04000000 		.4byte	.LCFI17
 3009 0154 18000000 		.4byte	.LFE6
 3010 0158 0200     		.2byte	0x2
 3011 015a 77       		.byte	0x77
 3012 015b 04       		.sleb128 4
 3013 015c 00000000 		.4byte	0
 3014 0160 00000000 		.4byte	0
 3015              	.LLST7:
 3016 0164 00000000 		.4byte	.LFB7
 3017 0168 02000000 		.4byte	.LCFI18
 3018 016c 0200     		.2byte	0x2
 3019 016e 7D       		.byte	0x7d
 3020 016f 00       		.sleb128 0
 3021 0170 02000000 		.4byte	.LCFI18
 3022 0174 04000000 		.4byte	.LCFI19
 3023 0178 0200     		.2byte	0x2
 3024 017a 7D       		.byte	0x7d
 3025 017b 04       		.sleb128 4
 3026 017c 04000000 		.4byte	.LCFI19
 3027 0180 06000000 		.4byte	.LCFI20
 3028 0184 0200     		.2byte	0x2
 3029 0186 7D       		.byte	0x7d
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 80


 3030 0187 10       		.sleb128 16
 3031 0188 06000000 		.4byte	.LCFI20
 3032 018c 44000000 		.4byte	.LFE7
 3033 0190 0200     		.2byte	0x2
 3034 0192 77       		.byte	0x77
 3035 0193 10       		.sleb128 16
 3036 0194 00000000 		.4byte	0
 3037 0198 00000000 		.4byte	0
 3038              	.LLST8:
 3039 019c 00000000 		.4byte	.LFB8
 3040 01a0 02000000 		.4byte	.LCFI21
 3041 01a4 0200     		.2byte	0x2
 3042 01a6 7D       		.byte	0x7d
 3043 01a7 00       		.sleb128 0
 3044 01a8 02000000 		.4byte	.LCFI21
 3045 01ac 04000000 		.4byte	.LCFI22
 3046 01b0 0200     		.2byte	0x2
 3047 01b2 7D       		.byte	0x7d
 3048 01b3 04       		.sleb128 4
 3049 01b4 04000000 		.4byte	.LCFI22
 3050 01b8 06000000 		.4byte	.LCFI23
 3051 01bc 0200     		.2byte	0x2
 3052 01be 7D       		.byte	0x7d
 3053 01bf 10       		.sleb128 16
 3054 01c0 06000000 		.4byte	.LCFI23
 3055 01c4 24000000 		.4byte	.LFE8
 3056 01c8 0200     		.2byte	0x2
 3057 01ca 77       		.byte	0x77
 3058 01cb 10       		.sleb128 16
 3059 01cc 00000000 		.4byte	0
 3060 01d0 00000000 		.4byte	0
 3061              	.LLST9:
 3062 01d4 00000000 		.4byte	.LFB9
 3063 01d8 02000000 		.4byte	.LCFI24
 3064 01dc 0200     		.2byte	0x2
 3065 01de 7D       		.byte	0x7d
 3066 01df 00       		.sleb128 0
 3067 01e0 02000000 		.4byte	.LCFI24
 3068 01e4 04000000 		.4byte	.LCFI25
 3069 01e8 0200     		.2byte	0x2
 3070 01ea 7D       		.byte	0x7d
 3071 01eb 04       		.sleb128 4
 3072 01ec 04000000 		.4byte	.LCFI25
 3073 01f0 06000000 		.4byte	.LCFI26
 3074 01f4 0200     		.2byte	0x2
 3075 01f6 7D       		.byte	0x7d
 3076 01f7 10       		.sleb128 16
 3077 01f8 06000000 		.4byte	.LCFI26
 3078 01fc 32000000 		.4byte	.LFE9
 3079 0200 0200     		.2byte	0x2
 3080 0202 77       		.byte	0x77
 3081 0203 10       		.sleb128 16
 3082 0204 00000000 		.4byte	0
 3083 0208 00000000 		.4byte	0
 3084              	.LLST10:
 3085 020c 00000000 		.4byte	.LFB10
 3086 0210 02000000 		.4byte	.LCFI27
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 81


 3087 0214 0200     		.2byte	0x2
 3088 0216 7D       		.byte	0x7d
 3089 0217 00       		.sleb128 0
 3090 0218 02000000 		.4byte	.LCFI27
 3091 021c 04000000 		.4byte	.LCFI28
 3092 0220 0200     		.2byte	0x2
 3093 0222 7D       		.byte	0x7d
 3094 0223 04       		.sleb128 4
 3095 0224 04000000 		.4byte	.LCFI28
 3096 0228 06000000 		.4byte	.LCFI29
 3097 022c 0200     		.2byte	0x2
 3098 022e 7D       		.byte	0x7d
 3099 022f 18       		.sleb128 24
 3100 0230 06000000 		.4byte	.LCFI29
 3101 0234 74000000 		.4byte	.LFE10
 3102 0238 0200     		.2byte	0x2
 3103 023a 77       		.byte	0x77
 3104 023b 18       		.sleb128 24
 3105 023c 00000000 		.4byte	0
 3106 0240 00000000 		.4byte	0
 3107              	.LLST11:
 3108 0244 00000000 		.4byte	.LFB11
 3109 0248 02000000 		.4byte	.LCFI30
 3110 024c 0200     		.2byte	0x2
 3111 024e 7D       		.byte	0x7d
 3112 024f 00       		.sleb128 0
 3113 0250 02000000 		.4byte	.LCFI30
 3114 0254 04000000 		.4byte	.LCFI31
 3115 0258 0200     		.2byte	0x2
 3116 025a 7D       		.byte	0x7d
 3117 025b 08       		.sleb128 8
 3118 025c 04000000 		.4byte	.LCFI31
 3119 0260 06000000 		.4byte	.LCFI32
 3120 0264 0200     		.2byte	0x2
 3121 0266 7D       		.byte	0x7d
 3122 0267 18       		.sleb128 24
 3123 0268 06000000 		.4byte	.LCFI32
 3124 026c 4E010000 		.4byte	.LFE11
 3125 0270 0200     		.2byte	0x2
 3126 0272 77       		.byte	0x77
 3127 0273 18       		.sleb128 24
 3128 0274 00000000 		.4byte	0
 3129 0278 00000000 		.4byte	0
 3130              	.LLST12:
 3131 027c 00000000 		.4byte	.LFB12
 3132 0280 02000000 		.4byte	.LCFI33
 3133 0284 0200     		.2byte	0x2
 3134 0286 7D       		.byte	0x7d
 3135 0287 00       		.sleb128 0
 3136 0288 02000000 		.4byte	.LCFI33
 3137 028c 04000000 		.4byte	.LCFI34
 3138 0290 0200     		.2byte	0x2
 3139 0292 7D       		.byte	0x7d
 3140 0293 08       		.sleb128 8
 3141 0294 04000000 		.4byte	.LCFI34
 3142 0298 06000000 		.4byte	.LCFI35
 3143 029c 0200     		.2byte	0x2
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 82


 3144 029e 7D       		.byte	0x7d
 3145 029f 20       		.sleb128 32
 3146 02a0 06000000 		.4byte	.LCFI35
 3147 02a4 98000000 		.4byte	.LFE12
 3148 02a8 0200     		.2byte	0x2
 3149 02aa 77       		.byte	0x77
 3150 02ab 20       		.sleb128 32
 3151 02ac 00000000 		.4byte	0
 3152 02b0 00000000 		.4byte	0
 3153              	.LLST13:
 3154 02b4 00000000 		.4byte	.LFB13
 3155 02b8 02000000 		.4byte	.LCFI36
 3156 02bc 0200     		.2byte	0x2
 3157 02be 7D       		.byte	0x7d
 3158 02bf 00       		.sleb128 0
 3159 02c0 02000000 		.4byte	.LCFI36
 3160 02c4 04000000 		.4byte	.LCFI37
 3161 02c8 0200     		.2byte	0x2
 3162 02ca 7D       		.byte	0x7d
 3163 02cb 04       		.sleb128 4
 3164 02cc 04000000 		.4byte	.LCFI37
 3165 02d0 06000000 		.4byte	.LCFI38
 3166 02d4 0200     		.2byte	0x2
 3167 02d6 7D       		.byte	0x7d
 3168 02d7 18       		.sleb128 24
 3169 02d8 06000000 		.4byte	.LCFI38
 3170 02dc 78000000 		.4byte	.LFE13
 3171 02e0 0200     		.2byte	0x2
 3172 02e2 77       		.byte	0x77
 3173 02e3 18       		.sleb128 24
 3174 02e4 00000000 		.4byte	0
 3175 02e8 00000000 		.4byte	0
 3176              	.LLST14:
 3177 02ec 00000000 		.4byte	.LFB14
 3178 02f0 02000000 		.4byte	.LCFI39
 3179 02f4 0200     		.2byte	0x2
 3180 02f6 7D       		.byte	0x7d
 3181 02f7 00       		.sleb128 0
 3182 02f8 02000000 		.4byte	.LCFI39
 3183 02fc 04000000 		.4byte	.LCFI40
 3184 0300 0200     		.2byte	0x2
 3185 0302 7D       		.byte	0x7d
 3186 0303 04       		.sleb128 4
 3187 0304 04000000 		.4byte	.LCFI40
 3188 0308 06000000 		.4byte	.LCFI41
 3189 030c 0200     		.2byte	0x2
 3190 030e 7D       		.byte	0x7d
 3191 030f 18       		.sleb128 24
 3192 0310 06000000 		.4byte	.LCFI41
 3193 0314 40000000 		.4byte	.LFE14
 3194 0318 0200     		.2byte	0x2
 3195 031a 77       		.byte	0x77
 3196 031b 18       		.sleb128 24
 3197 031c 00000000 		.4byte	0
 3198 0320 00000000 		.4byte	0
 3199              	.LLST15:
 3200 0324 00000000 		.4byte	.LFB15
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 83


 3201 0328 02000000 		.4byte	.LCFI42
 3202 032c 0200     		.2byte	0x2
 3203 032e 7D       		.byte	0x7d
 3204 032f 00       		.sleb128 0
 3205 0330 02000000 		.4byte	.LCFI42
 3206 0334 04000000 		.4byte	.LCFI43
 3207 0338 0200     		.2byte	0x2
 3208 033a 7D       		.byte	0x7d
 3209 033b 04       		.sleb128 4
 3210 033c 04000000 		.4byte	.LCFI43
 3211 0340 06000000 		.4byte	.LCFI44
 3212 0344 0200     		.2byte	0x2
 3213 0346 7D       		.byte	0x7d
 3214 0347 10       		.sleb128 16
 3215 0348 06000000 		.4byte	.LCFI44
 3216 034c 20000000 		.4byte	.LFE15
 3217 0350 0200     		.2byte	0x2
 3218 0352 77       		.byte	0x77
 3219 0353 10       		.sleb128 16
 3220 0354 00000000 		.4byte	0
 3221 0358 00000000 		.4byte	0
 3222              	.LLST16:
 3223 035c 00000000 		.4byte	.LFB16
 3224 0360 02000000 		.4byte	.LCFI45
 3225 0364 0200     		.2byte	0x2
 3226 0366 7D       		.byte	0x7d
 3227 0367 00       		.sleb128 0
 3228 0368 02000000 		.4byte	.LCFI45
 3229 036c 04000000 		.4byte	.LCFI46
 3230 0370 0200     		.2byte	0x2
 3231 0372 7D       		.byte	0x7d
 3232 0373 04       		.sleb128 4
 3233 0374 04000000 		.4byte	.LCFI46
 3234 0378 06000000 		.4byte	.LCFI47
 3235 037c 0200     		.2byte	0x2
 3236 037e 7D       		.byte	0x7d
 3237 037f 18       		.sleb128 24
 3238 0380 06000000 		.4byte	.LCFI47
 3239 0384 4E000000 		.4byte	.LFE16
 3240 0388 0200     		.2byte	0x2
 3241 038a 77       		.byte	0x77
 3242 038b 18       		.sleb128 24
 3243 038c 00000000 		.4byte	0
 3244 0390 00000000 		.4byte	0
 3245              	.LLST17:
 3246 0394 00000000 		.4byte	.LFB17
 3247 0398 02000000 		.4byte	.LCFI48
 3248 039c 0200     		.2byte	0x2
 3249 039e 7D       		.byte	0x7d
 3250 039f 00       		.sleb128 0
 3251 03a0 02000000 		.4byte	.LCFI48
 3252 03a4 04000000 		.4byte	.LCFI49
 3253 03a8 0200     		.2byte	0x2
 3254 03aa 7D       		.byte	0x7d
 3255 03ab 04       		.sleb128 4
 3256 03ac 04000000 		.4byte	.LCFI49
 3257 03b0 06000000 		.4byte	.LCFI50
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 84


 3258 03b4 0200     		.2byte	0x2
 3259 03b6 7D       		.byte	0x7d
 3260 03b7 10       		.sleb128 16
 3261 03b8 06000000 		.4byte	.LCFI50
 3262 03bc 54000000 		.4byte	.LFE17
 3263 03c0 0200     		.2byte	0x2
 3264 03c2 77       		.byte	0x77
 3265 03c3 10       		.sleb128 16
 3266 03c4 00000000 		.4byte	0
 3267 03c8 00000000 		.4byte	0
 3268              	.LLST18:
 3269 03cc 00000000 		.4byte	.LFB18
 3270 03d0 02000000 		.4byte	.LCFI51
 3271 03d4 0200     		.2byte	0x2
 3272 03d6 7D       		.byte	0x7d
 3273 03d7 00       		.sleb128 0
 3274 03d8 02000000 		.4byte	.LCFI51
 3275 03dc 04000000 		.4byte	.LCFI52
 3276 03e0 0200     		.2byte	0x2
 3277 03e2 7D       		.byte	0x7d
 3278 03e3 04       		.sleb128 4
 3279 03e4 04000000 		.4byte	.LCFI52
 3280 03e8 06000000 		.4byte	.LCFI53
 3281 03ec 0200     		.2byte	0x2
 3282 03ee 7D       		.byte	0x7d
 3283 03ef 10       		.sleb128 16
 3284 03f0 06000000 		.4byte	.LCFI53
 3285 03f4 34000000 		.4byte	.LFE18
 3286 03f8 0200     		.2byte	0x2
 3287 03fa 77       		.byte	0x77
 3288 03fb 10       		.sleb128 16
 3289 03fc 00000000 		.4byte	0
 3290 0400 00000000 		.4byte	0
 3291              		.section	.debug_aranges,"",%progbits
 3292 0000 AC000000 		.4byte	0xac
 3293 0004 0200     		.2byte	0x2
 3294 0006 00000000 		.4byte	.Ldebug_info0
 3295 000a 04       		.byte	0x4
 3296 000b 00       		.byte	0
 3297 000c 0000     		.2byte	0
 3298 000e 0000     		.2byte	0
 3299 0010 00000000 		.4byte	.LFB0
 3300 0014 42000000 		.4byte	.LFE0-.LFB0
 3301 0018 00000000 		.4byte	.LFB1
 3302 001c 8A020000 		.4byte	.LFE1-.LFB1
 3303 0020 00000000 		.4byte	.LFB2
 3304 0024 62010000 		.4byte	.LFE2-.LFB2
 3305 0028 00000000 		.4byte	.LFB3
 3306 002c 88000000 		.4byte	.LFE3-.LFB3
 3307 0030 00000000 		.4byte	.LFB4
 3308 0034 3E010000 		.4byte	.LFE4-.LFB4
 3309 0038 00000000 		.4byte	.LFB5
 3310 003c 3C000000 		.4byte	.LFE5-.LFB5
 3311 0040 00000000 		.4byte	.LFB6
 3312 0044 18000000 		.4byte	.LFE6-.LFB6
 3313 0048 00000000 		.4byte	.LFB7
 3314 004c 44000000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 85


 3315 0050 00000000 		.4byte	.LFB8
 3316 0054 24000000 		.4byte	.LFE8-.LFB8
 3317 0058 00000000 		.4byte	.LFB9
 3318 005c 32000000 		.4byte	.LFE9-.LFB9
 3319 0060 00000000 		.4byte	.LFB10
 3320 0064 74000000 		.4byte	.LFE10-.LFB10
 3321 0068 00000000 		.4byte	.LFB11
 3322 006c 4E010000 		.4byte	.LFE11-.LFB11
 3323 0070 00000000 		.4byte	.LFB12
 3324 0074 98000000 		.4byte	.LFE12-.LFB12
 3325 0078 00000000 		.4byte	.LFB13
 3326 007c 78000000 		.4byte	.LFE13-.LFB13
 3327 0080 00000000 		.4byte	.LFB14
 3328 0084 40000000 		.4byte	.LFE14-.LFB14
 3329 0088 00000000 		.4byte	.LFB15
 3330 008c 20000000 		.4byte	.LFE15-.LFB15
 3331 0090 00000000 		.4byte	.LFB16
 3332 0094 4E000000 		.4byte	.LFE16-.LFB16
 3333 0098 00000000 		.4byte	.LFB17
 3334 009c 54000000 		.4byte	.LFE17-.LFB17
 3335 00a0 00000000 		.4byte	.LFB18
 3336 00a4 34000000 		.4byte	.LFE18-.LFB18
 3337 00a8 00000000 		.4byte	0
 3338 00ac 00000000 		.4byte	0
 3339              		.section	.debug_ranges,"",%progbits
 3340              	.Ldebug_ranges0:
 3341 0000 00000000 		.4byte	.LFB0
 3342 0004 42000000 		.4byte	.LFE0
 3343 0008 00000000 		.4byte	.LFB1
 3344 000c 8A020000 		.4byte	.LFE1
 3345 0010 00000000 		.4byte	.LFB2
 3346 0014 62010000 		.4byte	.LFE2
 3347 0018 00000000 		.4byte	.LFB3
 3348 001c 88000000 		.4byte	.LFE3
 3349 0020 00000000 		.4byte	.LFB4
 3350 0024 3E010000 		.4byte	.LFE4
 3351 0028 00000000 		.4byte	.LFB5
 3352 002c 3C000000 		.4byte	.LFE5
 3353 0030 00000000 		.4byte	.LFB6
 3354 0034 18000000 		.4byte	.LFE6
 3355 0038 00000000 		.4byte	.LFB7
 3356 003c 44000000 		.4byte	.LFE7
 3357 0040 00000000 		.4byte	.LFB8
 3358 0044 24000000 		.4byte	.LFE8
 3359 0048 00000000 		.4byte	.LFB9
 3360 004c 32000000 		.4byte	.LFE9
 3361 0050 00000000 		.4byte	.LFB10
 3362 0054 74000000 		.4byte	.LFE10
 3363 0058 00000000 		.4byte	.LFB11
 3364 005c 4E010000 		.4byte	.LFE11
 3365 0060 00000000 		.4byte	.LFB12
 3366 0064 98000000 		.4byte	.LFE12
 3367 0068 00000000 		.4byte	.LFB13
 3368 006c 78000000 		.4byte	.LFE13
 3369 0070 00000000 		.4byte	.LFB14
 3370 0074 40000000 		.4byte	.LFE14
 3371 0078 00000000 		.4byte	.LFB15
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 86


 3372 007c 20000000 		.4byte	.LFE15
 3373 0080 00000000 		.4byte	.LFB16
 3374 0084 4E000000 		.4byte	.LFE16
 3375 0088 00000000 		.4byte	.LFB17
 3376 008c 54000000 		.4byte	.LFE17
 3377 0090 00000000 		.4byte	.LFB18
 3378 0094 34000000 		.4byte	.LFE18
 3379 0098 00000000 		.4byte	0
 3380 009c 00000000 		.4byte	0
 3381              		.section	.debug_line,"",%progbits
 3382              	.Ldebug_line0:
 3383 0000 A6020000 		.section	.debug_str,"MS",%progbits,1
 3383      02005E00 
 3383      00000201 
 3383      FB0E0D00 
 3383      01010101 
 3384              	.LASF10:
 3385 0000 75696E74 		.ascii	"uint16\000"
 3385      313600
 3386              	.LASF57:
 3387 0007 55534246 		.ascii	"USBFS_initVar\000"
 3387      535F696E 
 3387      69745661 
 3387      7200
 3388              	.LASF51:
 3389 0015 55534246 		.ascii	"USBFS_Force\000"
 3389      535F466F 
 3389      72636500 
 3390              	.LASF7:
 3391 0021 6C6F6E67 		.ascii	"long long unsigned int\000"
 3391      206C6F6E 
 3391      6720756E 
 3391      7369676E 
 3391      65642069 
 3392              	.LASF53:
 3393 0038 55534246 		.ascii	"USBFS_GetEPAckState\000"
 3393      535F4765 
 3393      74455041 
 3393      636B5374 
 3393      61746500 
 3394              	.LASF22:
 3395 004c 61646472 		.ascii	"addr\000"
 3395      00
 3396              	.LASF39:
 3397 0051 696E7465 		.ascii	"interfaceNumber\000"
 3397      72666163 
 3397      654E756D 
 3397      62657200 
 3398              	.LASF41:
 3399 0061 65704E75 		.ascii	"epNumber\000"
 3399      6D626572 
 3399      00
 3400              	.LASF28:
 3401 006a 64657669 		.ascii	"device\000"
 3401      636500
 3402              	.LASF6:
 3403 0071 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 87


 3403      206C6F6E 
 3403      6720696E 
 3403      7400
 3404              	.LASF0:
 3405 007f 7369676E 		.ascii	"signed char\000"
 3405      65642063 
 3405      68617200 
 3406              	.LASF69:
 3407 008b 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\USBFS.c\000"
 3407      6E657261 
 3407      7465645F 
 3407      536F7572 
 3407      63655C50 
 3408              	.LASF37:
 3409 00ac 55534246 		.ascii	"USBFS_IsConfigurationChanged\000"
 3409      535F4973 
 3409      436F6E66 
 3409      69677572 
 3409      6174696F 
 3410              	.LASF65:
 3411 00c9 55534246 		.ascii	"USBFS_deviceAddress\000"
 3411      535F6465 
 3411      76696365 
 3411      41646472 
 3411      65737300 
 3412              	.LASF63:
 3413 00dd 55534246 		.ascii	"USBFS_interfaceNumber\000"
 3413      535F696E 
 3413      74657266 
 3413      6163654E 
 3413      756D6265 
 3414              	.LASF56:
 3415 00f3 55534246 		.ascii	"USBFS_RWUEnabled\000"
 3415      535F5257 
 3415      55456E61 
 3415      626C6564 
 3415      00
 3416              	.LASF54:
 3417 0104 55534246 		.ascii	"USBFS_SetPowerStatus\000"
 3417      535F5365 
 3417      74506F77 
 3417      65725374 
 3417      61747573 
 3418              	.LASF34:
 3419 0119 55534246 		.ascii	"USBFS_Stop\000"
 3419      535F5374 
 3419      6F7000
 3420              	.LASF4:
 3421 0124 6C6F6E67 		.ascii	"long int\000"
 3421      20696E74 
 3421      00
 3422              	.LASF71:
 3423 012d 55534246 		.ascii	"USBFS_GetConfiguration\000"
 3423      535F4765 
 3423      74436F6E 
 3423      66696775 
 3423      72617469 
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 88


 3424              	.LASF9:
 3425 0144 75696E74 		.ascii	"uint8\000"
 3425      3800
 3426              	.LASF21:
 3427 014a 6570546F 		.ascii	"epToggle\000"
 3427      67676C65 
 3427      00
 3428              	.LASF13:
 3429 0153 646F7562 		.ascii	"double\000"
 3429      6C6500
 3430              	.LASF55:
 3431 015a 706F7765 		.ascii	"powerStatus\000"
 3431      72537461 
 3431      74757300 
 3432              	.LASF11:
 3433 0166 75696E74 		.ascii	"uint32\000"
 3433      333200
 3434              	.LASF32:
 3435 016d 55534246 		.ascii	"USBFS_InitComponent\000"
 3435      535F496E 
 3435      6974436F 
 3435      6D706F6E 
 3435      656E7400 
 3436              	.LASF45:
 3437 0181 70446174 		.ascii	"pData\000"
 3437      6100
 3438              	.LASF60:
 3439 0187 55534246 		.ascii	"USBFS_configuration\000"
 3439      535F636F 
 3439      6E666967 
 3439      75726174 
 3439      696F6E00 
 3440              	.LASF23:
 3441 019b 65704D6F 		.ascii	"epMode\000"
 3441      646500
 3442              	.LASF47:
 3443 01a2 55534246 		.ascii	"USBFS_ReadOutEP\000"
 3443      535F5265 
 3443      61644F75 
 3443      74455000 
 3444              	.LASF8:
 3445 01b2 756E7369 		.ascii	"unsigned int\000"
 3445      676E6564 
 3445      20696E74 
 3445      00
 3446              	.LASF5:
 3447 01bf 6C6F6E67 		.ascii	"long unsigned int\000"
 3447      20756E73 
 3447      69676E65 
 3447      6420696E 
 3447      7400
 3448              	.LASF3:
 3449 01d1 73686F72 		.ascii	"short unsigned int\000"
 3449      7420756E 
 3449      7369676E 
 3449      65642069 
 3449      6E7400
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 89


 3450              	.LASF26:
 3451 01e4 696E7465 		.ascii	"interface\000"
 3451      72666163 
 3451      6500
 3452              	.LASF61:
 3453 01ee 55534246 		.ascii	"USBFS_configurationChanged\000"
 3453      535F636F 
 3453      6E666967 
 3453      75726174 
 3453      696F6E43 
 3454              	.LASF16:
 3455 0209 72656733 		.ascii	"reg32\000"
 3455      3200
 3456              	.LASF20:
 3457 020f 68774570 		.ascii	"hwEpState\000"
 3457      53746174 
 3457      6500
 3458              	.LASF17:
 3459 0219 73697A65 		.ascii	"sizetype\000"
 3459      74797065 
 3459      00
 3460              	.LASF18:
 3461 0222 61747472 		.ascii	"attrib\000"
 3461      696200
 3462              	.LASF31:
 3463 0229 55534246 		.ascii	"USBFS_Init\000"
 3463      535F496E 
 3463      697400
 3464              	.LASF12:
 3465 0234 666C6F61 		.ascii	"float\000"
 3465      7400
 3466              	.LASF19:
 3467 023a 61706945 		.ascii	"apiEpState\000"
 3467      70537461 
 3467      746500
 3468              	.LASF66:
 3469 0245 55534246 		.ascii	"USBFS_EP\000"
 3469      535F4550 
 3469      00
 3470              	.LASF68:
 3471 024e 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 3471      4320342E 
 3471      372E3320 
 3471      32303133 
 3471      30333132 
 3472 0281 616E6368 		.ascii	"anch revision 196615]\000"
 3472      20726576 
 3472      6973696F 
 3472      6E203139 
 3472      36363135 
 3473              	.LASF15:
 3474 0297 72656738 		.ascii	"reg8\000"
 3474      00
 3475              	.LASF59:
 3476 029c 55534246 		.ascii	"USBFS_transferState\000"
 3476      535F7472 
 3476      616E7366 
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 90


 3476      65725374 
 3476      61746500 
 3477              	.LASF1:
 3478 02b0 756E7369 		.ascii	"unsigned char\000"
 3478      676E6564 
 3478      20636861 
 3478      7200
 3479              	.LASF2:
 3480 02be 73686F72 		.ascii	"short int\000"
 3480      7420696E 
 3480      7400
 3481              	.LASF49:
 3482 02c8 55534246 		.ascii	"USBFS_EnableOutEP\000"
 3482      535F456E 
 3482      61626C65 
 3482      4F757445 
 3482      5000
 3483              	.LASF38:
 3484 02da 55534246 		.ascii	"USBFS_GetInterfaceSetting\000"
 3484      535F4765 
 3484      74496E74 
 3484      65726661 
 3484      63655365 
 3485              	.LASF67:
 3486 02f4 55534246 		.ascii	"USBFS_lastPacketSize\000"
 3486      535F6C61 
 3486      73745061 
 3486      636B6574 
 3486      53697A65 
 3487              	.LASF64:
 3488 0309 55534246 		.ascii	"USBFS_interfaceSetting\000"
 3488      535F696E 
 3488      74657266 
 3488      61636553 
 3488      65747469 
 3489              	.LASF27:
 3490 0320 545F5553 		.ascii	"T_USBFS_EP_CTL_BLOCK\000"
 3490      4246535F 
 3490      45505F43 
 3490      544C5F42 
 3490      4C4F434B 
 3491              	.LASF58:
 3492 0335 55534246 		.ascii	"USBFS_device\000"
 3492      535F6465 
 3492      76696365 
 3492      00
 3493              	.LASF52:
 3494 0342 62537461 		.ascii	"bState\000"
 3494      746500
 3495              	.LASF70:
 3496 0349 433A5C55 		.ascii	"C:\\Users\\Victor Ruela\\Desktop\\IC\\CTPmag\\teste"
 3496      73657273 
 3496      5C566963 
 3496      746F7220 
 3496      5275656C 
 3497 0376 5553425C 		.ascii	"USB\\TesteUSB\\TesteUSB.cydsn\000"
 3497      54657374 
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 91


 3497      65555342 
 3497      5C546573 
 3497      74655553 
 3498              	.LASF46:
 3499 0392 6C656E67 		.ascii	"length\000"
 3499      746800
 3500              	.LASF14:
 3501 0399 63686172 		.ascii	"char\000"
 3501      00
 3502              	.LASF29:
 3503 039e 6D6F6465 		.ascii	"mode\000"
 3503      00
 3504              	.LASF25:
 3505 03a3 62756666 		.ascii	"bufferSize\000"
 3505      65725369 
 3505      7A6500
 3506              	.LASF30:
 3507 03ae 55534246 		.ascii	"USBFS_Start\000"
 3507      535F5374 
 3507      61727400 
 3508              	.LASF24:
 3509 03ba 62756666 		.ascii	"buffOffset\000"
 3509      4F666673 
 3509      657400
 3510              	.LASF62:
 3511 03c5 55534246 		.ascii	"USBFS_deviceStatus\000"
 3511      535F6465 
 3511      76696365 
 3511      53746174 
 3511      757300
 3512              	.LASF40:
 3513 03d8 55534246 		.ascii	"USBFS_GetEPState\000"
 3513      535F4765 
 3513      74455053 
 3513      74617465 
 3513      00
 3514              	.LASF33:
 3515 03e9 55534246 		.ascii	"USBFS_ReInitComponent\000"
 3515      535F5265 
 3515      496E6974 
 3515      436F6D70 
 3515      6F6E656E 
 3516              	.LASF35:
 3517 03ff 656E6162 		.ascii	"enableInterrupts\000"
 3517      6C65496E 
 3517      74657272 
 3517      75707473 
 3517      00
 3518              	.LASF36:
 3519 0410 55534246 		.ascii	"USBFS_CheckActivity\000"
 3519      535F4368 
 3519      65636B41 
 3519      63746976 
 3519      69747900 
 3520              	.LASF48:
 3521 0424 78666572 		.ascii	"xferCount\000"
 3521      436F756E 
ARM GAS  C:\Users\VICTOR~1\AppData\Local\Temp\ccn4KLip.s 			page 92


 3521      7400
 3522              	.LASF50:
 3523 042e 55534246 		.ascii	"USBFS_DisableOutEP\000"
 3523      535F4469 
 3523      7361626C 
 3523      654F7574 
 3523      455000
 3524              	.LASF44:
 3525 0441 55534246 		.ascii	"USBFS_LoadInEP\000"
 3525      535F4C6F 
 3525      6164496E 
 3525      455000
 3526              	.LASF42:
 3527 0450 55534246 		.ascii	"USBFS_GetEPCount\000"
 3527      535F4765 
 3527      74455043 
 3527      6F756E74 
 3527      00
 3528              	.LASF43:
 3529 0461 72657375 		.ascii	"result\000"
 3529      6C7400
 3530              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
